import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, Optional, HostBinding, NgModule } from '@angular/core';
import * as i2 from '@taiga-ui/cdk';
import { TUI_FIRST_DAY, TUI_LAST_DAY, ALWAYS_FALSE_HANDLER, TuiDay, TuiDayRange, TuiActiveZoneDirective, TuiActiveZoneModule } from '@taiga-ui/cdk';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import * as i1 from '@taiga-ui/addon-mobile/components/mobile-calendar';
import { TuiMobileCalendarModule } from '@taiga-ui/addon-mobile/components/mobile-calendar';
import * as i3 from '@taiga-ui/kit';
import { TuiInputDateComponent, TuiInputDateMultiComponent, TuiInputDateRangeComponent, TUI_MOBILE_CALENDAR } from '@taiga-ui/kit';
import * as i5 from '@taiga-ui/addon-mobile/services';
import { TuiKeyboardService } from '@taiga-ui/addon-mobile/services';
import * as i4 from '@taiga-ui/core';
import { TUI_ANIMATIONS_DURATION, TuiHostedDropdownComponent, tuiSlideInTop, tuiFadeIn } from '@taiga-ui/core';

class TuiMobileCalendarDialogComponent {
    constructor(context) {
        this.context = context;
    }
    get single() {
        var _a;
        return ((_a = this.context.data) === null || _a === void 0 ? void 0 : _a.single) === true;
    }
    get multi() {
        var _a;
        return ((_a = this.context.data) === null || _a === void 0 ? void 0 : _a.multi) === true;
    }
    get min() {
        var _a;
        return ((_a = this.context.data) === null || _a === void 0 ? void 0 : _a.min) || TUI_FIRST_DAY;
    }
    get max() {
        var _a;
        return ((_a = this.context.data) === null || _a === void 0 ? void 0 : _a.max) || TUI_LAST_DAY;
    }
    get disabledItemHandler() {
        var _a;
        return ((_a = this.context.data) === null || _a === void 0 ? void 0 : _a.disabledItemHandler) || ALWAYS_FALSE_HANDLER;
    }
}
TuiMobileCalendarDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDialogComponent, deps: [{ token: POLYMORPHEUS_CONTEXT }], target: i0.ɵɵFactoryTarget.Component });
TuiMobileCalendarDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMobileCalendarDialogComponent, selector: "tui-mobile-calendar-dialog", ngImport: i0, template: "<tui-mobile-calendar\n    [disabledItemHandler]=\"disabledItemHandler\"\n    [max]=\"max\"\n    [min]=\"min\"\n    [multi]=\"multi\"\n    [single]=\"single\"\n    (cancel)=\"context.$implicit.complete()\"\n    (confirm)=\"context.completeWith($event)\"\n></tui-mobile-calendar>\n", styles: [":host{display:block;height:100vh;margin:-1.5rem -1.5rem -2rem}\n"], components: [{ type: i1.TuiMobileCalendarComponent, selector: "tui-mobile-calendar", inputs: ["single", "multi", "min", "max", "disabledItemHandler", "value"], outputs: ["cancel", "confirm", "valueChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-mobile-calendar-dialog',
                    templateUrl: './mobile-calendar-dialog.template.html',
                    styleUrls: ['./mobile-calendar-dialog.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }]; } });

class TuiMobileCalendarDropdownComponent {
    constructor(zone, duration, single, multi, range, dropdown, keyboard) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        this.zone = zone;
        this.duration = duration;
        this.single = single;
        this.multi = multi;
        this.range = range;
        this.dropdown = dropdown;
        this.keyboard = keyboard;
        this.animation = {
            value: '',
            params: {
                start: '100vh',
                duration: this.duration,
            },
        };
        this.min = ((_a = this.single) === null || _a === void 0 ? void 0 : _a.min) ||
            ((_b = this.multi) === null || _b === void 0 ? void 0 : _b.min) ||
            ((_c = this.range) === null || _c === void 0 ? void 0 : _c.maxLengthMapper(this.range.computedMin, this.range.value, this.range.maxLength, true)) ||
            TUI_FIRST_DAY;
        this.max = ((_d = this.single) === null || _d === void 0 ? void 0 : _d.max) ||
            ((_e = this.multi) === null || _e === void 0 ? void 0 : _e.max) ||
            ((_f = this.range) === null || _f === void 0 ? void 0 : _f.maxLengthMapper(this.range.computedMax, this.range.value, this.range.maxLength, false)) ||
            TUI_LAST_DAY;
        this.disabledItemHandler = ((_g = this.single) === null || _g === void 0 ? void 0 : _g.disabledItemHandler) ||
            ((_h = this.multi) === null || _h === void 0 ? void 0 : _h.disabledItemHandler) ||
            ((_j = this.range) === null || _j === void 0 ? void 0 : _j.disabledItemHandler) ||
            ALWAYS_FALSE_HANDLER;
        this.keyboard.hide();
    }
    close() {
        this.dropdown.computedHost.focus();
        this.dropdown.updateOpen(false);
        this.keyboard.show();
    }
    confirm(value) {
        const control = this.single || this.multi || this.range;
        if (control) {
            control.value =
                this.range && value instanceof TuiDay
                    ? new TuiDayRange(value, value)
                    : value;
        }
        this.close();
    }
}
TuiMobileCalendarDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDropdownComponent, deps: [{ token: TuiActiveZoneDirective }, { token: TUI_ANIMATIONS_DURATION }, { token: TuiInputDateComponent, optional: true }, { token: TuiInputDateMultiComponent, optional: true }, { token: TuiInputDateRangeComponent, optional: true }, { token: TuiHostedDropdownComponent }, { token: TuiKeyboardService }], target: i0.ɵɵFactoryTarget.Component });
TuiMobileCalendarDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMobileCalendarDropdownComponent, selector: "tui-mobile-calendar-dropdown", host: { properties: { "@tuiSlideInTop": "this.animation", "@tuiFadeIn": "this.animation" } }, ngImport: i0, template: "<tui-mobile-calendar\n    tuiActiveZone\n    [disabledItemHandler]=\"disabledItemHandler\"\n    [max]=\"max\"\n    [min]=\"min\"\n    [multi]=\"!!multi\"\n    [single]=\"!!single\"\n    (cancel)=\"close()\"\n    (confirm)=\"confirm($event)\"\n></tui-mobile-calendar>\n", styles: [":host{position:fixed;top:0;left:0;width:100%;height:100%;background:var(--tui-elevation-01);box-shadow:0 10rem var(--tui-elevation-01),0 -90vh 1rem 2rem #000000bf}\n"], components: [{ type: i1.TuiMobileCalendarComponent, selector: "tui-mobile-calendar", inputs: ["single", "multi", "min", "max", "disabledItemHandler", "value"], outputs: ["cancel", "confirm", "valueChange"] }], directives: [{ type: i2.TuiActiveZoneDirective, selector: "[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)", inputs: ["tuiActiveZoneParent"], outputs: ["tuiActiveZoneChange"], exportAs: ["tuiActiveZone"] }], animations: [tuiSlideInTop, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDropdownComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-mobile-calendar-dropdown',
                    templateUrl: './mobile-calendar-dropdown.template.html',
                    styleUrls: ['./mobile-calendar-dropdown.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [tuiSlideInTop, tuiFadeIn],
                }]
        }], ctorParameters: function () { return [{ type: i2.TuiActiveZoneDirective, decorators: [{
                    type: Inject,
                    args: [TuiActiveZoneDirective]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATIONS_DURATION]
                }] }, { type: i3.TuiInputDateComponent, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiInputDateComponent]
                }] }, { type: i3.TuiInputDateMultiComponent, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiInputDateMultiComponent]
                }] }, { type: i3.TuiInputDateRangeComponent, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiInputDateRangeComponent]
                }] }, { type: i4.TuiHostedDropdownComponent, decorators: [{
                    type: Inject,
                    args: [TuiHostedDropdownComponent]
                }] }, { type: i5.TuiKeyboardService, decorators: [{
                    type: Inject,
                    args: [TuiKeyboardService]
                }] }]; }, propDecorators: { animation: [{
                type: HostBinding,
                args: ['@tuiSlideInTop']
            }, {
                type: HostBinding,
                args: ['@tuiFadeIn']
            }] } });

class TuiMobileCalendarDialogModule {
}
TuiMobileCalendarDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiMobileCalendarDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDialogModule, declarations: [TuiMobileCalendarDialogComponent, TuiMobileCalendarDropdownComponent], imports: [TuiMobileCalendarModule, TuiActiveZoneModule], exports: [TuiMobileCalendarDialogComponent] });
TuiMobileCalendarDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDialogModule, providers: [
        {
            provide: TUI_MOBILE_CALENDAR,
            useValue: TuiMobileCalendarDropdownComponent,
        },
    ], imports: [[TuiMobileCalendarModule, TuiActiveZoneModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileCalendarDialogModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [TuiMobileCalendarModule, TuiActiveZoneModule],
                    declarations: [TuiMobileCalendarDialogComponent, TuiMobileCalendarDropdownComponent],
                    providers: [
                        {
                            provide: TUI_MOBILE_CALENDAR,
                            useValue: TuiMobileCalendarDropdownComponent,
                        },
                    ],
                    exports: [TuiMobileCalendarDialogComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiMobileCalendarDialogComponent, TuiMobileCalendarDialogModule, TuiMobileCalendarDropdownComponent };
//# sourceMappingURL=taiga-ui-addon-mobile-components-mobile-calendar-dialog.js.map
