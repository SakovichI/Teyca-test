import { Inject, Injectable } from '@angular/core';
import { TuiSheetDialogService } from '@taiga-ui/addon-mobile/components/sheet-dialog';
import { TUI_IS_MOBILE, tuiIsString } from '@taiga-ui/cdk';
import { TuiDialogService } from '@taiga-ui/core';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@taiga-ui/addon-mobile/components/sheet-dialog";
/**
 * Same as `TuiDialogService` but automatically switches to `TuiSheetDialogService` on mobile
 */
export class TuiResponsiveDialogService {
    constructor(isMobile, dialogs, sheets) {
        this.isMobile = isMobile;
        this.dialogs = dialogs;
        this.sheets = sheets;
    }
    open(content, options = {}) {
        return this.isMobile
            ? this.sheets.open(content, options)
            : this.dialogs.open(content, Object.assign(Object.assign({}, options), { label: tuiIsString(options.label) ? options.label : '' }));
    }
}
TuiResponsiveDialogService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiResponsiveDialogService, deps: [{ token: TUI_IS_MOBILE }, { token: TuiDialogService }, { token: TuiSheetDialogService }], target: i0.ɵɵFactoryTarget.Injectable });
TuiResponsiveDialogService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiResponsiveDialogService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiResponsiveDialogService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_MOBILE]
                }] }, { type: i1.TuiDialogService, decorators: [{
                    type: Inject,
                    args: [TuiDialogService]
                }] }, { type: i2.TuiSheetDialogService, decorators: [{
                    type: Inject,
                    args: [TuiSheetDialogService]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2l2ZS1kaWFsb2cuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLW1vYmlsZS9kaXJlY3RpdmVzL3Jlc3BvbnNpdmUtZGlhbG9nL3Jlc3BvbnNpdmUtZGlhbG9nLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sZ0RBQWdELENBQUM7QUFDckYsT0FBTyxFQUFDLGFBQWEsRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFxQyxnQkFBZ0IsRUFBQyxNQUFNLGdCQUFnQixDQUFDOzs7O0FBV3BGOztHQUVHO0FBSUgsTUFBTSxPQUFPLDBCQUEwQjtJQUNuQyxZQUNvQyxRQUFpQixFQUNkLE9BQXlCLEVBQ3BCLE1BQTZCO1FBRnJDLGFBQVEsR0FBUixRQUFRLENBQVM7UUFDZCxZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUNwQixXQUFNLEdBQU4sTUFBTSxDQUF1QjtJQUN0RSxDQUFDO0lBRUosSUFBSSxDQUNBLE9BRUMsRUFDRCxVQUFvRCxFQUFFO1FBRXRELE9BQU8sSUFBSSxDQUFDLFFBQVE7WUFDaEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUM7WUFDcEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sa0NBQ2xCLE9BQU8sS0FDVixLQUFLLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUN4RCxDQUFDO0lBQ2IsQ0FBQzs7d0hBbkJRLDBCQUEwQixrQkFFdkIsYUFBYSxhQUNiLGdCQUFnQixhQUNoQixxQkFBcUI7NEhBSnhCLDBCQUEwQixjQUZ2QixNQUFNOzRGQUVULDBCQUEwQjtrQkFIdEMsVUFBVTttQkFBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckI7OzBCQUdRLE1BQU07MkJBQUMsYUFBYTs7MEJBQ3BCLE1BQU07MkJBQUMsZ0JBQWdCOzswQkFDdkIsTUFBTTsyQkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdCwgSW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7VHVpU2hlZXREaWFsb2dPcHRpb25zfSBmcm9tICdAdGFpZ2EtdWkvYWRkb24tbW9iaWxlL2NvbXBvbmVudHMvc2hlZXQtZGlhbG9nJztcbmltcG9ydCB7VHVpU2hlZXREaWFsb2dTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvYWRkb24tbW9iaWxlL2NvbXBvbmVudHMvc2hlZXQtZGlhbG9nJztcbmltcG9ydCB7VFVJX0lTX01PQklMRSwgdHVpSXNTdHJpbmd9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlEaWFsb2dDb250ZXh0LCBUdWlEaWFsb2dPcHRpb25zLCBUdWlEaWFsb2dTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQgdHlwZSB7UG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcbmltcG9ydCB0eXBlIHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGludGVyZmFjZSBUdWlSZXNwb25zaXZlRGlhbG9nT3B0aW9uczxJID0gdW5kZWZpbmVkPlxuICAgIGV4dGVuZHMgT21pdDxUdWlEaWFsb2dPcHRpb25zPEk+LCAnY2xvc2VhYmxlJyB8ICdsYWJlbCc+LFxuICAgICAgICBUdWlTaGVldERpYWxvZ09wdGlvbnM8ST4ge1xuICAgIHJlYWRvbmx5IGxhYmVsOiBQb2x5bW9ycGhldXNDb250ZW50O1xuICAgIHJlYWRvbmx5IGNsb3NlYWJsZTogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBTYW1lIGFzIGBUdWlEaWFsb2dTZXJ2aWNlYCBidXQgYXV0b21hdGljYWxseSBzd2l0Y2hlcyB0byBgVHVpU2hlZXREaWFsb2dTZXJ2aWNlYCBvbiBtb2JpbGVcbiAqL1xuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUmVzcG9uc2l2ZURpYWxvZ1NlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9JU19NT0JJTEUpIHJlYWRvbmx5IGlzTW9iaWxlOiBib29sZWFuLFxuICAgICAgICBASW5qZWN0KFR1aURpYWxvZ1NlcnZpY2UpIHJlYWRvbmx5IGRpYWxvZ3M6IFR1aURpYWxvZ1NlcnZpY2UsXG4gICAgICAgIEBJbmplY3QoVHVpU2hlZXREaWFsb2dTZXJ2aWNlKSByZWFkb25seSBzaGVldHM6IFR1aVNoZWV0RGlhbG9nU2VydmljZSxcbiAgICApIHt9XG5cbiAgICBvcGVuPEcgPSB2b2lkPihcbiAgICAgICAgY29udGVudDogUG9seW1vcnBoZXVzQ29udGVudDxcbiAgICAgICAgICAgIFR1aURpYWxvZ0NvbnRleHQ8Rz4gJiBUdWlSZXNwb25zaXZlRGlhbG9nT3B0aW9uczxhbnk+XG4gICAgICAgID4sXG4gICAgICAgIG9wdGlvbnM6IFBhcnRpYWw8VHVpUmVzcG9uc2l2ZURpYWxvZ09wdGlvbnM8YW55Pj4gPSB7fSxcbiAgICApOiBPYnNlcnZhYmxlPEc+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNNb2JpbGVcbiAgICAgICAgICAgID8gdGhpcy5zaGVldHMub3Blbihjb250ZW50LCBvcHRpb25zKVxuICAgICAgICAgICAgOiB0aGlzLmRpYWxvZ3Mub3Blbihjb250ZW50LCB7XG4gICAgICAgICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgICAgICAgbGFiZWw6IHR1aUlzU3RyaW5nKG9wdGlvbnMubGFiZWwpID8gb3B0aW9ucy5sYWJlbCA6ICcnLFxuICAgICAgICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=