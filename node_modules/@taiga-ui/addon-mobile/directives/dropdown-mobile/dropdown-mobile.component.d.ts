import { AfterViewInit, ElementRef, OnDestroy } from '@angular/core';
import { TuiKeyboardService } from '@taiga-ui/addon-mobile/services';
import { TuiSwipe } from '@taiga-ui/cdk';
import { TuiDropdownDirective, TuiDropdownOpenMonitorDirective } from '@taiga-ui/core';
import { TuiDropdownMobileDirective } from './dropdown-mobile.directive';
import * as i0 from "@angular/core";
export declare class TuiDropdownMobileComponent implements OnDestroy, AfterViewInit {
    private readonly monitor;
    private readonly keyboard;
    private readonly doc;
    private readonly duration;
    readonly el: ElementRef<HTMLElement>;
    readonly dropdown: TuiDropdownDirective;
    readonly directive: TuiDropdownMobileDirective;
    private readonly scrollTop;
    private readonly observer;
    readonly animation: {
        readonly value: "";
        readonly params: {
            readonly start: "100vh";
            readonly duration: number;
        };
    };
    constructor(monitor: TuiDropdownOpenMonitorDirective | null, _: any, keyboard: TuiKeyboardService, doc: Document, duration: number, el: ElementRef<HTMLElement>, dropdown: TuiDropdownDirective, directive: TuiDropdownMobileDirective);
    onClick(event: MouseEvent): void;
    onSwipe({ direction }: TuiSwipe, el: HTMLElement): void;
    onIntersection([{ isIntersecting }]: IntersectionObserverEntry[]): void;
    close(): void;
    refresh({ offsetTop, height }: VisualViewport): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private get focused();
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDropdownMobileComponent, [{ optional: true; }, null, null, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDropdownMobileComponent, "tui-dropdown-mobile", never, {}, {}, never, never>;
}
