import { Directive, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { tuiAvatarOptionsProvider, tuiButtonOptionsProvider, } from '@taiga-ui/experimental/components';
import { TuiCellComponent } from './cell.component';
import { TUI_CELL_OPTIONS } from './cell.options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
export class TuiCellDirective {
    constructor(directiveStyles, options) {
        this.options = options;
        this.size = this.options.size;
        this.height = this.options.height;
        directiveStyles.addComponent(TuiCellComponent);
    }
}
TuiCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellDirective, deps: [{ token: TuiDirectiveStylesService }, { token: TUI_CELL_OPTIONS }], target: i0.ɵɵFactoryTarget.Directive });
TuiCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCellDirective, selector: "[tuiCell]:not(ng-template)", inputs: { size: ["tuiCell", "size"], height: ["tuiCellHeight", "height"] }, host: { attributes: { "tuiCell": "" }, properties: { "attr.data-size": "size || options.size", "attr.data-height": "height" } }, providers: [
        tuiAvatarOptionsProvider({ size: 's' }),
        tuiButtonOptionsProvider({ size: 's' }),
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiCell]:not(ng-template)',
                    providers: [
                        tuiAvatarOptionsProvider({ size: 's' }),
                        tuiButtonOptionsProvider({ size: 's' }),
                    ],
                    host: {
                        tuiCell: '',
                        '[attr.data-size]': 'size || options.size',
                        '[attr.data-height]': 'height',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_CELL_OPTIONS]
                }] }]; }, propDecorators: { size: [{
                type: Input,
                args: ['tuiCell']
            }], height: [{
                type: Input,
                args: ['tuiCellHeight']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvZGlyZWN0aXZlcy9jZWxsL2NlbGwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEQsT0FBTyxFQUNILHdCQUF3QixFQUN4Qix3QkFBd0IsR0FDM0IsTUFBTSxtQ0FBbUMsQ0FBQztBQUUzQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQWlCLE1BQU0sZ0JBQWdCLENBQUM7OztBQWNoRSxNQUFNLE9BQU8sZ0JBQWdCO0lBT3pCLFlBQ3VDLGVBQTBDLEVBQzFDLE9BQXVCO1FBQXZCLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBUDlELFNBQUksR0FBZ0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFHdEQsV0FBTSxHQUE2QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztRQU1uRCxlQUFlLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDbkQsQ0FBQzs7OEdBWlEsZ0JBQWdCLGtCQVFiLHlCQUF5QixhQUN6QixnQkFBZ0I7a0dBVG5CLGdCQUFnQixrUUFWZDtRQUNQLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO1FBQ3JDLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO0tBQ3hDOzRGQU9RLGdCQUFnQjtrQkFaNUIsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QyxTQUFTLEVBQUU7d0JBQ1Asd0JBQXdCLENBQUMsRUFBQyxJQUFJLEVBQUUsR0FBRyxFQUFDLENBQUM7d0JBQ3JDLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO3FCQUN4QztvQkFDRCxJQUFJLEVBQUU7d0JBQ0YsT0FBTyxFQUFFLEVBQUU7d0JBQ1gsa0JBQWtCLEVBQUUsc0JBQXNCO3dCQUMxQyxvQkFBb0IsRUFBRSxRQUFRO3FCQUNqQztpQkFDSjs7MEJBU1EsTUFBTTsyQkFBQyx5QkFBeUI7OzBCQUNoQyxNQUFNOzJCQUFDLGdCQUFnQjs0Q0FQNUIsSUFBSTtzQkFESCxLQUFLO3VCQUFDLFNBQVM7Z0JBSWhCLE1BQU07c0JBREwsS0FBSzt1QkFBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEluamVjdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7XG4gICAgdHVpQXZhdGFyT3B0aW9uc1Byb3ZpZGVyLFxuICAgIHR1aUJ1dHRvbk9wdGlvbnNQcm92aWRlcixcbn0gZnJvbSAnQHRhaWdhLXVpL2V4cGVyaW1lbnRhbC9jb21wb25lbnRzJztcblxuaW1wb3J0IHtUdWlDZWxsQ29tcG9uZW50fSBmcm9tICcuL2NlbGwuY29tcG9uZW50JztcbmltcG9ydCB7VFVJX0NFTExfT1BUSU9OUywgVHVpQ2VsbE9wdGlvbnN9IGZyb20gJy4vY2VsbC5vcHRpb25zJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpQ2VsbF06bm90KG5nLXRlbXBsYXRlKScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHR1aUF2YXRhck9wdGlvbnNQcm92aWRlcih7c2l6ZTogJ3MnfSksXG4gICAgICAgIHR1aUJ1dHRvbk9wdGlvbnNQcm92aWRlcih7c2l6ZTogJ3MnfSksXG4gICAgXSxcbiAgICBob3N0OiB7XG4gICAgICAgIHR1aUNlbGw6ICcnLFxuICAgICAgICAnW2F0dHIuZGF0YS1zaXplXSc6ICdzaXplIHx8IG9wdGlvbnMuc2l6ZScsXG4gICAgICAgICdbYXR0ci5kYXRhLWhlaWdodF0nOiAnaGVpZ2h0JyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlDZWxsRGlyZWN0aXZlIHtcbiAgICBASW5wdXQoJ3R1aUNlbGwnKVxuICAgIHNpemU6IFR1aUNlbGxPcHRpb25zWydzaXplJ10gfCAnJyA9IHRoaXMub3B0aW9ucy5zaXplO1xuXG4gICAgQElucHV0KCd0dWlDZWxsSGVpZ2h0JylcbiAgICBoZWlnaHQ6IFR1aUNlbGxPcHRpb25zWydoZWlnaHQnXSA9IHRoaXMub3B0aW9ucy5oZWlnaHQ7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlKSBkaXJlY3RpdmVTdHlsZXM6IFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UsXG4gICAgICAgIEBJbmplY3QoVFVJX0NFTExfT1BUSU9OUykgcmVhZG9ubHkgb3B0aW9uczogVHVpQ2VsbE9wdGlvbnMsXG4gICAgKSB7XG4gICAgICAgIGRpcmVjdGl2ZVN0eWxlcy5hZGRDb21wb25lbnQoVHVpQ2VsbENvbXBvbmVudCk7XG4gICAgfVxufVxuIl19