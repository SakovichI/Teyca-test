import { Directive, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { TuiAvatarOutlineComponent } from './avatar-outline.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
export class TuiAvatarOutlineDirective {
    constructor(directiveStyles) {
        this.tuiAvatarOutline = '';
        directiveStyles.addComponent(TuiAvatarOutlineComponent);
    }
    get value() {
        return this.tuiAvatarOutline === ''
            ? 'var(--tui-primary)'
            : this.tuiAvatarOutline;
    }
}
TuiAvatarOutlineDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarOutlineDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiAvatarOutlineDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiAvatarOutlineDirective, selector: "[tuiAvatarOutline]", inputs: { tuiAvatarOutline: "tuiAvatarOutline" }, host: { properties: { "style.--t-fill": "value", "class._outline": "value" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarOutlineDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiAvatarOutline]',
                    host: {
                        '[style.--t-fill]': 'value',
                        '[class._outline]': 'value',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { tuiAvatarOutline: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLW91dGxpbmUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXhwZXJpbWVudGFsL2RpcmVjdGl2ZXMvYXZhdGFyLW91dGxpbmUvYXZhdGFyLW91dGxpbmUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFeEQsT0FBTyxFQUFDLHlCQUF5QixFQUFDLE1BQU0sNEJBQTRCLENBQUM7OztBQVNyRSxNQUFNLE9BQU8seUJBQXlCO0lBSWxDLFlBQ3VDLGVBQTBDO1FBSGpGLHFCQUFnQixHQUFrQixFQUFFLENBQUM7UUFLakMsZUFBZSxDQUFDLFlBQVksQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDTCxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsS0FBSyxFQUFFO1lBQy9CLENBQUMsQ0FBQyxvQkFBb0I7WUFDdEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztJQUNoQyxDQUFDOzt1SEFkUSx5QkFBeUIsa0JBS3RCLHlCQUF5QjsyR0FMNUIseUJBQXlCOzRGQUF6Qix5QkFBeUI7a0JBUHJDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsSUFBSSxFQUFFO3dCQUNGLGtCQUFrQixFQUFFLE9BQU87d0JBQzNCLGtCQUFrQixFQUFFLE9BQU87cUJBQzlCO2lCQUNKOzswQkFNUSxNQUFNOzJCQUFDLHlCQUF5Qjs0Q0FIckMsZ0JBQWdCO3NCQURmLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5qZWN0LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2V9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG5pbXBvcnQge1R1aUF2YXRhck91dGxpbmVDb21wb25lbnR9IGZyb20gJy4vYXZhdGFyLW91dGxpbmUuY29tcG9uZW50JztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpQXZhdGFyT3V0bGluZV0nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tzdHlsZS4tLXQtZmlsbF0nOiAndmFsdWUnLFxuICAgICAgICAnW2NsYXNzLl9vdXRsaW5lXSc6ICd2YWx1ZScsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpQXZhdGFyT3V0bGluZURpcmVjdGl2ZSB7XG4gICAgQElucHV0KClcbiAgICB0dWlBdmF0YXJPdXRsaW5lOiBzdHJpbmcgfCBudWxsID0gJyc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlKSBkaXJlY3RpdmVTdHlsZXM6IFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UsXG4gICAgKSB7XG4gICAgICAgIGRpcmVjdGl2ZVN0eWxlcy5hZGRDb21wb25lbnQoVHVpQXZhdGFyT3V0bGluZUNvbXBvbmVudCk7XG4gICAgfVxuXG4gICAgZ2V0IHZhbHVlKCk6IHN0cmluZyB8IG51bGwge1xuICAgICAgICByZXR1cm4gdGhpcy50dWlBdmF0YXJPdXRsaW5lID09PSAnJ1xuICAgICAgICAgICAgPyAndmFyKC0tdHVpLXByaW1hcnkpJ1xuICAgICAgICAgICAgOiB0aGlzLnR1aUF2YXRhck91dGxpbmU7XG4gICAgfVxufVxuIl19