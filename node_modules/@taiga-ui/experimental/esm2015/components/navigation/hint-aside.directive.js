import { Directive, ElementRef, Inject } from '@angular/core';
import { TuiHintDirective, tuiHintOptionsProvider } from '@taiga-ui/core';
import { TuiAsideComponent } from './aside.component';
import * as i0 from "@angular/core";
import * as i1 from "./aside.component";
import * as i2 from "@taiga-ui/core";
export class TuiHintAsideDirective {
    constructor(el, aside, hint) {
        this.el = el;
        this.aside = aside;
        this.hint = hint;
    }
    ngDoCheck() {
        var _a;
        this.hint.tuiHint = this.aside.tuiNavigationAside
            ? ''
            : (_a = this.el.nativeElement.textContent) === null || _a === void 0 ? void 0 : _a.trim();
    }
}
TuiHintAsideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintAsideDirective, deps: [{ token: ElementRef }, { token: TuiAsideComponent }, { token: TuiHintDirective }], target: i0.ɵɵFactoryTarget.Directive });
TuiHintAsideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintAsideDirective, selector: "[tuiHint][tuiHintAside]", providers: [tuiHintOptionsProvider({ direction: 'right' })], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintAsideDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiHint][tuiHintAside]',
                    providers: [tuiHintOptionsProvider({ direction: 'right' })],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i1.TuiAsideComponent, decorators: [{
                    type: Inject,
                    args: [TuiAsideComponent]
                }] }, { type: i2.TuiHintDirective, decorators: [{
                    type: Inject,
                    args: [TuiHintDirective]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC1hc2lkZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvY29tcG9uZW50cy9uYXZpZ2F0aW9uL2hpbnQtYXNpZGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQVcsVUFBVSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUUsc0JBQXNCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4RSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQU1wRCxNQUFNLE9BQU8scUJBQXFCO0lBQzlCLFlBQ3lDLEVBQTJCLEVBQ3BCLEtBQXdCLEVBQ3pCLElBQTJCO1FBRmpDLE9BQUUsR0FBRixFQUFFLENBQXlCO1FBQ3BCLFVBQUssR0FBTCxLQUFLLENBQW1CO1FBQ3pCLFNBQUksR0FBSixJQUFJLENBQXVCO0lBQ3ZFLENBQUM7SUFFSixTQUFTOztRQUNMLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCO1lBQzdDLENBQUMsQ0FBQyxFQUFFO1lBQ0osQ0FBQyxDQUFDLE1BQUEsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FBVywwQ0FBRSxJQUFJLEVBQUUsQ0FBQztJQUNwRCxDQUFDOzttSEFYUSxxQkFBcUIsa0JBRWxCLFVBQVUsYUFDVixpQkFBaUIsYUFDakIsZ0JBQWdCO3VHQUpuQixxQkFBcUIsa0RBRm5CLENBQUMsc0JBQXNCLENBQUMsRUFBQyxTQUFTLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQzs0RkFFaEQscUJBQXFCO2tCQUpqQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDLEVBQUMsU0FBUyxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7aUJBQzVEOzswQkFHUSxNQUFNOzJCQUFDLFVBQVU7OzBCQUNqQixNQUFNOzJCQUFDLGlCQUFpQjs7MEJBQ3hCLE1BQU07MkJBQUMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aUhpbnREaXJlY3RpdmUsIHR1aUhpbnRPcHRpb25zUHJvdmlkZXJ9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcblxuaW1wb3J0IHtUdWlBc2lkZUNvbXBvbmVudH0gZnJvbSAnLi9hc2lkZS5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlIaW50XVt0dWlIaW50QXNpZGVdJyxcbiAgICBwcm92aWRlcnM6IFt0dWlIaW50T3B0aW9uc1Byb3ZpZGVyKHtkaXJlY3Rpb246ICdyaWdodCd9KV0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUhpbnRBc2lkZURpcmVjdGl2ZSBpbXBsZW1lbnRzIERvQ2hlY2sge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIHByaXZhdGUgcmVhZG9ubHkgZWw6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFR1aUFzaWRlQ29tcG9uZW50KSBwcml2YXRlIHJlYWRvbmx5IGFzaWRlOiBUdWlBc2lkZUNvbXBvbmVudCxcbiAgICAgICAgQEluamVjdChUdWlIaW50RGlyZWN0aXZlKSBwcml2YXRlIHJlYWRvbmx5IGhpbnQ6IFR1aUhpbnREaXJlY3RpdmU8YW55PixcbiAgICApIHt9XG5cbiAgICBuZ0RvQ2hlY2soKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaGludC50dWlIaW50ID0gdGhpcy5hc2lkZS50dWlOYXZpZ2F0aW9uQXNpZGVcbiAgICAgICAgICAgID8gJydcbiAgICAgICAgICAgIDogdGhpcy5lbC5uYXRpdmVFbGVtZW50LnRleHRDb250ZW50Py50cmltKCk7XG4gICAgfVxufVxuIl19