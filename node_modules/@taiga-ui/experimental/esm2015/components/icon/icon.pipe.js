import { ElementRef, inject, Pipe } from '@angular/core';
import { TUI_ICON_COLORED } from '@taiga-ui/experimental/constants';
import { TUI_ICON_RESOLVER } from '@taiga-ui/experimental/tokens';
import * as i0 from "@angular/core";
export class TuiIconPipe {
    constructor() {
        this.transform = inject(TUI_ICON_RESOLVER);
        this.el = inject(ElementRef).nativeElement;
        // TODO: Consider another way in v4.0
        /**
         * This would cause dispatch after parent component change detection run
         * and handlers (such HostListener) will be attached
         */
        void Promise.resolve().then(() => this.el.dispatchEvent(new CustomEvent(TUI_ICON_COLORED, { bubbles: true })));
    }
}
TuiIconPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIconPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
TuiIconPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIconPipe, name: "tuiIcon" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIconPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'tuiIcon',
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXhwZXJpbWVudGFsL2NvbXBvbmVudHMvaWNvbi9pY29uLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUV0RSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQzs7QUFLaEUsTUFBTSxPQUFPLFdBQVc7SUFJcEI7UUFIUyxjQUFTLEdBQUcsTUFBTSxDQUEyQixpQkFBaUIsQ0FBQyxDQUFDO1FBQ2hFLE9BQUUsR0FBRyxNQUFNLENBQTBCLFVBQVUsQ0FBQyxDQUFDLGFBQWEsQ0FBQztRQUdwRSxxQ0FBcUM7UUFDckM7OztXQUdHO1FBQ0gsS0FBSyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUM3QixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDLENBQzVFLENBQUM7SUFDTixDQUFDOzt5R0FiUSxXQUFXO3VHQUFYLFdBQVc7NEZBQVgsV0FBVztrQkFIdkIsSUFBSTttQkFBQztvQkFDRixJQUFJLEVBQUUsU0FBUztpQkFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0VsZW1lbnRSZWYsIGluamVjdCwgUGlwZSwgUGlwZVRyYW5zZm9ybX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7VHVpU3RyaW5nSGFuZGxlcn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1RVSV9JQ09OX0NPTE9SRUR9IGZyb20gJ0B0YWlnYS11aS9leHBlcmltZW50YWwvY29uc3RhbnRzJztcbmltcG9ydCB7VFVJX0lDT05fUkVTT0xWRVJ9IGZyb20gJ0B0YWlnYS11aS9leHBlcmltZW50YWwvdG9rZW5zJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICd0dWlJY29uJyxcbn0pXG5leHBvcnQgY2xhc3MgVHVpSWNvblBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICByZWFkb25seSB0cmFuc2Zvcm0gPSBpbmplY3Q8VHVpU3RyaW5nSGFuZGxlcjxzdHJpbmc+PihUVUlfSUNPTl9SRVNPTFZFUik7XG4gICAgcmVhZG9ubHkgZWwgPSBpbmplY3Q8RWxlbWVudFJlZjxIVE1MRWxlbWVudD4+KEVsZW1lbnRSZWYpLm5hdGl2ZUVsZW1lbnQ7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gVE9ETzogQ29uc2lkZXIgYW5vdGhlciB3YXkgaW4gdjQuMFxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyB3b3VsZCBjYXVzZSBkaXNwYXRjaCBhZnRlciBwYXJlbnQgY29tcG9uZW50IGNoYW5nZSBkZXRlY3Rpb24gcnVuXG4gICAgICAgICAqIGFuZCBoYW5kbGVycyAoc3VjaCBIb3N0TGlzdGVuZXIpIHdpbGwgYmUgYXR0YWNoZWRcbiAgICAgICAgICovXG4gICAgICAgIHZvaWQgUHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKSA9PlxuICAgICAgICAgICAgdGhpcy5lbC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChUVUlfSUNPTl9DT0xPUkVELCB7YnViYmxlczogdHJ1ZX0pKSxcbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=