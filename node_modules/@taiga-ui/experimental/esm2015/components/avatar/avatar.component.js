import { ChangeDetectionStrategy, Component, HostListener, Inject, Input, Renderer2, } from '@angular/core';
import { tuiIsString } from '@taiga-ui/cdk';
import { TUI_ICON_COLORED } from '@taiga-ui/experimental/constants';
import { TUI_ICON_RESOLVER } from '@taiga-ui/experimental/tokens';
import { TUI_AVATAR_OPTIONS } from './avatar.options';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@taiga-ui/kit";
export class TuiAvatarComponent {
    constructor(options, resolver, renderer) {
        this.options = options;
        this.resolver = resolver;
        this.renderer = renderer;
        this.size = this.options.size;
        this.round = this.options.round;
        this.src = null;
        this.appearance = this.options.appearance;
    }
    get safeSrc() {
        var _a, _b;
        return (_b = (_a = this.src) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '';
    }
    get value() {
        return this.src || '';
    }
    get type() {
        if (this.value && !tuiIsString(this.value)) {
            return 'img';
        }
        if (this.value.startsWith('tuiIcon') || this.value.endsWith('.svg')) {
            return 'icon';
        }
        if (this.value.length > 0 && this.value.length < 3) {
            return 'text';
        }
        return this.value.length ? 'img' : 'content';
    }
    // TODO: Consider another way in v4.0
    onColoredIcon(target) {
        this.renderer.setStyle(target, 'padding', '20%');
        this.renderer.setStyle(target, 'object-fit', 'contain');
    }
}
TuiAvatarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarComponent, deps: [{ token: TUI_AVATAR_OPTIONS }, { token: TUI_ICON_RESOLVER }, { token: Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
TuiAvatarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAvatarComponent, selector: "tui-avatar", inputs: { size: "size", round: "round", src: "src", appearance: "appearance" }, host: { attributes: { "tuiAppearance": "" }, listeners: { "tui-icon-colored": "onColoredIcon($event.target)" }, properties: { "attr.data-appearance": "appearance", "attr.data-size": "size", "attr.data-type": "type", "style.--t-mask": "\"url(\" + resolver(safeSrc) + \")\"", "class._round": "round" } }, ngImport: i0, template: "<ng-container [ngSwitch]=\"type\">\n    <img\n        *ngSwitchCase=\"'img'\"\n        alt=\"\"\n        loading=\"lazy\"\n        [src]=\"value\"\n    />\n    <ng-container *ngSwitchCase=\"'text'\">{{ value }}</ng-container>\n    <ng-container *ngSwitchDefault>\n        <ng-content></ng-content>\n    </ng-container>\n</ng-container>\n", styles: [":host{--t-size: 3.5rem;--t-radius: .75rem;position:relative;display:inline-flex;flex-shrink:0;width:var(--t-size);height:var(--t-size);align-items:center;justify-content:center;overflow:hidden;white-space:nowrap;border-radius:var(--t-radius);background:var(--tui-secondary);color:var(--tui-text-02);vertical-align:middle;box-sizing:border-box;padding:.25rem;opacity:.999}:host:before{position:absolute;top:0;left:0;width:100%;height:100%;background:currentColor;-webkit-mask:var(--t-mask) no-repeat center / 60%;mask:var(--t-mask) no-repeat center / 60%}:host[data-size=xs]{--t-size: var(--tui-height-xs);--t-radius: .5rem;font:var(--tui-font-text-xs);font-weight:bold}:host[data-size=xs][data-type=content]{font:var(--tui-font-text-m);font-size:.5625rem}:host[data-size=s]{--t-size: var(--tui-height-s);--t-radius: .5rem;font:var(--tui-font-text-s);font-weight:bold}:host[data-size=s][data-type=content]{font:var(--tui-font-text-xs);font-weight:bold}:host[data-size=m]{--t-size: calc(var(--tui-height-m) - .25rem);--t-radius: .75rem;font:var(--tui-font-text-l);font-weight:bold}:host[data-size=m][data-type=content]{font:var(--tui-font-text-m);font-weight:bold}:host[data-size=l]{--t-size: var(--tui-height-l);--t-radius: .75rem;font:var(--tui-font-heading-5)}:host[data-size=l][data-type=content]{font:var(--tui-font-text-l);font-weight:bold}:host[data-size=xl]{--t-size: 5rem;--t-radius: .75rem;font:var(--tui-font-heading-3)}:host[data-size=xl][data-type=content]{font:var(--tui-font-heading-4)}:host[data-size=xxl]{--t-size: 6rem;--t-radius: 1rem;font:var(--tui-font-heading-3)}:host[data-size=xxl][data-type=content]{font:var(--tui-font-heading-3)}:host[data-size=xxxl]{--t-size: 8rem;--t-radius: 1.25rem;font:var(--tui-font-heading-2)}:host[data-size=xxxl][data-type=content]{font:var(--tui-font-heading-3)}:host[data-type=img]{background:transparent}:host[data-type=icon]:before{content:\"\"}:host._round{--t-radius: calc(var(--t-size) / 2)}:host ::ng-deep img,:host ::ng-deep picture,:host ::ng-deep video{position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;box-sizing:border-box}\n"], directives: [{ type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.TuiLazyLoadingDirective, selector: "img[loading=\"lazy\"]", inputs: ["src"] }, { type: i1.NgSwitchDefault, selector: "[ngSwitchDefault]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-avatar',
                    templateUrl: './avatar.template.html',
                    styleUrls: ['./avatar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        tuiAppearance: '',
                        '[attr.data-appearance]': 'appearance',
                        '[attr.data-size]': 'size',
                        '[attr.data-type]': 'type',
                        '[style.--t-mask]': '"url(" + resolver(safeSrc) + ")"',
                        '[class._round]': 'round',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_AVATAR_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ICON_RESOLVER]
                }] }, { type: i0.Renderer2, decorators: [{
                    type: Inject,
                    args: [Renderer2]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], round: [{
                type: Input
            }], src: [{
                type: Input
            }], appearance: [{
                type: Input
            }], onColoredIcon: [{
                type: HostListener,
                args: [TUI_ICON_COLORED, ['$event.target']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2V4cGVyaW1lbnRhbC9jb21wb25lbnRzL2F2YXRhci9hdmF0YXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXhwZXJpbWVudGFsL2NvbXBvbmVudHMvYXZhdGFyL2F2YXRhci50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLFNBQVMsR0FDWixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUMsV0FBVyxFQUFtQixNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUVoRSxPQUFPLEVBQUMsa0JBQWtCLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7QUFnQnRFLE1BQU0sT0FBTyxrQkFBa0I7SUFhM0IsWUFDaUQsT0FBeUIsRUFDbEMsUUFBa0MsRUFDbEMsUUFBbUI7UUFGVixZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUNsQyxhQUFRLEdBQVIsUUFBUSxDQUEwQjtRQUNsQyxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBZDNELFNBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUd6QixVQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFHM0IsUUFBRyxHQUFvQyxJQUFJLENBQUM7UUFHNUMsZUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBTWxDLENBQUM7SUFFSixJQUFJLE9BQU87O1FBQ1AsT0FBTyxNQUFBLE1BQUEsSUFBSSxDQUFDLEdBQUcsMENBQUUsUUFBUSxFQUFFLG1DQUFJLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ0wsT0FBTyxJQUFJLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ0osSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN4QyxPQUFPLEtBQUssQ0FBQztTQUNoQjtRQUVELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDakUsT0FBTyxNQUFNLENBQUM7U0FDakI7UUFFRCxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDaEQsT0FBTyxNQUFNLENBQUM7U0FDakI7UUFFRCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNqRCxDQUFDO0lBRUQscUNBQXFDO0lBRXJDLGFBQWEsQ0FBQyxNQUFtQjtRQUM3QixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxZQUFZLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDNUQsQ0FBQzs7Z0hBaERRLGtCQUFrQixrQkFjZixrQkFBa0IsYUFDbEIsaUJBQWlCLGFBQ2pCLFNBQVM7b0dBaEJaLGtCQUFrQixpYkM3Qi9CLG1WQVlBOzRGRGlCYSxrQkFBa0I7a0JBZDlCLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLFdBQVcsRUFBRSx3QkFBd0I7b0JBQ3JDLFNBQVMsRUFBRSxDQUFDLHFCQUFxQixDQUFDO29CQUNsQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsSUFBSSxFQUFFO3dCQUNGLGFBQWEsRUFBRSxFQUFFO3dCQUNqQix3QkFBd0IsRUFBRSxZQUFZO3dCQUN0QyxrQkFBa0IsRUFBRSxNQUFNO3dCQUMxQixrQkFBa0IsRUFBRSxNQUFNO3dCQUMxQixrQkFBa0IsRUFBRSxrQ0FBa0M7d0JBQ3RELGdCQUFnQixFQUFFLE9BQU87cUJBQzVCO2lCQUNKOzswQkFlUSxNQUFNOzJCQUFDLGtCQUFrQjs7MEJBQ3pCLE1BQU07MkJBQUMsaUJBQWlCOzswQkFDeEIsTUFBTTsyQkFBQyxTQUFTOzRDQWRyQixJQUFJO3NCQURILEtBQUs7Z0JBSU4sS0FBSztzQkFESixLQUFLO2dCQUlOLEdBQUc7c0JBREYsS0FBSztnQkFJTixVQUFVO3NCQURULEtBQUs7Z0JBbUNOLGFBQWE7c0JBRFosWUFBWTt1QkFBQyxnQkFBZ0IsRUFBRSxDQUFDLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEhvc3RMaXN0ZW5lcixcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgUmVuZGVyZXIyLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U2FmZVJlc291cmNlVXJsfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7dHVpSXNTdHJpbmcsIFR1aVN0cmluZ0hhbmRsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUVUlfSUNPTl9DT0xPUkVEfSBmcm9tICdAdGFpZ2EtdWkvZXhwZXJpbWVudGFsL2NvbnN0YW50cyc7XG5pbXBvcnQge1RVSV9JQ09OX1JFU09MVkVSfSBmcm9tICdAdGFpZ2EtdWkvZXhwZXJpbWVudGFsL3Rva2Vucyc7XG5cbmltcG9ydCB7VFVJX0FWQVRBUl9PUFRJT05TLCBUdWlBdmF0YXJPcHRpb25zfSBmcm9tICcuL2F2YXRhci5vcHRpb25zJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktYXZhdGFyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYXZhdGFyLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2F2YXRhci5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgaG9zdDoge1xuICAgICAgICB0dWlBcHBlYXJhbmNlOiAnJyxcbiAgICAgICAgJ1thdHRyLmRhdGEtYXBwZWFyYW5jZV0nOiAnYXBwZWFyYW5jZScsXG4gICAgICAgICdbYXR0ci5kYXRhLXNpemVdJzogJ3NpemUnLFxuICAgICAgICAnW2F0dHIuZGF0YS10eXBlXSc6ICd0eXBlJyxcbiAgICAgICAgJ1tzdHlsZS4tLXQtbWFza10nOiAnXCJ1cmwoXCIgKyByZXNvbHZlcihzYWZlU3JjKSArIFwiKVwiJyxcbiAgICAgICAgJ1tjbGFzcy5fcm91bmRdJzogJ3JvdW5kJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlBdmF0YXJDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgc2l6ZSA9IHRoaXMub3B0aW9ucy5zaXplO1xuXG4gICAgQElucHV0KClcbiAgICByb3VuZCA9IHRoaXMub3B0aW9ucy5yb3VuZDtcblxuICAgIEBJbnB1dCgpXG4gICAgc3JjOiBTYWZlUmVzb3VyY2VVcmwgfCBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICAgIEBJbnB1dCgpXG4gICAgYXBwZWFyYW5jZSA9IHRoaXMub3B0aW9ucy5hcHBlYXJhbmNlO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0FWQVRBUl9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aUF2YXRhck9wdGlvbnMsXG4gICAgICAgIEBJbmplY3QoVFVJX0lDT05fUkVTT0xWRVIpIHJlYWRvbmx5IHJlc29sdmVyOiBUdWlTdHJpbmdIYW5kbGVyPHN0cmluZz4sXG4gICAgICAgIEBJbmplY3QoUmVuZGVyZXIyKSBwcml2YXRlIHJlYWRvbmx5IHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgKSB7fVxuXG4gICAgZ2V0IHNhZmVTcmMoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3JjPy50b1N0cmluZygpID8/ICcnO1xuICAgIH1cblxuICAgIGdldCB2YWx1ZSgpOiBTYWZlUmVzb3VyY2VVcmwgfCBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5zcmMgfHwgJyc7XG4gICAgfVxuXG4gICAgZ2V0IHR5cGUoKTogJ2NvbnRlbnQnIHwgJ2ljb24nIHwgJ2ltZycgfCAndGV4dCcge1xuICAgICAgICBpZiAodGhpcy52YWx1ZSAmJiAhdHVpSXNTdHJpbmcodGhpcy52YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiAnaW1nJztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLnZhbHVlLnN0YXJ0c1dpdGgoJ3R1aUljb24nKSB8fCB0aGlzLnZhbHVlLmVuZHNXaXRoKCcuc3ZnJykpIHtcbiAgICAgICAgICAgIHJldHVybiAnaWNvbic7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy52YWx1ZS5sZW5ndGggPiAwICYmIHRoaXMudmFsdWUubGVuZ3RoIDwgMykge1xuICAgICAgICAgICAgcmV0dXJuICd0ZXh0JztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlLmxlbmd0aCA/ICdpbWcnIDogJ2NvbnRlbnQnO1xuICAgIH1cblxuICAgIC8vIFRPRE86IENvbnNpZGVyIGFub3RoZXIgd2F5IGluIHY0LjBcbiAgICBASG9zdExpc3RlbmVyKFRVSV9JQ09OX0NPTE9SRUQsIFsnJGV2ZW50LnRhcmdldCddKVxuICAgIG9uQ29sb3JlZEljb24odGFyZ2V0OiBIVE1MRWxlbWVudCk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRhcmdldCwgJ3BhZGRpbmcnLCAnMjAlJyk7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGFyZ2V0LCAnb2JqZWN0LWZpdCcsICdjb250YWluJyk7XG4gICAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciBbbmdTd2l0Y2hdPVwidHlwZVwiPlxuICAgIDxpbWdcbiAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidpbWcnXCJcbiAgICAgICAgYWx0PVwiXCJcbiAgICAgICAgbG9hZGluZz1cImxhenlcIlxuICAgICAgICBbc3JjXT1cInZhbHVlXCJcbiAgICAvPlxuICAgIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cIid0ZXh0J1wiPnt7IHZhbHVlIH19PC9uZy1jb250YWluZXI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hEZWZhdWx0PlxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9uZy1jb250YWluZXI+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==