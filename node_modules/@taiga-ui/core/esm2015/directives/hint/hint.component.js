import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, Optional, Self, } from '@angular/core';
import { EMPTY_CLIENT_RECT, tuiClamp, TuiDestroyService, TuiHoveredService, tuiPure, tuiPx, } from '@taiga-ui/cdk';
import { tuiPositionAccessorFor, TuiRectAccessor, tuiRectAccessorFor, } from '@taiga-ui/core/abstract';
import { tuiFadeIn } from '@taiga-ui/core/animations';
import { TuiModeDirective } from '@taiga-ui/core/directives/mode';
import { TuiPositionService, TuiVisualViewportService } from '@taiga-ui/core/services';
import { TUI_ANIMATION_OPTIONS, TUI_VIEWPORT } from '@taiga-ui/core/tokens';
import { tuiIsObscured } from '@taiga-ui/core/utils';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import { map, takeUntil } from 'rxjs/operators';
import { TuiHintDirective } from './hint.directive';
import { TuiHintHoverDirective } from './hint-hover.directive';
import { TuiHintPointerDirective } from './hint-pointer.directive';
import { TuiHintPositionDirective } from './hint-position.directive';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
import * as i2 from "rxjs";
import * as i3 from "@taiga-ui/core/abstract";
import * as i4 from "./hint-hover.directive";
import * as i5 from "@taiga-ui/core/directives/mode";
import * as i6 from "@taiga-ui/core/services";
const GAP = 4;
export class TuiHintComponent {
    constructor(hovered$, position$, destroy$, animation, pointer, accessor, el, polymorpheus, hover, mode, vvs, viewport) {
        var _a;
        this.animation = animation;
        this.pointer = pointer;
        this.accessor = accessor;
        this.el = el;
        this.polymorpheus = polymorpheus;
        this.hover = hover;
        this.mode = mode;
        this.vvs = vvs;
        this.viewport = viewport;
        this.appearance = this.polymorpheus.$implicit.appearance || ((_a = this.mode) === null || _a === void 0 ? void 0 : _a.mode);
        position$
            .pipe(map(point => this.vvs.correct(point)), takeUntil(destroy$))
            .subscribe(([top, left]) => {
            this.update(top, left);
        });
        hovered$.pipe(takeUntil(destroy$)).subscribe(hover => this.hover.toggle(hover));
    }
    get content() {
        return this.polymorpheus.$implicit.content;
    }
    get context() {
        return this.polymorpheus.$implicit.context;
    }
    onClick(target) {
        if ((!target.closest('tui-hint') &&
            !this.hover.el.nativeElement.contains(target)) ||
            tuiIsObscured(this.hover.el.nativeElement)) {
            this.hover.toggle(false);
        }
    }
    update(top, left) {
        if (!this.hover.el.nativeElement.isConnected) {
            this.hover.toggle(false);
            return;
        }
        const { height, width } = this.el.nativeElement.getBoundingClientRect();
        const { style } = this.el.nativeElement;
        const rect = this.accessor.getClientRect();
        const viewport = this.viewport.getClientRect();
        if (rect === EMPTY_CLIENT_RECT) {
            return;
        }
        const safeLeft = tuiClamp(left, GAP, viewport.width - width - GAP);
        const [beakTop, beakLeft] = this.vvs.correct([
            rect.top + rect.height / 2 - top,
            rect.left + rect.width / 2 - safeLeft,
        ]);
        style.top = tuiPx(top);
        style.left = tuiPx(safeLeft);
        style.setProperty('--top', tuiPx(tuiClamp(beakTop, 0.5, height - 1)));
        style.setProperty('--left', tuiPx(tuiClamp(beakLeft, 0.5, width - 1)));
    }
}
TuiHintComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintComponent, deps: [{ token: TuiHoveredService }, { token: TuiPositionService }, { token: TuiDestroyService, self: true }, { token: TUI_ANIMATION_OPTIONS }, { token: TuiHintPointerDirective, optional: true }, { token: TuiRectAccessor }, { token: ElementRef }, { token: POLYMORPHEUS_CONTEXT }, { token: TuiHintHoverDirective }, { token: TuiModeDirective, optional: true }, { token: TuiVisualViewportService }, { token: TUI_VIEWPORT }], target: i0.ɵɵFactoryTarget.Component });
TuiHintComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintComponent, selector: "tui-hint", host: { listeners: { "document:click": "onClick($event.target)" }, properties: { "@tuiFadeIn": "animation", "class._untouchable": "pointer", "attr.data-appearance": "this.appearance" } }, providers: [
        TuiDestroyService,
        TuiPositionService,
        TuiHoveredService,
        tuiPositionAccessorFor('hint', TuiHintPositionDirective),
        tuiRectAccessorFor('hint', TuiHintDirective),
    ], ngImport: i0, template: `
        <ng-content></ng-content>
        <span
            *polymorpheusOutlet="content as text; context: context"
            [innerHTML]="text"
        ></span>
    `, isInline: true, styles: [":host{position:absolute;max-width:18rem;min-height:var(--tui-height-m);padding:.75rem 1rem;background:var(--tui-primary);border-radius:var(--tui-radius-l);color:var(--tui-primary-text);box-sizing:border-box;font:var(--tui-font-text-s);white-space:pre-line;word-wrap:break-word;line-height:1.25rem}:host:before{content:\"\";position:absolute;top:var(--top);left:var(--left);width:.5rem;height:.5rem;border-radius:.125rem;box-sizing:border-box;background:inherit;transform:translate(-50%,-50%) rotate(45deg)}:host[data-appearance=error]{background:var(--tui-error-fill)}:host[data-appearance=onDark]{background:var(--tui-elevation-02);color:var(--tui-text-01);filter:drop-shadow(0 0 .125rem rgba(0,0,0,.16)) drop-shadow(0 1.5rem 1rem rgba(0,0,0,.03)) drop-shadow(0 .75rem .75rem rgba(0,0,0,.04)) drop-shadow(0 .25rem .375rem rgba(0,0,0,.05))}:host:not([style*=\"top\"]){visibility:hidden}:host._untouchable{pointer-events:none}\n"], directives: [{ type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiPure
], TuiHintComponent.prototype, "update", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-hint',
                    template: `
        <ng-content></ng-content>
        <span
            *polymorpheusOutlet="content as text; context: context"
            [innerHTML]="text"
        ></span>
    `,
                    styleUrls: ['./hint.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        TuiDestroyService,
                        TuiPositionService,
                        TuiHoveredService,
                        tuiPositionAccessorFor('hint', TuiHintPositionDirective),
                        tuiRectAccessorFor('hint', TuiHintDirective),
                    ],
                    animations: [tuiFadeIn],
                    host: {
                        '[@tuiFadeIn]': 'animation',
                        '[class._untouchable]': 'pointer',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TuiHoveredService]
                }] }, { type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TuiPositionService]
                }] }, { type: i2.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATION_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiHintPointerDirective]
                }] }, { type: i3.TuiRectAccessor, decorators: [{
                    type: Inject,
                    args: [TuiRectAccessor]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }, { type: i4.TuiHintHoverDirective, decorators: [{
                    type: Inject,
                    args: [TuiHintHoverDirective]
                }] }, { type: i5.TuiModeDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiModeDirective]
                }] }, { type: i6.TuiVisualViewportService, decorators: [{
                    type: Inject,
                    args: [TuiVisualViewportService]
                }] }, { type: i3.TuiRectAccessor, decorators: [{
                    type: Inject,
                    args: [TUI_VIEWPORT]
                }] }]; }, propDecorators: { appearance: [{
                type: HostBinding,
                args: ['attr.data-appearance']
            }], onClick: [{
                type: HostListener,
                args: ['document:click', ['$event.target']]
            }], update: [] } });
//# sourceMappingURL=data:application/json;base64,