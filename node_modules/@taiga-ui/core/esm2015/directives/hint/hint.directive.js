import { Directive, ElementRef, Inject, INJECTOR, Input, Optional, } from '@angular/core';
import { TuiActiveZoneDirective } from '@taiga-ui/cdk';
import { tuiAsRectAccessor, tuiAsVehicle, } from '@taiga-ui/core/abstract';
import { TuiHintService } from '@taiga-ui/core/services';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { TUI_HINT_COMPONENT } from './hint.providers';
import { TUI_HINT_OPTIONS } from './hint-options.directive';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
import * as i2 from "@taiga-ui/core/services";
import * as i3 from "@taiga-ui/cdk";
export class TuiHintDirective {
    constructor(el, component, hintService, options, activeZone) {
        this.el = el;
        this.component = component;
        this.hintService = hintService;
        this.options = options;
        this.activeZone = activeZone;
        this.tuiHintAppearance = null;
        this.type = 'hint';
    }
    set tuiHint(content) {
        this.content = content;
        if (!content) {
            this.toggle(false);
        }
    }
    get appearance() {
        var _a;
        return (_a = this.tuiHintAppearance) !== null && _a !== void 0 ? _a : this.options.appearance;
    }
    ngOnDestroy() {
        this.toggle(false);
    }
    getClientRect() {
        return this.el.nativeElement.getBoundingClientRect();
    }
    toggle(show) {
        if (show && this.content) {
            this.hintService.add(this);
        }
        else {
            this.hintService.remove(this);
        }
    }
}
TuiHintDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintDirective, deps: [{ token: ElementRef }, { token: PolymorpheusComponent }, { token: TuiHintService }, { token: TUI_HINT_OPTIONS }, { token: TuiActiveZoneDirective, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiHintDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintDirective, selector: "[tuiHint]:not(ng-container):not(ng-template)", inputs: { tuiHint: "tuiHint", context: ["tuiHintContext", "context"], tuiHintAppearance: "tuiHintAppearance" }, providers: [
        tuiAsRectAccessor(TuiHintDirective),
        tuiAsVehicle(TuiHintDirective),
        {
            provide: PolymorpheusComponent,
            deps: [TUI_HINT_COMPONENT, INJECTOR],
            useClass: PolymorpheusComponent,
        },
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiHint]:not(ng-container):not(ng-template)',
                    providers: [
                        tuiAsRectAccessor(TuiHintDirective),
                        tuiAsVehicle(TuiHintDirective),
                        {
                            provide: PolymorpheusComponent,
                            deps: [TUI_HINT_COMPONENT, INJECTOR],
                            useClass: PolymorpheusComponent,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i1.PolymorpheusComponent, decorators: [{
                    type: Inject,
                    args: [PolymorpheusComponent]
                }] }, { type: i2.TuiHintService, decorators: [{
                    type: Inject,
                    args: [TuiHintService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_HINT_OPTIONS]
                }] }, { type: i3.TuiActiveZoneDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiActiveZoneDirective]
                }] }]; }, propDecorators: { tuiHint: [{
                type: Input
            }], context: [{
                type: Input,
                args: ['tuiHintContext']
            }], tuiHintAppearance: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvaGludC9oaW50LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEVBQ04sUUFBUSxFQUNSLEtBQUssRUFFTCxRQUFRLEdBQ1gsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFDSCxpQkFBaUIsRUFDakIsWUFBWSxHQUdmLE1BQU0seUJBQXlCLENBQUM7QUFFakMsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxxQkFBcUIsRUFBc0IsTUFBTSwwQkFBMEIsQ0FBQztBQUVwRixPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUNwRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQWlCLE1BQU0sMEJBQTBCLENBQUM7Ozs7O0FBYzFFLE1BQU0sT0FBTyxnQkFBZ0I7SUFzQnpCLFlBQ3lDLEVBQTJCLEVBQzFCLFNBQXlDLEVBQ3RDLFdBQTJCLEVBQ3pCLE9BQXVCLEVBR3pELFVBQTBDO1FBTmQsT0FBRSxHQUFGLEVBQUUsQ0FBeUI7UUFDMUIsY0FBUyxHQUFULFNBQVMsQ0FBZ0M7UUFDdEMsZ0JBQVcsR0FBWCxXQUFXLENBQWdCO1FBQ3pCLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBR3pELGVBQVUsR0FBVixVQUFVLENBQWdDO1FBYnZELHNCQUFpQixHQUFrQixJQUFJLENBQUM7UUFJL0IsU0FBSSxHQUFHLE1BQU0sQ0FBQztJQVVwQixDQUFDO0lBM0JKLElBQ0ksT0FBTyxDQUFDLE9BQStCO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBRXZCLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDVixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3RCO0lBQ0wsQ0FBQztJQXNCRCxJQUFJLFVBQVU7O1FBQ1YsT0FBTyxNQUFBLElBQUksQ0FBQyxpQkFBaUIsbUNBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7SUFDN0QsQ0FBQztJQUVELFdBQVc7UUFDUCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxhQUFhO1FBQ1QsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0lBQ3pELENBQUM7SUFFRCxNQUFNLENBQUMsSUFBYTtRQUNoQixJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCO2FBQU07WUFDSCxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNqQztJQUNMLENBQUM7OzhHQWxEUSxnQkFBZ0Isa0JBdUJiLFVBQVUsYUFDVixxQkFBcUIsYUFDckIsY0FBYyxhQUNkLGdCQUFnQixhQUVoQixzQkFBc0I7a0dBNUJ6QixnQkFBZ0IsdUxBVmQ7UUFDUCxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQztRQUNuQyxZQUFZLENBQUMsZ0JBQWdCLENBQUM7UUFDOUI7WUFDSSxPQUFPLEVBQUUscUJBQXFCO1lBQzlCLElBQUksRUFBRSxDQUFDLGtCQUFrQixFQUFFLFFBQVEsQ0FBQztZQUNwQyxRQUFRLEVBQUUscUJBQXFCO1NBQ2xDO0tBQ0o7NEZBRVEsZ0JBQWdCO2tCQVo1QixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSw4Q0FBOEM7b0JBQ3hELFNBQVMsRUFBRTt3QkFDUCxpQkFBaUIsa0JBQWtCO3dCQUNuQyxZQUFZLGtCQUFrQjt3QkFDOUI7NEJBQ0ksT0FBTyxFQUFFLHFCQUFxQjs0QkFDOUIsSUFBSSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsUUFBUSxDQUFDOzRCQUNwQyxRQUFRLEVBQUUscUJBQXFCO3lCQUNsQztxQkFDSjtpQkFDSjs7MEJBd0JRLE1BQU07MkJBQUMsVUFBVTs7MEJBQ2pCLE1BQU07MkJBQUMscUJBQXFCOzswQkFDNUIsTUFBTTsyQkFBQyxjQUFjOzswQkFDckIsTUFBTTsyQkFBQyxnQkFBZ0I7OzBCQUN2QixRQUFROzswQkFDUixNQUFNOzJCQUFDLHNCQUFzQjs0Q0F4QjlCLE9BQU87c0JBRFYsS0FBSztnQkFVTixPQUFPO3NCQUROLEtBQUs7dUJBQUMsZ0JBQWdCO2dCQUl2QixpQkFBaUI7c0JBRGhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIERpcmVjdGl2ZSxcbiAgICBFbGVtZW50UmVmLFxuICAgIEluamVjdCxcbiAgICBJTkpFQ1RPUixcbiAgICBJbnB1dCxcbiAgICBPbkRlc3Ryb3ksXG4gICAgT3B0aW9uYWwsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlBY3RpdmVab25lRGlyZWN0aXZlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7XG4gICAgdHVpQXNSZWN0QWNjZXNzb3IsXG4gICAgdHVpQXNWZWhpY2xlLFxuICAgIFR1aVJlY3RBY2Nlc3NvcixcbiAgICBUdWlWZWhpY2xlLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hYnN0cmFjdCc7XG5pbXBvcnQge1R1aVBvcnRhbEl0ZW19IGZyb20gJ0B0YWlnYS11aS9jb3JlL2ludGVyZmFjZXMnO1xuaW1wb3J0IHtUdWlIaW50U2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvc2VydmljZXMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb21wb25lbnQsIFBvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5cbmltcG9ydCB7VFVJX0hJTlRfQ09NUE9ORU5UfSBmcm9tICcuL2hpbnQucHJvdmlkZXJzJztcbmltcG9ydCB7VFVJX0hJTlRfT1BUSU9OUywgVHVpSGludE9wdGlvbnN9IGZyb20gJy4vaGludC1vcHRpb25zLmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aUhpbnRdOm5vdChuZy1jb250YWluZXIpOm5vdChuZy10ZW1wbGF0ZSknLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB0dWlBc1JlY3RBY2Nlc3NvcihUdWlIaW50RGlyZWN0aXZlKSxcbiAgICAgICAgdHVpQXNWZWhpY2xlKFR1aUhpbnREaXJlY3RpdmUpLFxuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBQb2x5bW9ycGhldXNDb21wb25lbnQsXG4gICAgICAgICAgICBkZXBzOiBbVFVJX0hJTlRfQ09NUE9ORU5ULCBJTkpFQ1RPUl0sXG4gICAgICAgICAgICB1c2VDbGFzczogUG9seW1vcnBoZXVzQ29tcG9uZW50LFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUhpbnREaXJlY3RpdmU8Qz5cbiAgICBpbXBsZW1lbnRzIE9uRGVzdHJveSwgVHVpUG9ydGFsSXRlbTxDPiwgVHVpUmVjdEFjY2Vzc29yLCBUdWlWZWhpY2xlXG57XG4gICAgQElucHV0KClcbiAgICBzZXQgdHVpSGludChjb250ZW50OiBQb2x5bW9ycGhldXNDb250ZW50PEM+KSB7XG4gICAgICAgIHRoaXMuY29udGVudCA9IGNvbnRlbnQ7XG5cbiAgICAgICAgaWYgKCFjb250ZW50KSB7XG4gICAgICAgICAgICB0aGlzLnRvZ2dsZShmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASW5wdXQoJ3R1aUhpbnRDb250ZXh0JylcbiAgICBjb250ZXh0PzogQztcblxuICAgIEBJbnB1dCgpXG4gICAgdHVpSGludEFwcGVhcmFuY2U6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gICAgY29udGVudDogUG9seW1vcnBoZXVzQ29udGVudDxDPjtcblxuICAgIHJlYWRvbmx5IHR5cGUgPSAnaGludCc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChQb2x5bW9ycGhldXNDb21wb25lbnQpIHB1YmxpYyBjb21wb25lbnQ6IFBvbHltb3JwaGV1c0NvbXBvbmVudDx1bmtub3duPixcbiAgICAgICAgQEluamVjdChUdWlIaW50U2VydmljZSkgcHJpdmF0ZSByZWFkb25seSBoaW50U2VydmljZTogVHVpSGludFNlcnZpY2UsXG4gICAgICAgIEBJbmplY3QoVFVJX0hJTlRfT1BUSU9OUykgcHJpdmF0ZSByZWFkb25seSBvcHRpb25zOiBUdWlIaW50T3B0aW9ucyxcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQEluamVjdChUdWlBY3RpdmVab25lRGlyZWN0aXZlKVxuICAgICAgICByZWFkb25seSBhY3RpdmVab25lPzogVHVpQWN0aXZlWm9uZURpcmVjdGl2ZSB8IG51bGwsXG4gICAgKSB7fVxuXG4gICAgZ2V0IGFwcGVhcmFuY2UoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHVpSGludEFwcGVhcmFuY2UgPz8gdGhpcy5vcHRpb25zLmFwcGVhcmFuY2U7XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMudG9nZ2xlKGZhbHNlKTtcbiAgICB9XG5cbiAgICBnZXRDbGllbnRSZWN0KCk6IENsaWVudFJlY3Qge1xuICAgICAgICByZXR1cm4gdGhpcy5lbC5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIH1cblxuICAgIHRvZ2dsZShzaG93OiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIGlmIChzaG93ICYmIHRoaXMuY29udGVudCkge1xuICAgICAgICAgICAgdGhpcy5oaW50U2VydmljZS5hZGQodGhpcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmhpbnRTZXJ2aWNlLnJlbW92ZSh0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==