import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, Input, } from '@angular/core';
import { CSS as CSS_TOKEN, USER_AGENT } from '@ng-web-apis/common';
import { TUI_IS_IOS, TUI_SCROLL_REF, tuiGetElementOffset, tuiIsFirefox, } from '@taiga-ui/cdk';
import { TUI_SCROLL_INTO_VIEW, TUI_SCROLLABLE } from '@taiga-ui/core/constants';
import { TUI_SCROLLBAR_OPTIONS } from './scrollbar.options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
import * as i2 from "@angular/common";
// TODO: Remove all legacy code in 4.0
export class TuiScrollbarComponent {
    constructor(cssRef, el, userAgent, isIos, options) {
        this.cssRef = cssRef;
        this.el = el;
        this.userAgent = userAgent;
        this.isIos = isIos;
        this.options = options;
        this.isLegacy = !this.cssRef.supports('position', 'sticky') ||
            (tuiIsFirefox(this.userAgent) &&
                !this.cssRef.supports('scrollbar-width', 'none'));
        this.hidden = false;
        this.browserScrollRef = new ElementRef(this.el.nativeElement);
    }
    get delegated() {
        return this.browserScrollRef.nativeElement !== this.el.nativeElement;
    }
    get showScrollbars() {
        return !this.hidden && !this.isIos && (!this.isLegacy || this.delegated);
    }
    get showNative() {
        return this.isLegacy && !this.hidden && !this.delegated;
    }
    onScrollable(element) {
        this.browserScrollRef.nativeElement = element;
    }
    scrollIntoView(detail) {
        var _a;
        if (this.delegated) {
            return;
        }
        const { nativeElement } = this.browserScrollRef;
        const { offsetTop, offsetLeft } = tuiGetElementOffset(nativeElement, detail);
        const { clientHeight, clientWidth } = nativeElement;
        const { offsetHeight, offsetWidth } = detail;
        const scrollTop = offsetTop + offsetHeight / 2 - clientHeight / 2;
        const scrollLeft = offsetLeft + offsetWidth / 2 - clientWidth / 2;
        // ?. for our clients on Windows XP and Chrome 49
        (_a = nativeElement.scrollTo) === null || _a === void 0 ? void 0 : _a.call(nativeElement, scrollLeft, scrollTop);
    }
}
TuiScrollbarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollbarComponent, deps: [{ token: CSS_TOKEN }, { token: ElementRef }, { token: USER_AGENT }, { token: TUI_IS_IOS }, { token: TUI_SCROLLBAR_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiScrollbarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiScrollbarComponent, selector: "tui-scrollbar", inputs: { hidden: "hidden" }, host: { listeners: { "tui-scrollable.stop": "onScrollable($event.detail)", "tui-scroll-into-view.stop": "scrollIntoView($event.detail)" }, properties: { "class._legacy": "this.showNative" } }, providers: [
        {
            provide: TUI_SCROLL_REF,
            deps: [TuiScrollbarComponent],
            useFactory: ({ browserScrollRef, }) => browserScrollRef,
        },
    ], ngImport: i0, template: "<tui-scroll-controls\n    *ngIf=\"showScrollbars\"\n    class=\"t-bars\"\n    [class.t-hover-mode]=\"options.mode === 'hover'\"\n></tui-scroll-controls>\n<div\n    class=\"t-content\"\n    [class.t-content_delegated]=\"delegated\"\n>\n    <ng-content></ng-content>\n</div>\n", styles: [":host{position:relative;display:flex;isolation:isolate;overflow:auto}:host:not(._legacy){scrollbar-width:none;-ms-overflow-style:none}:host:not(._legacy)::-webkit-scrollbar,:host:not(._legacy)::-webkit-scrollbar-thumb{background:transparent;width:0;height:0}:host._legacy{overflow:overlay}@media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: .001dpcm){:host._legacy::-webkit-scrollbar,:host._legacy::-webkit-scrollbar-thumb{width:1rem;height:1rem;border-radius:6.25rem;background-clip:padding-box;border:.375rem solid transparent}:host._legacy::-webkit-scrollbar{background-color:transparent}:host._legacy::-webkit-scrollbar-thumb{background-color:var(--tui-clear-hover)}:host._legacy::-webkit-scrollbar-thumb:hover{background-color:var(--tui-clear-active)}:host._legacy::-webkit-scrollbar-thumb:active{background-color:var(--tui-text-03)}}:host .t-hover-mode:not(:active){transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:0}:host:hover .t-hover-mode{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:1}.t-content{isolation:isolate;flex:1;flex-basis:auto;width:100%;height:-webkit-max-content;height:max-content}.t-content_delegated{height:100%}.t-bars{color:var(--tui-text-01)}\n"], components: [{ type: i1.TuiScrollControlsComponent, selector: "tui-scroll-controls" }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollbarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-scrollbar',
                    templateUrl: './scrollbar.template.html',
                    styleUrls: ['./scrollbar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: TUI_SCROLL_REF,
                            deps: [TuiScrollbarComponent],
                            useFactory: ({ browserScrollRef, }) => browserScrollRef,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [CSS_TOKEN]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [USER_AGENT]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_SCROLLBAR_OPTIONS]
                }] }]; }, propDecorators: { hidden: [{
                type: Input
            }], showNative: [{
                type: HostBinding,
                args: ['class._legacy']
            }], onScrollable: [{
                type: HostListener,
                args: [`${TUI_SCROLLABLE}.stop`, ['$event.detail']]
            }], scrollIntoView: [{
                type: HostListener,
                args: [`${TUI_SCROLL_INTO_VIEW}.stop`, ['$event.detail']]
            }] } });
//# sourceMappingURL=data:application/json;base64,