import { ElementRef, Inject, Injectable, Optional } from '@angular/core';
import { Observable } from 'rxjs';
import { SafeObserver } from '../classes/safe-observer';
import { INTERSECTION_ROOT } from '../tokens/intersection-root';
import { INTERSECTION_ROOT_MARGIN } from '../tokens/intersection-root-margin';
import { INTERSECTION_THRESHOLD } from '../tokens/intersection-threshold';
import { INTERSECTION_OBSERVER_SUPPORT } from '../tokens/support';
import * as i0 from "@angular/core";
export class IntersectionObserverService extends Observable {
    constructor({ nativeElement }, _support, rootMargin, threshold, root) {
        super(subscriber => {
            const observer = new SafeObserver(entries => {
                subscriber.next(entries);
            }, {
                root: root === null || root === void 0 ? void 0 : root.nativeElement,
                rootMargin,
                threshold,
            });
            observer.observe(nativeElement);
            return () => {
                observer.disconnect();
            };
        });
    }
}
IntersectionObserverService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IntersectionObserverService, deps: [{ token: ElementRef }, { token: INTERSECTION_OBSERVER_SUPPORT }, { token: INTERSECTION_ROOT_MARGIN }, { token: INTERSECTION_THRESHOLD }, { token: INTERSECTION_ROOT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
IntersectionObserverService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IntersectionObserverService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IntersectionObserverService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [INTERSECTION_OBSERVER_SUPPORT]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [INTERSECTION_ROOT_MARGIN]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [INTERSECTION_THRESHOLD]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [INTERSECTION_ROOT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJzZWN0aW9uLW9ic2VydmVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWJzL2ludGVyc2VjdGlvbi1vYnNlcnZlci9zcmMvc2VydmljZXMvaW50ZXJzZWN0aW9uLW9ic2VydmVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBRWhDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUN0RCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUM5RCxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUM1RSxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUN4RSxPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7QUFHaEUsTUFBTSxPQUFPLDJCQUE0QixTQUFRLFVBQXVDO0lBQ3BGLFlBQ3dCLEVBQUMsYUFBYSxFQUFzQixFQUNqQixRQUFpQixFQUN0QixVQUFrQixFQUNwQixTQUE0QixFQUNyQixJQUFnQztRQUV2RSxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDZixNQUFNLFFBQVEsR0FBRyxJQUFJLFlBQVksQ0FDN0IsT0FBTyxDQUFDLEVBQUU7Z0JBQ04sVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUM3QixDQUFDLEVBQ0Q7Z0JBQ0ksSUFBSSxFQUFFLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxhQUFhO2dCQUN6QixVQUFVO2dCQUNWLFNBQVM7YUFDWixDQUNKLENBQUM7WUFFRixRQUFRLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBRWhDLE9BQU8sR0FBRyxFQUFFO2dCQUNSLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUMxQixDQUFDLENBQUM7UUFDTixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7O3lIQTFCUSwyQkFBMkIsa0JBRXhCLFVBQVUsYUFDViw2QkFBNkIsYUFDN0Isd0JBQXdCLGFBQ3hCLHNCQUFzQixhQUNWLGlCQUFpQjs2SEFOaEMsMkJBQTJCOzRGQUEzQiwyQkFBMkI7a0JBRHZDLFVBQVU7OzBCQUdGLE1BQU07MkJBQUMsVUFBVTs7MEJBQ2pCLE1BQU07MkJBQUMsNkJBQTZCOzswQkFDcEMsTUFBTTsyQkFBQyx3QkFBd0I7OzBCQUMvQixNQUFNOzJCQUFDLHNCQUFzQjs7MEJBQzdCLFFBQVE7OzBCQUFJLE1BQU07MkJBQUMsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFbGVtZW50UmVmLCBJbmplY3QsIEluamVjdGFibGUsIE9wdGlvbmFsfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7U2FmZU9ic2VydmVyfSBmcm9tICcuLi9jbGFzc2VzL3NhZmUtb2JzZXJ2ZXInO1xuaW1wb3J0IHtJTlRFUlNFQ1RJT05fUk9PVH0gZnJvbSAnLi4vdG9rZW5zL2ludGVyc2VjdGlvbi1yb290JztcbmltcG9ydCB7SU5URVJTRUNUSU9OX1JPT1RfTUFSR0lOfSBmcm9tICcuLi90b2tlbnMvaW50ZXJzZWN0aW9uLXJvb3QtbWFyZ2luJztcbmltcG9ydCB7SU5URVJTRUNUSU9OX1RIUkVTSE9MRH0gZnJvbSAnLi4vdG9rZW5zL2ludGVyc2VjdGlvbi10aHJlc2hvbGQnO1xuaW1wb3J0IHtJTlRFUlNFQ1RJT05fT0JTRVJWRVJfU1VQUE9SVH0gZnJvbSAnLi4vdG9rZW5zL3N1cHBvcnQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW50ZXJzZWN0aW9uT2JzZXJ2ZXJTZXJ2aWNlIGV4dGVuZHMgT2JzZXJ2YWJsZTxJbnRlcnNlY3Rpb25PYnNlcnZlckVudHJ5W10+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSB7bmF0aXZlRWxlbWVudH06IEVsZW1lbnRSZWY8RWxlbWVudD4sXG4gICAgICAgIEBJbmplY3QoSU5URVJTRUNUSU9OX09CU0VSVkVSX1NVUFBPUlQpIF9zdXBwb3J0OiBib29sZWFuLFxuICAgICAgICBASW5qZWN0KElOVEVSU0VDVElPTl9ST09UX01BUkdJTikgcm9vdE1hcmdpbjogc3RyaW5nLFxuICAgICAgICBASW5qZWN0KElOVEVSU0VDVElPTl9USFJFU0hPTEQpIHRocmVzaG9sZDogbnVtYmVyIHwgbnVtYmVyW10sXG4gICAgICAgIEBPcHRpb25hbCgpIEBJbmplY3QoSU5URVJTRUNUSU9OX1JPT1QpIHJvb3Q6IEVsZW1lbnRSZWY8RWxlbWVudD4gfCBudWxsLFxuICAgICkge1xuICAgICAgICBzdXBlcihzdWJzY3JpYmVyID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IFNhZmVPYnNlcnZlcihcbiAgICAgICAgICAgICAgICBlbnRyaWVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaWJlci5uZXh0KGVudHJpZXMpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByb290OiByb290Py5uYXRpdmVFbGVtZW50LFxuICAgICAgICAgICAgICAgICAgICByb290TWFyZ2luLFxuICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUobmF0aXZlRWxlbWVudCk7XG5cbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19