{"version":3,"file":"ng-web-apis-intersection-observer.js","sources":["../../../libs/intersection-observer/src/classes/safe-observer.ts","../../../libs/intersection-observer/src/tokens/intersection-root.ts","../../../libs/intersection-observer/src/tokens/intersection-root-margin.ts","../../../libs/intersection-observer/src/utils/root-margin-factory.ts","../../../libs/intersection-observer/src/tokens/intersection-threshold.ts","../../../libs/intersection-observer/src/utils/threshold-factory.ts","../../../libs/intersection-observer/src/directives/intersection-observer.directive.ts","../../../libs/intersection-observer/src/services/intersection-observee.service.ts","../../../libs/intersection-observer/src/directives/intersection-observee.directive.ts","../../../libs/intersection-observer/src/directives/intersection-root.directive.ts","../../../libs/intersection-observer/src/module.ts","../../../libs/intersection-observer/src/tokens/support.ts","../../../libs/intersection-observer/src/services/intersection-observer.service.ts","../../../libs/intersection-observer/src/index.ts","../../../libs/intersection-observer/src/ng-web-apis-intersection-observer.ts"],"sourcesContent":["export const SafeObserver =\n    typeof IntersectionObserver !== `undefined`\n        ? IntersectionObserver\n        : class implements IntersectionObserver {\n              readonly root = null;\n              readonly rootMargin = ``;\n              readonly thresholds = [];\n              observe(): void {}\n              unobserve(): void {}\n              disconnect(): void {}\n              takeRecords(): IntersectionObserverEntry[] {\n                  return [];\n              }\n          };\n","import {ElementRef, InjectionToken} from '@angular/core';\n\nexport const INTERSECTION_ROOT = new InjectionToken<ElementRef<Element>>(\n    'Root element for IntersectionObserver',\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const INTERSECTION_ROOT_MARGIN_DEFAULT = '0px 0px 0px 0px';\nexport const INTERSECTION_ROOT_MARGIN = new InjectionToken<string>(\n    'rootMargin for IntersectionObserver',\n    {\n        providedIn: 'root',\n        factory: () => INTERSECTION_ROOT_MARGIN_DEFAULT,\n    },\n);\n","import {INTERSECTION_ROOT_MARGIN_DEFAULT} from '../tokens/intersection-root-margin';\n\nexport function rootMarginFactory(rootMargin: string | null): string {\n    return rootMargin || INTERSECTION_ROOT_MARGIN_DEFAULT;\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const INTERSECTION_THRESHOLD_DEFAULT = 0;\nexport const INTERSECTION_THRESHOLD = new InjectionToken<number | number[]>(\n    'threshold for IntersectionObserver',\n    {\n        providedIn: 'root',\n        factory: () => INTERSECTION_THRESHOLD_DEFAULT,\n    },\n);\n","import {INTERSECTION_THRESHOLD_DEFAULT} from '../tokens/intersection-threshold';\n\nexport function thresholdFactory(threshold: string | null): number | number[] {\n    return threshold?.split(',').map(parseFloat) || INTERSECTION_THRESHOLD_DEFAULT;\n}\n","import {\n    Attribute,\n    Directive,\n    ElementRef,\n    Inject,\n    OnDestroy,\n    Optional,\n} from '@angular/core';\n\nimport {SafeObserver} from '../classes/safe-observer';\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\nimport {rootMarginFactory} from '../utils/root-margin-factory';\nimport {thresholdFactory} from '../utils/threshold-factory';\n\n@Directive({\n    selector: '[waIntersectionObserver]',\n    exportAs: 'IntersectionObserver',\n})\nexport class IntersectionObserverDirective extends SafeObserver implements OnDestroy {\n    private readonly callbacks = new Map<Element, IntersectionObserverCallback>();\n\n    constructor(\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\n        @Attribute('waIntersectionRootMargin') rootMargin: string | null,\n        @Attribute('waIntersectionThreshold') threshold: string | null,\n    ) {\n        super(\n            entries => {\n                this.callbacks.forEach((callback, element) => {\n                    const filtered = entries.filter(({target}) => target === element);\n\n                    return filtered.length && callback(filtered, this);\n                });\n            },\n            {\n                root: root && root.nativeElement,\n                rootMargin: rootMarginFactory(rootMargin),\n                threshold: thresholdFactory(threshold),\n            },\n        );\n    }\n\n    override observe(target: Element, callback: IntersectionObserverCallback = () => {}) {\n        super.observe(target);\n        this.callbacks.set(target, callback);\n    }\n\n    override unobserve(target: Element) {\n        super.unobserve(target);\n        this.callbacks.delete(target);\n    }\n\n    ngOnDestroy() {\n        this.disconnect();\n    }\n}\n","import {ElementRef, Inject, Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport {IntersectionObserverDirective} from '../directives/intersection-observer.directive';\n\n@Injectable()\nexport class IntersectionObserveeService extends Observable<IntersectionObserverEntry[]> {\n    constructor(\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\n        @Inject(IntersectionObserverDirective)\n        observer: IntersectionObserverDirective,\n    ) {\n        super(subscriber => {\n            observer.observe(nativeElement, entries => {\n                subscriber.next(entries);\n            });\n\n            return () => {\n                observer.unobserve(nativeElement);\n            };\n        });\n\n        return this.pipe(share());\n    }\n}\n","import {Directive, Inject} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {IntersectionObserveeService} from '../services/intersection-observee.service';\n\n@Directive({\n    selector: '[waIntersectionObservee]',\n    outputs: ['waIntersectionObservee'],\n    providers: [IntersectionObserveeService],\n})\nexport class IntersectionObserveeDirective {\n    constructor(\n        @Inject(IntersectionObserveeService)\n        readonly waIntersectionObservee: Observable<IntersectionObserverEntry[]>,\n    ) {}\n}\n","import {Directive, ElementRef} from '@angular/core';\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\n\n@Directive({\n    selector: '[waIntersectionRoot]',\n    providers: [\n        {\n            provide: INTERSECTION_ROOT,\n            useExisting: ElementRef,\n        },\n    ],\n})\nexport class IntersectionRootDirective {}\n","import {NgModule} from '@angular/core';\nimport {IntersectionObserveeDirective} from './directives/intersection-observee.directive';\nimport {IntersectionObserverDirective} from './directives/intersection-observer.directive';\nimport {IntersectionRootDirective} from './directives/intersection-root.directive';\n\n@NgModule({\n    declarations: [\n        IntersectionObserverDirective,\n        IntersectionObserveeDirective,\n        IntersectionRootDirective,\n    ],\n    exports: [\n        IntersectionObserverDirective,\n        IntersectionObserveeDirective,\n        IntersectionRootDirective,\n    ],\n})\nexport class IntersectionObserverModule {}\n","import {InjectionToken} from '@angular/core';\n\n/**\n * @deprecated Always true. Kept for backward compatibility.\n */\nexport const INTERSECTION_OBSERVER_SUPPORT = new InjectionToken<boolean>(\n    'Intersection Observer API support',\n    {\n        providedIn: 'root',\n        factory: () => true,\n    },\n);\n","import {ElementRef, Inject, Injectable, Optional} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {SafeObserver} from '../classes/safe-observer';\nimport {INTERSECTION_ROOT} from '../tokens/intersection-root';\nimport {INTERSECTION_ROOT_MARGIN} from '../tokens/intersection-root-margin';\nimport {INTERSECTION_THRESHOLD} from '../tokens/intersection-threshold';\nimport {INTERSECTION_OBSERVER_SUPPORT} from '../tokens/support';\n\n@Injectable()\nexport class IntersectionObserverService extends Observable<IntersectionObserverEntry[]> {\n    constructor(\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\n        @Inject(INTERSECTION_OBSERVER_SUPPORT) _support: boolean,\n        @Inject(INTERSECTION_ROOT_MARGIN) rootMargin: string,\n        @Inject(INTERSECTION_THRESHOLD) threshold: number | number[],\n        @Optional() @Inject(INTERSECTION_ROOT) root: ElementRef<Element> | null,\n    ) {\n        super(subscriber => {\n            const observer = new SafeObserver(\n                entries => {\n                    subscriber.next(entries);\n                },\n                {\n                    root: root?.nativeElement,\n                    rootMargin,\n                    threshold,\n                },\n            );\n\n            observer.observe(nativeElement);\n\n            return () => {\n                observer.disconnect();\n            };\n        });\n    }\n}\n","/**\n * Public API Surface of @ng-web-apis/intersection-observer\n */\n\n/* Directives */\nexport * from './directives/intersection-observee.directive';\nexport * from './directives/intersection-observer.directive';\nexport * from './directives/intersection-root.directive';\n\n/* Modules */\nexport * from './module';\n\n/* Services */\nexport * from './services/intersection-observee.service';\nexport * from './services/intersection-observer.service';\n\n/* Tokens */\nexport * from './tokens/intersection-root';\nexport * from './tokens/intersection-root-margin';\nexport * from './tokens/intersection-threshold';\nexport * from './tokens/support';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}