{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, Inject, NgModule } from '@angular/core';\nimport { tuiFormatSignSymbol, tuiFormatCurrency } from '@taiga-ui/addon-commerce';\nimport { tuiCreateToken, tuiProvideOptions, CHAR_NO_BREAK_SPACE } from '@taiga-ui/cdk';\nimport { tuiFormatNumber, TUI_NUMBER_FORMAT_OBSERVABLE } from '@taiga-ui/core';\nimport { map } from 'rxjs/operators';\nimport * as i1 from 'rxjs';\nconst TUI_AMOUNT_DEFAULT_OPTIONS = {\n  currency: null,\n  currencyAlign: 'right',\n  sign: 'negative-only'\n};\nconst TUI_AMOUNT_OPTIONS = tuiCreateToken(TUI_AMOUNT_DEFAULT_OPTIONS);\nfunction tuiAmountOptionsProvider(options) {\n  return tuiProvideOptions(TUI_AMOUNT_OPTIONS, options, TUI_AMOUNT_DEFAULT_OPTIONS);\n}\nconst DEFAULT_DECIMAL_LIMIT = 2;\nlet TuiAmountPipePipe = /*#__PURE__*/(() => {\n  class TuiAmountPipePipe {\n    constructor(options, format) {\n      this.options = options;\n      this.format = format;\n    }\n    transform(value, currency = this.options.currency, currencyAlign = this.options.currencyAlign) {\n      return this.format.pipe(map(format => {\n        const sign = tuiFormatSignSymbol(value, this.options.sign);\n        const currencySymbol = tuiFormatCurrency(currency);\n        const formatted = tuiFormatNumber(Math.abs(value), Object.assign(Object.assign({}, format), {\n          decimalLimit: this.getDecimalLimit(value, Number.isNaN(format.decimalLimit) ? DEFAULT_DECIMAL_LIMIT : format.decimalLimit, (format === null || format === void 0 ? void 0 : format.decimal) || 'not-zero')\n        }));\n        const space = (currencySymbol === null || currencySymbol === void 0 ? void 0 : currencySymbol.length) > 1 || currencyAlign === 'right' ? CHAR_NO_BREAK_SPACE : '';\n        return currencyAlign === 'right' ? `${sign}${formatted}${space}${currencySymbol}` : `${sign}${currencySymbol}${space}${formatted}`;\n      }));\n    }\n    getDecimalLimit(value, limit, decimal) {\n      return decimal === 'always' || decimal === 'not-zero' && value % 1 ? limit : 0;\n    }\n  }\n  TuiAmountPipePipe.ɵfac = function TuiAmountPipePipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiAmountPipePipe)(i0.ɵɵdirectiveInject(TUI_AMOUNT_OPTIONS, 16), i0.ɵɵdirectiveInject(TUI_NUMBER_FORMAT_OBSERVABLE, 16));\n  };\n  TuiAmountPipePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"tuiAmount\",\n    type: TuiAmountPipePipe,\n    pure: true,\n    standalone: false\n  });\n  return TuiAmountPipePipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiAmountPipeModule = /*#__PURE__*/(() => {\n  class TuiAmountPipeModule {}\n  TuiAmountPipeModule.ɵfac = function TuiAmountPipeModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiAmountPipeModule)();\n  };\n  TuiAmountPipeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiAmountPipeModule\n  });\n  TuiAmountPipeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiAmountPipeModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_AMOUNT_DEFAULT_OPTIONS, TUI_AMOUNT_OPTIONS, TuiAmountPipeModule, TuiAmountPipePipe, tuiAmountOptionsProvider };\n//# sourceMappingURL=taiga-ui-experimental-pipes-amount.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}