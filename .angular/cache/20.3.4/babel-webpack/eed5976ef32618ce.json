{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, Output, HostBinding, HostListener, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport * as i4 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, tuiGetClipboardDataText, AbstractTuiControl, CHAR_PLUS, tuiAsFocusableItemAccessor, tuiAsControl, tuiPure, TuiLetModule, TuiMapperPipeModule, TuiActiveZoneModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_NON_DIGITS_REGEXP, TUI_MASK_SYMBOLS_REGEXP, TuiFlagPipe, TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, TuiSvgModule, TuiGroupModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiHintModule, TuiHostedDropdownModule, TuiDataListModule, TuiWrapperModule, TuiFlagPipeModule } from '@taiga-ui/core';\nimport { TuiCountryIsoCode } from '@taiga-ui/i18n';\nimport { TUI_ARROW, TuiArrowModule } from '@taiga-ui/kit/components/arrow';\nimport * as i2 from '@taiga-ui/kit/components/input-phone';\nimport { TuiInputPhoneComponent, TuiInputPhoneModule } from '@taiga-ui/kit/components/input-phone';\nimport * as i8 from '@taiga-ui/kit/pipes';\nimport { TuiToCountryCodePipe } from '@taiga-ui/kit/pipes';\nimport { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_COUNTRIES, TUI_COUNTRIES_MASKS } from '@taiga-ui/kit/tokens';\nimport { tuiIsoToCountryCode, tuiGetMaxAllowedPhoneLength } from '@taiga-ui/kit/utils';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as i7 from 'rxjs';\nconst _c0 = [\"*\"];\nfunction TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_6_button_1_Template_button_click_0_listener() {\n      const item_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onItemClick(item_r4));\n    });\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵpipe(2, \"tuiFlag\");\n    i0.ɵɵelementStart(3, \"span\", 12);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 13);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"tuiMapper\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const countriesNames_r5 = i0.ɵɵnextContext(2).ngIf;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind1(2, 3, item_r4), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", countriesNames_r5[item_r4], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 5, item_r4, ctx_r1.isoToCountryCodeMapper), \" \");\n  }\n}\nfunction TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\");\n    i0.ɵɵtemplate(1, TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_6_button_1_Template, 8, 8, \"button\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.countries);\n  }\n}\nfunction TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 14);\n    i0.ɵɵpipe(1, \"tuiFlag\");\n  }\n  if (rf & 2) {\n    const countriesNames_r5 = i0.ɵɵnextContext().ngIf;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"alt\", countriesNames_r5[ctx_r1.countryIsoCode])(\"src\", i0.ɵɵpipeBind1(1, 2, ctx_r1.countryIsoCode), i0.ɵɵsanitizeUrl);\n  }\n}\nfunction TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_10_ng_container_1_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.arrow);\n  }\n}\nfunction TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 4);\n    i0.ɵɵtwoWayListener(\"openChange\", function TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.open, $event) || (ctx_r1.open = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActiveZone($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"tui-primitive-textfield\", 6);\n    i0.ɵɵelementStart(3, \"tui-input-phone\", 7);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_Template_tui_input_phone_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.value, $event) || (ctx_r1.value = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵprojection(4);\n    i0.ɵɵelement(5, \"input\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_6_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(8, TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_8_Template, 2, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(10, TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_ng_template_10_Template, 2, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dropdown_r6 = i0.ɵɵreference(7);\n    const countryValueContent_r7 = i0.ɵɵreference(9);\n    const icon_r8 = i0.ɵɵreference(11);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"canOpen\", !ctx_r1.readOnly)(\"content\", dropdown_r6);\n    i0.ɵɵtwoWayProperty(\"open\", ctx_r1.open);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled)(\"editable\", false)(\"focusable\", ctx_r1.focusable)(\"pseudoFocus\", ctx_r1.open || null)(\"readOnly\", ctx_r1.readOnly)(\"tuiTextfieldCustomContent\", countryValueContent_r7)(\"tuiTextfieldIcon\", icon_r8)(\"tuiTextfieldLabelOutside\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"countryCode\", ctx_r1.inputPhoneCountryCode)(\"disabled\", ctx_r1.disabled)(\"focusable\", ctx_r1.focusable)(\"phoneMaskAfterCountryCode\", ctx_r1.phoneMaskAfterCountryCode)(\"pseudoFocus\", ctx_r1.pseudoFocus)(\"pseudoHover\", ctx_r1.pseudoHover)(\"pseudoInvalid\", ctx_r1.computedInvalid)(\"readOnly\", ctx_r1.readOnly);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.value);\n  }\n}\nconst TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS = {\n  countries: [],\n  countryIsoCode: TuiCountryIsoCode.RU\n};\n/**\n * Default parameters for input phone international component\n */\nconst TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS = tuiCreateToken(TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS);\nfunction tuiInputPhoneInternationalOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS, options, TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS);\n}\nfunction tuiExtractValueFromEvent(event) {\n  var _a;\n  return 'dataTransfer' in event ? ((_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.getData('text/plain')) || '' : tuiGetClipboardDataText(event);\n}\nlet TuiInputPhoneInternationalComponent = /*#__PURE__*/(() => {\n  class TuiInputPhoneInternationalComponent extends AbstractTuiControl {\n    constructor(control, cdr, countriesNames$, countriesMasks, options, flagPipe, extractCountryCodePipe, textfieldSize) {\n      super(control, cdr);\n      this.countriesNames$ = countriesNames$;\n      this.countriesMasks = countriesMasks;\n      this.options = options;\n      this.flagPipe = flagPipe;\n      this.extractCountryCodePipe = extractCountryCodePipe;\n      this.textfieldSize = textfieldSize;\n      this.countries = this.options.countries;\n      this.countryIsoCodeChange = new EventEmitter();\n      this.countryIsoCode = this.options.countryIsoCode;\n      this.open = false;\n      this.arrow = TUI_ARROW;\n      this.isoToCountryCodeMapper = item => tuiIsoToCountryCode(this.countriesMasks, item);\n    }\n    set isoCode(code) {\n      var _a;\n      if (this.countryIsoCode === code) {\n        return;\n      }\n      (_a = this.inputPhoneComponent) === null || _a === void 0 ? void 0 : _a.writeValue(this.value);\n      this.countryIsoCode = code;\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get nativeFocusableElement() {\n      return this.inputPhoneComponent && !this.computedDisabled ? this.inputPhoneComponent.nativeFocusableElement : null;\n    }\n    get focused() {\n      return !!this.primitiveTextfield && this.primitiveTextfield.focused || !!this.inputPhoneComponent && this.inputPhoneComponent.focused;\n    }\n    get inputPhoneCountryCode() {\n      return tuiIsoToCountryCode(this.countriesMasks, this.countryIsoCode);\n    }\n    get phoneMaskAfterCountryCode() {\n      const countryCode = this.inputPhoneCountryCode;\n      return this.calculateMaskAfterCountryCode(this.countriesMasks[this.countryIsoCode], countryCode);\n    }\n    /**\n     * @deprecated use `<img [src]=\"countryIsoCode | tuiFlagPipe\" />`\n     * TODO drop in v4.0\n     */\n    get countryFlagPath() {\n      return this.getFlagPath(this.countryIsoCode);\n    }\n    onPaste(event) {\n      let value = tuiExtractValueFromEvent(event).replace(TUI_NON_DIGITS_REGEXP, '');\n      const countryIsoCode = this.extractCountryCodePipe.transform(value, this.countries);\n      if (!countryIsoCode) {\n        this.value = `${this.inputPhoneCountryCode}${value}`.replace(TUI_MASK_SYMBOLS_REGEXP, '').slice(0, tuiGetMaxAllowedPhoneLength(this.countriesMasks, this.countryIsoCode));\n        return;\n      }\n      if (countryIsoCode === TuiCountryIsoCode.RU) {\n        value = value.replace(/^8/, '7');\n      }\n      this.updateCountryIsoCode(countryIsoCode);\n      this.value = `${CHAR_PLUS}${value}`;\n    }\n    /**\n     * @deprecated use `<img [src]=\"countryIsoCode | tuiFlagPipe\" />`\n     * TODO drop in v4.0\n     */\n    getFlagPath(code) {\n      return this.flagPipe.transform(code);\n    }\n    onItemClick(isoCode) {\n      this.open = false;\n      this.updateCountryIsoCode(isoCode);\n      // recalculates mask inside inputPhone to prevent isoCode conflict\n      this.cdr.detectChanges();\n      const maxLength = tuiGetMaxAllowedPhoneLength(this.countriesMasks, isoCode);\n      if (this.value.length > maxLength) {\n        this.value = this.value.slice(0, maxLength);\n      }\n      if (this.nativeFocusableElement) {\n        this.nativeFocusableElement.focus();\n      }\n    }\n    setDisabledState() {\n      super.setDisabledState();\n      this.close();\n    }\n    /**\n     * @deprecated use `{{ countryIsoCode | tuiIsoToCountryCode }}`\n     * TODO drop in v4.0\n     */\n    isoToCountryCode(isoCode) {\n      return tuiIsoToCountryCode(this.countriesMasks, isoCode);\n    }\n    /** @deprecated use 'value' setter */\n    onModelChange(value) {\n      this.value = value;\n    }\n    onActiveZone(active) {\n      this.updateFocused(active);\n    }\n    getFallbackValue() {\n      return '';\n    }\n    calculateMaskAfterCountryCode(mask, countryCode) {\n      return mask.replace(countryCode, '').trim();\n    }\n    close() {\n      this.open = false;\n    }\n    updateCountryIsoCode(code) {\n      this.countryIsoCode = code;\n      this.countryIsoCodeChange.emit(code);\n    }\n  }\n  TuiInputPhoneInternationalComponent.ɵfac = function TuiInputPhoneInternationalComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputPhoneInternationalComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_COUNTRIES), i0.ɵɵdirectiveInject(TUI_COUNTRIES_MASKS), i0.ɵɵdirectiveInject(TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS), i0.ɵɵdirectiveInject(TuiFlagPipe), i0.ɵɵdirectiveInject(TuiToCountryCodePipe), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE));\n  };\n  TuiInputPhoneInternationalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputPhoneInternationalComponent,\n    selectors: [[\"tui-input-phone-international\"]],\n    viewQuery: function TuiInputPhoneInternationalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiInputPhoneComponent, 5);\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputPhoneComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primitiveTextfield = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputPhoneInternationalComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"paste.capture.prevent.stop\", function TuiInputPhoneInternationalComponent_paste_capture_prevent_stop_HostBindingHandler($event) {\n          return ctx.onPaste($event);\n        })(\"drop.capture.prevent.stop\", function TuiInputPhoneInternationalComponent_drop_capture_prevent_stop_HostBindingHandler($event) {\n          return ctx.onPaste($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      isoCode: [0, \"countryIsoCode\", \"isoCode\"],\n      countries: \"countries\"\n    },\n    outputs: {\n      countryIsoCodeChange: \"countryIsoCodeChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputPhoneInternationalComponent), tuiAsControl(TuiInputPhoneInternationalComponent),\n    // TODO: for backward compatibility only. Drop in v4.0\n    TuiFlagPipe, TuiToCountryCodePipe], [FIXED_DROPDOWN_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 3,\n    consts: [[\"dropdown\", \"\"], [\"countryValueContent\", \"\"], [\"icon\", \"\"], [\"class\", \"t-hosted-dropdown\", 3, \"canOpen\", \"content\", \"open\", \"openChange\", \"tuiActiveZoneChange\", 4, \"ngIf\"], [1, \"t-hosted-dropdown\", 3, \"openChange\", \"tuiActiveZoneChange\", \"canOpen\", \"content\", \"open\"], [\"tuiGroup\", \"\"], [\"tuiHintContent\", \"\", \"tuiTextfieldPostfix\", \"\", \"tuiTextfieldPrefix\", \"\", 1, \"t-country-select\", \"tui-group__auto-width-item\", 3, \"disabled\", \"editable\", \"focusable\", \"pseudoFocus\", \"readOnly\", \"tuiTextfieldCustomContent\", \"tuiTextfieldIcon\", \"tuiTextfieldLabelOutside\"], [1, \"t-input-phone\", \"tui-group__auto-width-item\", 3, \"ngModelChange\", \"countryCode\", \"disabled\", \"focusable\", \"phoneMaskAfterCountryCode\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"readOnly\", \"ngModel\"], [\"autocomplete\", \"new-password\", \"tuiTextfield\", \"\"], [\"tuiOption\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"tuiOption\", \"\", 3, \"click\"], [\"alt\", \"\", 1, \"t-country-item-flag\", 3, \"src\"], [1, \"t-country-item-name\"], [1, \"t-country-item-code\"], [1, \"t-flag\", 3, \"alt\", \"src\"], [\"appearance\", \"icon\", \"tuiWrapper\", \"\"], [4, \"polymorpheusOutlet\"]],\n    template: function TuiInputPhoneInternationalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, TuiInputPhoneInternationalComponent_tui_hosted_dropdown_0_Template, 12, 20, \"tui-hosted-dropdown\", 3);\n        i0.ɵɵpipe(1, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.countriesNames$));\n      }\n    },\n    dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i2.TuiInputPhoneComponent, i1.TuiTextfieldComponent, i1.TuiDataListComponent, i1.TuiOptionComponent, i3.NgIf, i4.TuiActiveZoneDirective, i1.TuiGroupDirective, i1.TuiPrimitiveTextfieldDirective, i1.TuiHintOptionsDirective, i1.TuiTextfieldPostfixDirective, i1.TuiTextfieldPrefixDirective, i1.TuiTextfieldCustomContentDirective, i1.TuiTextfieldIconDirective, i1.TuiTextfieldLabelOutsideDirective, i2.TuiInputPhoneDirective, i5.NgControlStatus, i5.NgModel, i3.NgForOf, i1.TuiWrapperDirective, i6.PolymorpheusOutletDirective, i3.AsyncPipe, i1.TuiFlagPipe, i4.TuiMapperPipe],\n    styles: [\"[_nghost-%COMP%]{display:block}._disabled[_nghost-%COMP%]{pointer-events:none}.t-hosted-dropdown[_ngcontent-%COMP%]{display:block}.t-country-select[_ngcontent-%COMP%]{width:5.625rem}.t-country-select[_ngcontent-%COMP%]:not(._readonly)     input:not(:disabled){cursor:pointer}.t-country-select._readonly[_ngcontent-%COMP%]     input{cursor:default}.t-country-select[data-size=m][_ngcontent-%COMP%]{width:5.5rem}.t-country-select[data-size=s][_ngcontent-%COMP%]{width:2rem}.t-country-select[data-size=s][_ngcontent-%COMP%]   .t-flag[_ngcontent-%COMP%]{margin-left:-1rem}.t-arrow-icon[_ngcontent-%COMP%]{position:relative;display:flex;width:1.5rem;height:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none;pointer-events:auto}._readonly[_nghost-%COMP%]   .t-arrow-icon[_ngcontent-%COMP%], ._disabled[_nghost-%COMP%]   .t-arrow-icon[_ngcontent-%COMP%]{pointer-events:none}.t-arrow-icon_open[_ngcontent-%COMP%]{transform:rotate(180deg)}.t-input-phone[_ngcontent-%COMP%]{flex:1}.t-flag[_ngcontent-%COMP%]{width:1.75rem;height:1.25rem;margin-left:-.5rem}.t-country-item-flag[_ngcontent-%COMP%]{width:1.75rem;height:1.25rem}.t-country-item-name[_ngcontent-%COMP%]{margin-left:.75rem;margin-right:auto}.t-country-item-code[_ngcontent-%COMP%]{color:var(--tui-text-02);margin-right:.25rem}\"],\n    changeDetection: 0\n  });\n  __decorate([tuiPure], TuiInputPhoneInternationalComponent.prototype, \"calculateMaskAfterCountryCode\", null);\n  return TuiInputPhoneInternationalComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputPhoneInternationalModule = /*#__PURE__*/(() => {\n  class TuiInputPhoneInternationalModule {}\n  TuiInputPhoneInternationalModule.ɵfac = function TuiInputPhoneInternationalModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputPhoneInternationalModule)();\n  };\n  TuiInputPhoneInternationalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputPhoneInternationalModule\n  });\n  TuiInputPhoneInternationalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiSvgModule, TuiInputPhoneModule, TuiGroupModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiHintModule, TuiHostedDropdownModule, TuiDataListModule, TuiArrowModule, TuiWrapperModule, TuiLetModule, TuiMapperPipeModule, TuiActiveZoneModule, TuiFlagPipeModule]]\n  });\n  return TuiInputPhoneInternationalModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS, TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS, TuiInputPhoneInternationalComponent, TuiInputPhoneInternationalModule, tuiExtractValueFromEvent, tuiInputPhoneInternationalOptionsProvider };\n//# sourceMappingURL=taiga-ui-kit-components-input-phone-international.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}