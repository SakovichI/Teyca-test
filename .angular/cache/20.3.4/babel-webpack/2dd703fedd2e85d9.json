{"ast":null,"code":"import { inject } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { ControlContainer } from '@angular/forms';\nimport { isArray, isString } from 'lodash-es';\nimport { debounceTime } from 'rxjs';\nimport { BindQueryParams } from '../classes';\nimport { parseParams } from '../helpers';\nimport { DEBOUNCE_TIME_UI } from '../../../constants';\nimport * as i0 from \"@angular/core\";\nexport let BindFormQueryParamsDirective = /*#__PURE__*/(() => {\n  class BindFormQueryParamsDirective extends BindQueryParams {\n    #ngControl = inject(ControlContainer);\n    ngOnInit() {\n      this.#patchFormValues();\n      this.#handleFormValuesChanges();\n    }\n    #patchFormValues() {\n      if (!location.search || !this.#ngControl.control) return;\n      const parsedValue = parseParams();\n      this.#ngControl?.control.patchValue(parsedValue);\n    }\n    #handleFormValuesChanges() {\n      this.#ngControl.control?.valueChanges.pipe(debounceTime(DEBOUNCE_TIME_UI), takeUntilDestroyed(this.destroyRef)).subscribe(value => this.updateQueryParams(this.#resolveParams(value)));\n    }\n    #resolveParams(params) {\n      const stringifyValue = value => isString(value) ? value : JSON.stringify(value);\n      const toResolvedParams = (resolvedParams, [key, value]) => {\n        resolvedParams[key] = this.#isEmptyValue(value) ? null : stringifyValue(value);\n        return resolvedParams;\n      };\n      return Object.entries(params).reduce(toResolvedParams, {});\n    }\n    #isEmptyValue(value) {\n      switch (typeof value) {\n        case 'object':\n          if (isArray(value)) return !value.length;\n          return !value || !Object.keys(value).length;\n        case 'string':\n          return !value || value === '';\n        case 'boolean':\n          return !value;\n        default:\n          return false;\n      }\n    }\n    static ɵfac = /*@__PURE__*/(() => {\n      let ɵBindFormQueryParamsDirective_BaseFactory;\n      return function BindFormQueryParamsDirective_Factory(__ngFactoryType__) {\n        return (ɵBindFormQueryParamsDirective_BaseFactory || (ɵBindFormQueryParamsDirective_BaseFactory = i0.ɵɵgetInheritedFactory(BindFormQueryParamsDirective)))(__ngFactoryType__ || BindFormQueryParamsDirective);\n      };\n    })();\n    static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: BindFormQueryParamsDirective,\n      selectors: [[\"\", \"mwBindFormQueryParams\", \"\"]],\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return BindFormQueryParamsDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}