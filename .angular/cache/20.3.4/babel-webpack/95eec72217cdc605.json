{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Self, Inject, Optional, ViewChild, Input, HostListener, NgModule } from '@angular/core';\nimport { tuiCreateToken, tuiProvideOptions, tuiIsString, TuiDestroyService, TUI_PLATFORM } from '@taiga-ui/cdk';\nimport * as i4 from '@taiga-ui/core';\nimport { TuiHintOptionsDirective, TUI_MODE, TUI_HINT_OPTIONS, MODE_PROVIDER, TuiHintHoverDirective, TuiHintModule } from '@taiga-ui/core';\nimport * as i3 from '@taiga-ui/experimental/directives/appearance';\nimport { TuiAppearanceDirective, TuiAppearanceModule } from '@taiga-ui/experimental/directives/appearance';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from '@taiga-ui/experimental/directives/icons';\nimport * as i2 from '@taiga-ui/experimental/components/button';\nimport { TuiButtonModule } from '@taiga-ui/experimental/components/button';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from 'rxjs';\nimport { TuiIconModule } from '@taiga-ui/experimental/components/icon';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nconst TUI_TOOLTIP_DEFAULT_OPTIONS = {\n  icons: 'tuiIconHelpCircle'\n};\nconst TUI_TOOLTIP_OPTIONS = tuiCreateToken(TUI_TOOLTIP_DEFAULT_OPTIONS);\nfunction tuiTooltipOptionsProvider(options) {\n  return tuiProvideOptions(TUI_TOOLTIP_OPTIONS, options, TUI_TOOLTIP_DEFAULT_OPTIONS);\n}\n\n// TODO: Turn into a directive with hint as hostDirective in 4.0\nlet TuiTooltipComponent = /*#__PURE__*/(() => {\n  class TuiTooltipComponent extends TuiHintOptionsDirective {\n    constructor(destroy$, mode$, options, tooltipOptions, platform, iconAppearance) {\n      super(options);\n      this.tooltipOptions = tooltipOptions;\n      this.platform = platform;\n      this.iconAppearance = iconAppearance;\n      this.mode = null;\n      this.describeId = '';\n      mode$.pipe(takeUntil(destroy$)).subscribe(mode => {\n        this.mode = mode;\n      });\n    }\n    get computedAppearance() {\n      return this.appearance || this.mode || '';\n    }\n    get tooltipIcon() {\n      const {\n        icons\n      } = this.tooltipOptions;\n      return tuiIsString(icons) ? icons : icons[this.platform];\n    }\n    stopOnMobile(event) {\n      var _a;\n      if (this.platform !== 'web') {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      (_a = this.driver$) === null || _a === void 0 ? void 0 : _a.toggle();\n    }\n  }\n  TuiTooltipComponent.ɵfac = function TuiTooltipComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiTooltipComponent)(i0.ɵɵdirectiveInject(TuiDestroyService, 2), i0.ɵɵdirectiveInject(TUI_MODE), i0.ɵɵdirectiveInject(TUI_HINT_OPTIONS), i0.ɵɵdirectiveInject(TUI_TOOLTIP_OPTIONS), i0.ɵɵdirectiveInject(TUI_PLATFORM), i0.ɵɵdirectiveInject(TuiAppearanceDirective, 8));\n  };\n  TuiTooltipComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiTooltipComponent,\n    selectors: [[\"tui-tooltip\"]],\n    viewQuery: function TuiTooltipComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiHintHoverDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.driver$ = _t.first);\n      }\n    },\n    hostBindings: function TuiTooltipComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function TuiTooltipComponent_mousedown_HostBindingHandler($event) {\n          return ctx.stopOnMobile($event);\n        });\n      }\n    },\n    inputs: {\n      content: \"content\",\n      direction: \"direction\",\n      appearance: \"appearance\",\n      showDelay: \"showDelay\",\n      hideDelay: \"hideDelay\",\n      describeId: \"describeId\",\n      context: \"context\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService, MODE_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 13,\n    consts: [[\"driver\", \"tuiHintHover\"], [\"automation-id\", \"tui-tooltip__icon\", \"size\", \"xs\", \"tuiIconButton\", \"\", 1, \"t-tooltip-button\", 3, \"iconLeft\", \"tuiAppearance\", \"tuiAppearanceState\", \"tuiHint\", \"tuiHintAppearance\", \"tuiHintContext\", \"tuiHintDescribe\", \"tuiHintDirection\", \"tuiHintHideDelay\", \"tuiHintShowDelay\"]],\n    template: function TuiTooltipComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"button\", 1, 0);\n        i0.ɵɵpipe(2, \"async\");\n      }\n      if (rf & 2) {\n        const driver_r1 = i0.ɵɵreference(1);\n        i0.ɵɵproperty(\"iconLeft\", ctx.tooltipIcon)(\"tuiAppearance\", (ctx.iconAppearance == null ? null : ctx.iconAppearance.tuiAppearance) || \"icon\")(\"tuiAppearanceState\", i0.ɵɵpipeBind1(2, 11, driver_r1) ? \"active\" : null)(\"tuiHint\", ctx.content)(\"tuiHintAppearance\", ctx.computedAppearance)(\"tuiHintContext\", ctx.context)(\"tuiHintDescribe\", ctx.describeId)(\"tuiHintDirection\", ctx.direction)(\"tuiHintHideDelay\", ctx.hideDelay)(\"tuiHintShowDelay\", ctx.showDelay);\n        i0.ɵɵattribute(\"tabindex\", ctx.describeId ? -1 : 0);\n      }\n    },\n    dependencies: [i1.TuiIconsDirective, i2.TuiButtonDirective, i3.TuiAppearanceDirective, i4.TuiHintDirective, i4.TuiHintDriverDirective, i4.TuiHintHoverDirective, i4.TuiHintPositionDirective, i4.TuiHintDescribeDirective, i5.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;font-size:0;line-height:0;pointer-events:auto;border-radius:100%;cursor:pointer}.t-tooltip-button[_ngcontent-%COMP%]{border-radius:inherit;outline-offset:-4px}.t-tooltip-button[_ngcontent-%COMP%]:before{width:1rem;height:1rem}[tuiWrapper][data-appearance=\\\"textfield\\\"][data-state=\\\"disabled\\\"][_nghost-%COMP%]   .t-tooltip-button[_ngcontent-%COMP%], [tuiWrapper][data-appearance=\\\"textfield\\\"][data-state=\\\"disabled\\\"]   [_nghost-%COMP%]   .t-tooltip-button[_ngcontent-%COMP%]{opacity:1}\"],\n    changeDetection: 0\n  });\n  return TuiTooltipComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiTooltipModule = /*#__PURE__*/(() => {\n  class TuiTooltipModule {}\n  TuiTooltipModule.ɵfac = function TuiTooltipModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiTooltipModule)();\n  };\n  TuiTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiTooltipModule\n  });\n  TuiTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiButtonModule, TuiAppearanceModule, TuiHintModule, TuiIconModule, PolymorpheusModule]]\n  });\n  return TuiTooltipModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_TOOLTIP_DEFAULT_OPTIONS, TUI_TOOLTIP_OPTIONS, TuiTooltipComponent, TuiTooltipModule, tuiTooltipOptionsProvider };\n//# sourceMappingURL=taiga-ui-experimental-components-tooltip.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}