{"ast":null,"code":"import { TUI_DEFAULT_LANGUAGE, TUI_LANGUAGE_STORAGE_KEY, TUI_LANGUAGE_LOADER, TUI_LANGUAGE } from '@taiga-ui/i18n/tokens';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional } from '@angular/core';\nimport { LOCAL_STORAGE } from '@ng-web-apis/common';\nimport { from, of, BehaviorSubject } from 'rxjs';\nimport { __awaiter } from 'tslib';\nimport { map } from 'rxjs/operators';\n\n// CommonJS `module.exports` is wrapped as `default` in ESModule.\nfunction normalizeCommonJSImport(importPromise) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return importPromise.then(m => m.default || m);\n  });\n}\nfunction tuiLoadLanguage(language, loader) {\n  return from(normalizeCommonJSImport(loader(language))).pipe(map(module => module === null || module === void 0 ? void 0 : module[`TUI_${language.toUpperCase()}_LANGUAGE`]));\n}\nfunction tuiAsyncLoadLanguage(language, loader, fallback) {\n  return language && loader ? tuiLoadLanguage(language, loader) : of(fallback);\n}\nlet TuiLanguageSwitcher = /*#__PURE__*/(() => {\n  class TuiLanguageSwitcher extends BehaviorSubject {\n    constructor(fallback, key, storage, loader) {\n      super(tuiAsyncLoadLanguage(storage.getItem(key), loader, fallback));\n      this.fallback = fallback;\n      this.key = key;\n      this.storage = storage;\n      this.loader = loader;\n    }\n    get language() {\n      return this.storage.getItem(this.key) || this.fallback.name;\n    }\n    setLanguage(language) {\n      this.storage.setItem(this.key, language);\n      this.next(tuiAsyncLoadLanguage(language, this.loader, this.fallback));\n    }\n    clear() {\n      this.storage.removeItem(this.key);\n      this.next(of(this.fallback));\n    }\n  }\n  TuiLanguageSwitcher.ɵfac = function TuiLanguageSwitcher_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLanguageSwitcher)(i0.ɵɵinject(TUI_DEFAULT_LANGUAGE), i0.ɵɵinject(TUI_LANGUAGE_STORAGE_KEY), i0.ɵɵinject(LOCAL_STORAGE), i0.ɵɵinject(TUI_LANGUAGE_LOADER, 8));\n  };\n  TuiLanguageSwitcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TuiLanguageSwitcher,\n    factory: TuiLanguageSwitcher.ɵfac,\n    providedIn: 'root'\n  });\n  return TuiLanguageSwitcher;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction tuiLanguageSwitcher(loader) {\n  return [{\n    provide: TUI_LANGUAGE_LOADER,\n    useFactory: () => loader\n  }, {\n    provide: TUI_LANGUAGE,\n    useExisting: TuiLanguageSwitcher\n  }];\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiLanguageSwitcher, tuiAsyncLoadLanguage, tuiLanguageSwitcher, tuiLoadLanguage };\n//# sourceMappingURL=taiga-ui-i18n-switch.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}