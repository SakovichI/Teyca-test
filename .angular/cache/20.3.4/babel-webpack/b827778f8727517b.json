{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport { MapListTo, MapTo } from '../../../../../core/decorators';\nimport { Client } from '../../models';\nimport { CLIENT_API_BASE_PATH } from '../../constants';\nimport { mapInstanceToPlain, toResult } from '../../../../../core/helpers';\nimport { AuthService } from '../../../../../auth/services';\nimport * as i0 from \"@angular/core\";\nexport class ClientApiService {\n  #http = inject(HttpClient);\n  #authService = inject(AuthService);\n  getCLients(params) {\n    return this.getClientsList(params).pipe(map(toResult));\n  }\n  getClientsList({\n    pagination,\n    filterValues\n  } = {}) {\n    const search = filterValues?.['search'] ? {\n      search: `phone=${filterValues['search']}`\n    } : null;\n    const params = {\n      ...(pagination && {\n        ...pagination\n      }),\n      ...search\n    };\n    return this.#http.get(`${CLIENT_API_BASE_PATH(this.#authService.accessToken)}`, {\n      params\n    });\n  }\n  getClient(id) {\n    return this.#http.get(`${CLIENT_API_BASE_PATH(this.#authService.accessToken)}/userid/${id}`);\n  }\n  addClient(client) {\n    const transformedClient = mapInstanceToPlain(Client, client);\n    return this.#http.post(`${CLIENT_API_BASE_PATH(this.#authService.accessToken)}`, transformedClient);\n  }\n  updateClient(id, client) {\n    const transformedClient = mapInstanceToPlain(Client, client);\n    return this.#http.put(`${CLIENT_API_BASE_PATH(this.#authService.accessToken)}/${id}`, transformedClient);\n  }\n  deleteClient(id) {\n    return this.#http.delete(`${CLIENT_API_BASE_PATH(this.#authService.accessToken)}/${id}`);\n  }\n  static ɵfac = function ClientApiService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ClientApiService)();\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientApiService,\n    factory: ClientApiService.ɵfac,\n    providedIn: 'root'\n  });\n}\n__decorate([MapListTo(Client)], ClientApiService.prototype, \"getClientsList\", null);\n__decorate([MapTo(Client)], ClientApiService.prototype, \"getClient\", null);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}