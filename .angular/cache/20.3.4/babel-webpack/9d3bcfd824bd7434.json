{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport { maskitoDateOptionsGenerator } from '@maskito/kit';\nimport { AbstractTuiControl, tuiAsFocusableItemAccessor, tuiAsControl } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport * as i2 from '@taiga-ui/kit';\nimport { TuiValueAccessorModule } from '@taiga-ui/kit';\nimport * as i3 from '@maskito/angular';\nimport { MaskitoModule } from '@maskito/angular';\nconst _c0 = [\"*\"];\nlet TuiInputExpireComponent = /*#__PURE__*/(() => {\n  class TuiInputExpireComponent extends AbstractTuiControl {\n    constructor(control, cdr, textfieldSize) {\n      super(control, cdr);\n      this.textfieldSize = textfieldSize;\n      this.autocompleteEnabled = false;\n      this.maskOptions = maskitoDateOptionsGenerator({\n        mode: 'mm/yy',\n        separator: '/'\n      });\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get focused() {\n      return !!this.input && this.input.focused;\n    }\n    get autocomplete() {\n      return this.autocompleteEnabled ? 'cc-exp' : 'off';\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    getFallbackValue() {\n      return '';\n    }\n  }\n  TuiInputExpireComponent.ɵfac = function TuiInputExpireComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputExpireComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE));\n  };\n  TuiInputExpireComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputExpireComponent,\n    selectors: [[\"tui-input-expire\"]],\n    viewQuery: function TuiInputExpireComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputExpireComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      autocompleteEnabled: \"autocompleteEnabled\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputExpireComponent), tuiAsControl(TuiInputExpireComponent)]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 10,\n    consts: [[\"tuiValueAccessor\", \"\", 1, \"t-input\", 3, \"valueChange\", \"focusedChange\", \"disabled\", \"invalid\", \"maskito\", \"nativeId\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"value\"], [\"inputmode\", \"numeric\", \"placeholder\", \"00/00\", \"translate\", \"no\", \"tuiTextfield\", \"\", \"type\", \"\"]],\n    template: function TuiInputExpireComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 0);\n        i0.ɵɵtwoWayListener(\"valueChange\", function TuiInputExpireComponent_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"focusedChange\", function TuiInputExpireComponent_Template_tui_primitive_textfield_focusedChange_0_listener($event) {\n          return ctx.onFocused($event);\n        });\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"invalid\", ctx.computedInvalid)(\"maskito\", ctx.maskOptions)(\"nativeId\", ctx.nativeId)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly);\n        i0.ɵɵtwoWayProperty(\"value\", ctx.value);\n        i0.ɵɵadvance();\n        i0.ɵɵattribute(\"autocomplete\", ctx.autocomplete);\n      }\n    },\n    dependencies: [i1.TuiPrimitiveTextfieldComponent, i1.TuiTextfieldComponent, i1.TuiPrimitiveTextfieldDirective, i2.TuiValueAccessorDirective, i3.MaskitoDirective],\n    styles: [\"[_nghost-%COMP%]{display:block;max-width:11rem;border-radius:var(--tui-radius-m);text-align:left}.t-input[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n    changeDetection: 0\n  });\n  return TuiInputExpireComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputExpireModule = /*#__PURE__*/(() => {\n  class TuiInputExpireModule {}\n  TuiInputExpireModule.ɵfac = function TuiInputExpireModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputExpireModule)();\n  };\n  TuiInputExpireModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputExpireModule\n  });\n  TuiInputExpireModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[MaskitoModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule]]\n  });\n  return TuiInputExpireModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputExpireComponent, TuiInputExpireModule };\n//# sourceMappingURL=taiga-ui-addon-commerce-components-input-expire.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}