{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, EventEmitter, ChangeDetectorRef, TemplateRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ContentChild, ViewChild, Input, HostBinding, Output, Pipe, ContentChildren, forwardRef, NgModule } from '@angular/core';\nimport * as i3 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, AbstractTuiMultipleControl, ALWAYS_TRUE_HANDLER, EMPTY_ARRAY, tuiIsString, tuiArrayToggle, tuiIsNativeFocused, TUI_IS_MOBILE, tuiAsFocusableItemAccessor, tuiAsControl, tuiPure, EMPTY_QUERY, tuiQueryListChanges, tuiGetOriginalArrayFromQueryList, TUI_DEFAULT_IDENTITY_MATCHER, tuiIsPresent, tuiControlValue, EMPTY_FUNCTION, TuiPreventDefaultModule, TuiActiveZoneModule, TuiLetModule, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport { tuiIsFlat } from '@taiga-ui/kit/utils';\nimport * as i4 from '@angular/forms';\nimport { NgControl, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_WATCHED_CONTROLLER, tuiAsDataListHost, TEXTFIELD_CONTROLLER_PROVIDER, TUI_DATA_LIST_ACCESSOR, TuiDataListDirective, TuiHostedDropdownComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TUI_DATA_LIST_HOST, TuiOptionComponent, tuiAsOptionContent, tuiAsDataList, TuiWrapperModule, TuiSvgModule, TuiHostedDropdownModule, TuiLinkModule, TuiDataListModule, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport { TuiStringifiableItem } from '@taiga-ui/kit/classes';\nimport { TUI_ARROW_MODE, TuiArrowModule } from '@taiga-ui/kit/components/arrow';\nimport * as i2 from '@taiga-ui/kit/components/input-tag';\nimport { TuiInputTagComponent, TuiInputTagModule } from '@taiga-ui/kit/components/input-tag';\nimport { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_ITEMS_HANDLERS, TUI_MULTI_SELECT_TEXTS } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiNativeSelect } from '@taiga-ui/kit/abstract';\nimport * as i2$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as i1$1 from '@taiga-ui/kit/components/data-list-wrapper';\nimport { TuiDataListWrapperModule } from '@taiga-ui/kit/components/data-list-wrapper';\nimport { TuiMultiSelectOptionComponent, TuiMultiSelectOptionModule } from '@taiga-ui/kit/components/multi-select-option';\nimport * as i6$1 from '@taiga-ui/kit/pipes/stringify-content';\nimport { TuiStringifyContentPipeModule } from '@taiga-ui/kit/pipes/stringify-content';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nconst _c0 = [\"*\", [[\"select\"]]];\nconst _c1 = [\"*\", \"select\"];\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nfunction TuiMultiSelectComponent_ng_template_7_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"isMobile\"]);\n  }\n}\nfunction TuiMultiSelectComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiMultiSelectComponent_ng_template_7_ng_content_0_Template, 1, 0, \"ng-content\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isMobile);\n  }\n}\nfunction TuiMultiSelectComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 8);\n  }\n}\nfunction TuiMultiSelectComponent_div_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiMultiSelectComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, TuiMultiSelectComponent_div_10_span_1_Template, 2, 1, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const inputTag_r2 = i0.ɵɵreference(2);\n    i0.ɵɵclassProp(\"t-content_fullsize\", inputTag_r2.labelOutside);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.valueContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(4, _c2, ctx_r2.value));\n  }\n}\nfunction TuiMultiSelectComponent_ng_template_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r5 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r5, \" \");\n  }\n}\nfunction TuiMultiSelectComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, TuiMultiSelectComponent_ng_template_11_ng_container_1_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-arrow_native-dropdown\", ctx_r2.nativeDropdownMode);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.arrow);\n  }\n}\nconst _c3 = [\"tuiMultiSelectGroup\", \"\"];\nconst _c4 = [\"*\"];\nfunction TuiMultiSelectGroupComponent_span_0_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵlistener(\"click\", function TuiMultiSelectGroupComponent_span_0_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const value_r2 = i0.ɵɵnextContext().tuiLet;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(value_r2));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const value_r2 = i0.ɵɵnextContext().tuiLet;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !!i0.ɵɵpipeBind1(1, 2, ctx_r2.disabled$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_4_0 = i0.ɵɵpipeBind1(3, 4, ctx_r2.multiSelectTexts$)) == null ? null : tmp_4_0[value_r2 ? \"none\" : \"all\"], \" \");\n  }\n}\nfunction TuiMultiSelectGroupComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1)(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TuiMultiSelectGroupComponent_span_0_button_3_Template, 4, 6, \"button\", 3);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.label);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.label && !i0.ɵɵpipeBind1(4, 2, ctx_r2.empty$));\n  }\n}\nconst _c5 = [\"multiple\", \"\", \"tuiSelect\", \"\"];\nfunction TuiNativeMultiSelectComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiNativeMultiSelectComponent_tui_data_list_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-data-list-wrapper\", 3);\n    i0.ɵɵpipe(1, \"tuiStringifyContent\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r0.disabledItemHandler || ctx_r0.host.disableItemHandler)(\"itemContent\", i0.ɵɵpipeBind1(1, 3, ctx_r0.stringify))(\"items\", ctx_r0.items);\n  }\n}\nfunction TuiNativeMultiSelectComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵpipe(1, \"tuiMapper\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabledItemHandler ? ctx_r0.disabledItemHandler(option_r2) : ctx_r0.host.disableItemHandler(option_r2))(\"selected\", i0.ɵɵpipeBind3(1, 4, option_r2, ctx_r0.selectedMapper, ctx_r0.control.value))(\"value\", ctx_r0.stringify(option_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.stringify(option_r2), \"\\n\");\n  }\n}\nconst _c6 = [\"multiple\", \"\", \"tuiSelect\", \"\", \"labels\", \"\"];\nfunction TuiNativeMultiSelectGroupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiNativeMultiSelectGroupComponent_tui_data_list_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-data-list-wrapper\", 3);\n    i0.ɵɵpipe(1, \"tuiStringifyContent\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r0.disabledItemHandler || ctx_r0.host.disableItemHandler)(\"itemContent\", i0.ɵɵpipeBind1(1, 4, ctx_r0.stringify))(\"items\", ctx_r0.items)(\"labels\", ctx_r0.labels);\n  }\n}\nfunction TuiNativeMultiSelectGroupComponent_optgroup_3_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵpipe(1, \"tuiMapper\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabledItemHandler ? ctx_r0.disabledItemHandler(option_r2) : ctx_r0.host.disableItemHandler(option_r2))(\"selected\", i0.ɵɵpipeBind3(1, 4, option_r2, ctx_r0.selectedMapper, ctx_r0.control.value))(\"value\", ctx_r0.stringify(option_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.stringify(option_r2), \" \");\n  }\n}\nfunction TuiNativeMultiSelectGroupComponent_optgroup_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"optgroup\", 4);\n    i0.ɵɵtemplate(1, TuiNativeMultiSelectGroupComponent_optgroup_3_option_1_Template, 3, 8, \"option\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r3 = ctx.$implicit;\n    const index_r4 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r0.labels[index_r4]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", group_r3);\n  }\n}\nconst _c7 = \"[_nghost-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\";\nconst TUI_MULTI_SELECT_DEFAULT_OPTIONS = {\n  expandable: true,\n  valueContent: ''\n};\n/**\n * Default parameters for MultiSelect component\n */\nconst TUI_MULTI_SELECT_OPTIONS = tuiCreateToken(TUI_MULTI_SELECT_DEFAULT_OPTIONS);\nfunction tuiMultiSelectOptionsProvider(options) {\n  return tuiProvideOptions(TUI_MULTI_SELECT_OPTIONS, options, TUI_MULTI_SELECT_DEFAULT_OPTIONS);\n}\nlet AbstractTuiNativeMultiSelect = /*#__PURE__*/(() => {\n  class AbstractTuiNativeMultiSelect extends AbstractTuiNativeSelect {\n    constructor() {\n      super(...arguments);\n      this.selectedMapper = (option, value) => value.includes(option);\n    }\n    get stringify() {\n      return this.host.stringify;\n    }\n  }\n  AbstractTuiNativeMultiSelect.ɵfac = /* @__PURE__ */(() => {\n    let ɵAbstractTuiNativeMultiSelect_BaseFactory;\n    return function AbstractTuiNativeMultiSelect_Factory(__ngFactoryType__) {\n      return (ɵAbstractTuiNativeMultiSelect_BaseFactory || (ɵAbstractTuiNativeMultiSelect_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractTuiNativeMultiSelect)))(__ngFactoryType__ || AbstractTuiNativeMultiSelect);\n    };\n  })();\n  AbstractTuiNativeMultiSelect.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AbstractTuiNativeMultiSelect,\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return AbstractTuiNativeMultiSelect;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMultiSelectComponent = /*#__PURE__*/(() => {\n  class TuiMultiSelectComponent extends AbstractTuiMultipleControl {\n    constructor(control, cdr, arrowMode, itemsHandlers, options, controller, isMobile) {\n      super(control, cdr);\n      this.arrowMode = arrowMode;\n      this.itemsHandlers = itemsHandlers;\n      this.options = options;\n      this.controller = controller;\n      this.isMobile = isMobile;\n      this.stringify = this.itemsHandlers.stringify;\n      this.identityMatcher = this.itemsHandlers.identityMatcher;\n      this.expandable = this.options.expandable;\n      this.search = '';\n      this.placeholder = '';\n      this.editable = true;\n      this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;\n      this.valueContent = this.options.valueContent;\n      this.tagValidator = ALWAYS_TRUE_HANDLER;\n      this.rows = Infinity;\n      this.autoColor = false;\n      this.searchChange = new EventEmitter();\n      this.open = false;\n      this.valueMapper = (value, stringify, group) => group ? EMPTY_ARRAY : value.map(item => new TuiStringifiableItem(item, stringify));\n      this.disabledItemHandlerWrapper = handler => stringifiable => tuiIsString(stringifiable) || handler(stringifiable.item);\n    }\n    get size() {\n      return this.controller.size;\n    }\n    get arrow() {\n      return this.interactive ? this.arrowMode.interactive : this.arrowMode.disabled;\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get focused() {\n      var _a, _b;\n      return !!((_a = this.input) === null || _a === void 0 ? void 0 : _a.focused) || !!((_b = this.hostedDropdown) === null || _b === void 0 ? void 0 : _b.focused);\n    }\n    get nativeDropdownMode() {\n      return !!this.nativeSelect && this.isMobile && !this.editable;\n    }\n    get computedValue() {\n      return this.computedGroup ? EMPTY_ARRAY : this.value;\n    }\n    // @bad TODO: think of a better way\n    get searchOrSpace() {\n      return this.computedGroup ? ' ' : this.searchString;\n    }\n    get searchString() {\n      return this.search === null ? '' : this.search;\n    }\n    get computedGroup() {\n      return !!this.valueContent && this.value.length > 0 && (!this.focused || !this.editable);\n    }\n    getStringifier(stringify) {\n      return ({\n        $implicit\n      }) => stringify($implicit);\n    }\n    onSpace(event) {\n      var _a;\n      if (!this.editable) {\n        event.preventDefault();\n      }\n      if (!this.readOnly) {\n        (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(true);\n      }\n    }\n    handleOption(option) {\n      const {\n        value,\n        identityMatcher\n      } = this;\n      const index = value.findIndex(item => identityMatcher(item, option));\n      this.value = index === -1 ? [...value, option] : value.filter((_, i) => i !== index);\n      this.updateSearch(null);\n    }\n    onEnter(event) {\n      const {\n        value\n      } = this;\n      const options = this.accessor ? this.accessor.getOptions() : [];\n      if (options.length !== 1) {\n        return;\n      }\n      event.preventDefault();\n      this.value = tuiArrayToggle(value, options[0]);\n      this.updateSearch(null);\n    }\n    onClick({\n      nativeFocusableElement\n    }) {\n      var _a;\n      if (this.interactive && nativeFocusableElement && tuiIsNativeFocused(nativeFocusableElement)) {\n        (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(!this.open);\n      }\n    }\n    onInput(value) {\n      this.value = value.map(({\n        item\n      }) => item);\n    }\n    onValueChange(value) {\n      this.value = value;\n    }\n    onSearch(search) {\n      var _a;\n      // Clearing sets the empty value, the dropdown should not be opened on clear.\n      if (search !== '') {\n        (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(true);\n      }\n      this.updateSearch(search);\n    }\n    onActiveZone(active) {\n      this.updateFocused(active);\n    }\n    setDisabledState() {\n      var _a;\n      super.setDisabledState();\n      (_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.updateOpen(false);\n    }\n    updateSearch(search) {\n      if (this.search === search) {\n        return;\n      }\n      this.search = search;\n      this.searchChange.emit(search);\n    }\n  }\n  TuiMultiSelectComponent.ɵfac = function TuiMultiSelectComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMultiSelectComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_ARROW_MODE), i0.ɵɵdirectiveInject(TUI_ITEMS_HANDLERS), i0.ɵɵdirectiveInject(TUI_MULTI_SELECT_OPTIONS), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_WATCHED_CONTROLLER), i0.ɵɵdirectiveInject(TUI_IS_MOBILE));\n  };\n  TuiMultiSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiMultiSelectComponent,\n    selectors: [[\"tui-multi-select\"]],\n    contentQueries: function TuiMultiSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TUI_DATA_LIST_ACCESSOR, 5);\n        i0.ɵɵcontentQuery(dirIndex, AbstractTuiNativeMultiSelect, 7);\n        i0.ɵɵcontentQuery(dirIndex, TuiDataListDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accessor = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nativeSelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datalist = _t.first);\n      }\n    },\n    viewQuery: function TuiMultiSelectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiHostedDropdownComponent, 5);\n        i0.ɵɵviewQuery(TuiInputTagComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hostedDropdown = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function TuiMultiSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n        i0.ɵɵclassProp(\"_editable\", ctx.editable);\n      }\n    },\n    inputs: {\n      stringify: \"stringify\",\n      identityMatcher: \"identityMatcher\",\n      expandable: \"expandable\",\n      search: \"search\",\n      placeholder: \"placeholder\",\n      editable: \"editable\",\n      disabledItemHandler: \"disabledItemHandler\",\n      valueContent: \"valueContent\",\n      tagValidator: \"tagValidator\",\n      rows: \"rows\",\n      autoColor: \"autoColor\"\n    },\n    outputs: {\n      searchChange: \"searchChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiMultiSelectComponent), tuiAsControl(TuiMultiSelectComponent), tuiAsDataListHost(TuiMultiSelectComponent), TEXTFIELD_CONTROLLER_PROVIDER], [FIXED_DROPDOWN_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 13,\n    vars: 33,\n    consts: [[\"inputTag\", \"\"], [\"select\", \"\"], [\"icon\", \"\"], [1, \"t-hosted\", 3, \"openChange\", \"tuiActiveZoneChange\", \"canOpen\", \"content\", \"open\"], [\"automation-id\", \"tui-multi-select__input\", 1, \"t-input\", 3, \"click.prevent\", \"keydown.enter\", \"keydown.space\", \"ngModelChange\", \"searchChange\", \"autoColor\", \"disabled\", \"disabledItemHandler\", \"editable\", \"expandable\", \"inputHidden\", \"nativeId\", \"ngModel\", \"placeholder\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"readOnly\", \"removable\", \"rows\", \"search\", \"tagValidator\", \"tuiTextfieldIcon\"], [\"ngProjectAs\", \"select\", 5, [\"select\"], 4, \"ngTemplateOutlet\"], [\"ngProjectAs\", \"tuiContent\", \"class\", \"t-content\", 5, [\"tuiContent\"], 3, \"t-content_fullsize\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngProjectAs\", \"select\", 5, [\"select\"]], [\"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"], 1, \"t-content\"], [\"class\", \"t-primitive\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [1, \"t-primitive\"], [\"appearance\", \"icon\", \"automation-id\", \"tui-multi-select__arrow\", \"tuiPreventDefault\", \"mousedown\", \"tuiWrapper\", \"\", 1, \"t-arrow\"], [4, \"polymorpheusOutlet\"]],\n    template: function TuiMultiSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 3);\n        i0.ɵɵtwoWayListener(\"openChange\", function TuiMultiSelectComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.open, $event) || (ctx.open = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiMultiSelectComponent_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onActiveZone($event));\n        });\n        i0.ɵɵelementStart(1, \"tui-input-tag\", 4, 0);\n        i0.ɵɵpipe(3, \"tuiMapper\");\n        i0.ɵɵpipe(4, \"tuiMapper\");\n        i0.ɵɵpipe(5, \"tuiMapper\");\n        i0.ɵɵlistener(\"click.prevent\", function TuiMultiSelectComponent_Template_tui_input_tag_click_prevent_1_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const inputTag_r2 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.onClick(inputTag_r2));\n        })(\"keydown.enter\", function TuiMultiSelectComponent_Template_tui_input_tag_keydown_enter_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onEnter($event));\n        })(\"keydown.space\", function TuiMultiSelectComponent_Template_tui_input_tag_keydown_space_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onSpace($event));\n        })(\"ngModelChange\", function TuiMultiSelectComponent_Template_tui_input_tag_ngModelChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onInput($event));\n        })(\"searchChange\", function TuiMultiSelectComponent_Template_tui_input_tag_searchChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onSearch($event));\n        });\n        i0.ɵɵprojection(6);\n        i0.ɵɵtemplate(7, TuiMultiSelectComponent_ng_template_7_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(9, TuiMultiSelectComponent_ng_container_9_Template, 1, 0, \"ng-container\", 5)(10, TuiMultiSelectComponent_div_10_Template, 2, 6, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, TuiMultiSelectComponent_ng_template_11_Template, 2, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const select_r6 = i0.ɵɵreference(8);\n        const icon_r7 = i0.ɵɵreference(12);\n        i0.ɵɵproperty(\"canOpen\", ctx.interactive && !ctx.nativeDropdownMode)(\"content\", ctx.datalist || \"\");\n        i0.ɵɵtwoWayProperty(\"open\", ctx.open);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"autoColor\", ctx.autoColor)(\"disabled\", ctx.disabled)(\"disabledItemHandler\", i0.ɵɵpipeBind2(3, 23, ctx.disabledItemHandler, ctx.disabledItemHandlerWrapper))(\"editable\", false)(\"expandable\", ctx.expandable)(\"inputHidden\", !ctx.editable)(\"nativeId\", ctx.nativeId)(\"ngModel\", i0.ɵɵpipeBind3(4, 26, ctx.computedValue, ctx.valueMapper, ctx.stringify))(\"placeholder\", ctx.placeholder)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.computedInvalid)(\"readOnly\", ctx.readOnly)(\"removable\", !ctx.nativeDropdownMode)(\"rows\", ctx.rows)(\"search\", ctx.searchOrSpace)(\"tagValidator\", i0.ɵɵpipeBind2(5, 30, ctx.tagValidator, ctx.disabledItemHandlerWrapper))(\"tuiTextfieldIcon\", ctx.arrow ? icon_r7 : \"\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", select_r6);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.computedGroup);\n      }\n    },\n    dependencies: [i1.TuiHostedDropdownComponent, i2.TuiInputTagComponent, i3.TuiActiveZoneDirective, i4.NgControlStatus, i4.NgModel, i1.TuiTextfieldIconDirective, i2$1.NgIf, i2$1.NgTemplateOutlet, i6.PolymorpheusOutletDirective, i3.TuiPreventDefaultDirective, i1.TuiWrapperDirective, i3.TuiMapperPipe],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:block;border-radius:var(--tui-radius-m)}._disabled[_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-input[_ngcontent-%COMP%]{border-radius:inherit}[_nghost-%COMP%]:not(._editable):not(._readonly)   .t-input[_ngcontent-%COMP%]{cursor:pointer}.t-content[_ngcontent-%COMP%]{display:flex;align-items:center;pointer-events:none;box-sizing:border-box;margin:.0625rem 0}.t-primitive[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-arrow[_ngcontent-%COMP%]{pointer-events:auto;cursor:pointer}.t-arrow_native-dropdown[_ngcontent-%COMP%]{pointer-events:none}\"],\n    changeDetection: 0\n  });\n  __decorate([tuiPure], TuiMultiSelectComponent.prototype, \"getStringifier\", null);\n  return TuiMultiSelectComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiHideSelectedPipe = /*#__PURE__*/(() => {\n  class TuiHideSelectedPipe {\n    constructor(component) {\n      this.component = component;\n    }\n    transform(items) {\n      const {\n        value,\n        identityMatcher\n      } = this.component;\n      if (!items) {\n        return null;\n      }\n      return tuiIsFlat(items) ? this.filter(items, value, identityMatcher) : this.filter2d(items, value, identityMatcher);\n    }\n    filter2d(items, value, matcher) {\n      return items.map(subItems => this.filter(subItems, value, matcher));\n    }\n    filter(items, value, matcher) {\n      return items.filter(item => value.every(selected => !matcher(selected, item)));\n    }\n  }\n  TuiHideSelectedPipe.ɵfac = function TuiHideSelectedPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHideSelectedPipe)(i0.ɵɵdirectiveInject(TuiMultiSelectComponent, 16));\n  };\n  TuiHideSelectedPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"tuiHideSelected\",\n    type: TuiHideSelectedPipe,\n    pure: false,\n    standalone: false\n  });\n  __decorate([tuiPure], TuiHideSelectedPipe.prototype, \"filter2d\", null);\n  __decorate([tuiPure], TuiHideSelectedPipe.prototype, \"filter\", null);\n  return TuiHideSelectedPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMultiSelectDirective = /*#__PURE__*/(() => {\n  class TuiMultiSelectDirective extends AbstractTuiTextfieldHost {\n    constructor() {\n      super(...arguments);\n      this.disableItemHandler = item => this.host.disabledItemHandler(item);\n    }\n    get readOnly() {\n      return true;\n    }\n    onValueChange() {}\n    get stringify() {\n      return this.host.stringify;\n    }\n    onSelectionChange(value) {\n      this.host.onValueChange(value);\n    }\n  }\n  TuiMultiSelectDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiMultiSelectDirective_BaseFactory;\n    return function TuiMultiSelectDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiMultiSelectDirective_BaseFactory || (ɵTuiMultiSelectDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiMultiSelectDirective)))(__ngFactoryType__ || TuiMultiSelectDirective);\n    };\n  })();\n  TuiMultiSelectDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiMultiSelectDirective,\n    selectors: [[\"tui-multi-select\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiMultiSelectDirective)]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiMultiSelectDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMultiSelectGroupComponent = /*#__PURE__*/(() => {\n  class TuiMultiSelectGroupComponent {\n    constructor(multiSelectTexts$, host, control) {\n      this.multiSelectTexts$ = multiSelectTexts$;\n      this.host = host;\n      this.control = control;\n      this.options = EMPTY_QUERY;\n      this.label = '';\n    }\n    get size() {\n      var _a;\n      return ((_a = this.options.first) === null || _a === void 0 ? void 0 : _a.size) || 'm';\n    }\n    get empty$() {\n      return tuiQueryListChanges(this.options).pipe(map(({\n        length\n      }) => !length));\n    }\n    get disabled$() {\n      return tuiQueryListChanges(this.options).pipe(map(items => items.every(({\n        disabled\n      }) => disabled)));\n    }\n    get value$() {\n      return combineLatest([this.items$, this.valueChanges$]).pipe(map(([items, current]) => {\n        let result = false;\n        for (let i = 0; i < items.length; i++) {\n          const selected = current.some(selected => this.matcher(selected, items[i]));\n          if (!selected && result || selected && !result && i) {\n            return null;\n          }\n          result = selected;\n        }\n        return result;\n      }));\n    }\n    onClick(checked) {\n      if (!this.control.control) {\n        return;\n      }\n      const controlValue = this.control.value || [];\n      const {\n        values\n      } = this;\n      const filtered = controlValue.filter(current => values.every(item => !this.matcher(current, item)));\n      this.control.control.setValue(checked ? filtered : [...filtered, ...values]);\n    }\n    get values() {\n      return this.filter(tuiGetOriginalArrayFromQueryList(this.options));\n    }\n    get matcher() {\n      return this.host.identityMatcher || TUI_DEFAULT_IDENTITY_MATCHER;\n    }\n    get items$() {\n      return tuiQueryListChanges(this.options).pipe(map(options => options.map(({\n        value\n      }) => value).filter(tuiIsPresent)));\n    }\n    get valueChanges$() {\n      return tuiControlValue(this.control).pipe(map(value => value || []));\n    }\n    filter(items) {\n      return items.map(({\n        value\n      }) => value).filter(tuiIsPresent);\n    }\n  }\n  TuiMultiSelectGroupComponent.ɵfac = function TuiMultiSelectGroupComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMultiSelectGroupComponent)(i0.ɵɵdirectiveInject(TUI_MULTI_SELECT_TEXTS), i0.ɵɵdirectiveInject(TUI_DATA_LIST_HOST), i0.ɵɵdirectiveInject(NgControl));\n  };\n  TuiMultiSelectGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiMultiSelectGroupComponent,\n    selectors: [[\"tui-opt-group\", \"tuiMultiSelectGroup\", \"\"]],\n    contentQueries: function TuiMultiSelectGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TuiOptionComponent, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function TuiMultiSelectGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"_label\", ctx.label);\n      }\n    },\n    inputs: {\n      label: \"label\"\n    },\n    standalone: false,\n    attrs: _c3,\n    ngContentSelectors: _c4,\n    decls: 3,\n    vars: 3,\n    consts: [[\"class\", \"t-wrapper\", 4, \"tuiLet\"], [1, \"t-wrapper\"], [1, \"t-label\"], [\"tuiLink\", \"\", \"type\", \"button\", \"class\", \"t-button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"tuiLink\", \"\", \"type\", \"button\", 1, \"t-button\", 3, \"click\", \"disabled\"]],\n    template: function TuiMultiSelectGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, TuiMultiSelectGroupComponent_span_0_Template, 5, 4, \"span\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵprojection(2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.value$));\n      }\n    },\n    dependencies: [i1.TuiLinkComponent, i3.TuiLetDirective, i2$1.NgIf, i2$1.AsyncPipe],\n    styles: [\"._label[_nghost-%COMP%]:before{display:none}[_nghost-%COMP%]:not(:first-of-type)   .t-label[_ngcontent-%COMP%]:not(:empty){padding-top:1.25rem}[_nghost-%COMP%]:not(:first-of-type)   .t-button[_ngcontent-%COMP%]{margin-top:1.25rem}.t-wrapper[_ngcontent-%COMP%]{display:flex;align-items:flex-start}.t-label[_ngcontent-%COMP%]:not(:empty){flex:1;padding:.75rem 1rem .25rem .625rem}.t-button[_ngcontent-%COMP%]{margin:.75rem 1rem 0 auto}\"],\n    changeDetection: 0\n  });\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"empty$\", null);\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"disabled$\", null);\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"value$\", null);\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"items$\", null);\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"valueChanges$\", null);\n  __decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"filter\", null);\n  return TuiMultiSelectGroupComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_MULTI_SELECT_OPTION = new PolymorpheusComponent(TuiMultiSelectOptionComponent);\nlet TuiMultiSelectGroupDirective = /*#__PURE__*/(() => {\n  class TuiMultiSelectGroupDirective {}\n  TuiMultiSelectGroupDirective.ɵfac = function TuiMultiSelectGroupDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMultiSelectGroupDirective)();\n  };\n  TuiMultiSelectGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiMultiSelectGroupDirective,\n    selectors: [[\"\", \"tuiMultiSelectGroup\", \"\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsOptionContent(TUI_MULTI_SELECT_OPTION), {\n      provide: TUI_DATA_LIST_HOST,\n      deps: [NgControl, [new Optional(), forwardRef(() => TuiMultiSelectComponent)]],\n      useFactory: (control, host) => host || {\n        handleOption: option => {\n          var _a;\n          return (_a = control.control) === null || _a === void 0 ? void 0 : _a.setValue(tuiArrayToggle(control.value || [], option));\n        }\n      }\n    }, {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useValue: {\n        writeValue: EMPTY_FUNCTION,\n        registerOnChange: EMPTY_FUNCTION,\n        registerOnTouched: EMPTY_FUNCTION\n      }\n    }])]\n  });\n  return TuiMultiSelectGroupDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiNativeMultiSelectComponent = /*#__PURE__*/(() => {\n  class TuiNativeMultiSelectComponent extends AbstractTuiNativeMultiSelect {\n    constructor() {\n      super(...arguments);\n      this.items = [];\n    }\n    onValueChange(selectedOptions) {\n      var _a;\n      const selected = Array.from(selectedOptions).map(option => option.index);\n      const value = ((_a = this.items) === null || _a === void 0 ? void 0 : _a.filter((_, index) => selected.includes(index))) || [];\n      this.host.onSelectionChange(value);\n    }\n  }\n  TuiNativeMultiSelectComponent.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiNativeMultiSelectComponent_BaseFactory;\n    return function TuiNativeMultiSelectComponent_Factory(__ngFactoryType__) {\n      return (ɵTuiNativeMultiSelectComponent_BaseFactory || (ɵTuiNativeMultiSelectComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiNativeMultiSelectComponent)))(__ngFactoryType__ || TuiNativeMultiSelectComponent);\n    };\n  })();\n  TuiNativeMultiSelectComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiNativeMultiSelectComponent,\n    selectors: [[\"select\", \"multiple\", \"\", \"tuiSelect\", \"\", 3, \"labels\", \"\"]],\n    hostVars: 3,\n    hostBindings: function TuiNativeMultiSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function TuiNativeMultiSelectComponent_change_HostBindingHandler($event) {\n          return ctx.onValueChange($event.target.selectedOptions);\n        })(\"click.stop.silent\", function TuiNativeMultiSelectComponent_click_stop_silent_HostBindingHandler() {\n          return 0;\n        })(\"mousedown.stop.silent\", function TuiNativeMultiSelectComponent_mousedown_stop_silent_HostBindingHandler() {\n          return 0;\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"disabled\", ctx.host.disabled || ctx.control.readOnly)(\"tabIndex\", ctx.host.focusable ? 0 : -1);\n        i0.ɵɵattribute(\"aria-invalid\", ctx.host.invalid);\n      }\n    },\n    inputs: {\n      items: \"items\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsDataList(TuiNativeMultiSelectComponent), {\n      provide: TemplateRef,\n      deps: [TuiNativeMultiSelectComponent],\n      useFactory: ({\n        datalist\n      }) => datalist\n    }, {\n      provide: AbstractTuiNativeMultiSelect,\n      useExisting: TuiNativeMultiSelectComponent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    attrs: _c5,\n    decls: 4,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\", 4, \"tuiDataList\"], [3, \"disabled\", \"selected\", \"value\", 4, \"ngFor\", \"ngForOf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\"], [3, \"disabled\", \"selected\", \"value\"]],\n    template: function TuiNativeMultiSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiNativeMultiSelectComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵtemplate(2, TuiNativeMultiSelectComponent_tui_data_list_wrapper_2_Template, 2, 5, \"tui-data-list-wrapper\", 1)(3, TuiNativeMultiSelectComponent_option_3_Template, 3, 8, \"option\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.control.control == null ? null : ctx.control.control.valueChanges));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [i1$1.TuiDataListWrapperComponent, i2$1.NgIf, i1.TuiDataListDirective, TuiMultiSelectGroupDirective, i2$1.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i2$1.AsyncPipe, i6$1.TuiStringifyContentPipe, i3.TuiMapperPipe],\n    styles: [\"[_nghost-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\"],\n    changeDetection: 0\n  });\n  return TuiNativeMultiSelectComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiNativeMultiSelectGroupComponent = /*#__PURE__*/(() => {\n  class TuiNativeMultiSelectGroupComponent extends AbstractTuiNativeMultiSelect {\n    constructor() {\n      super(...arguments);\n      this.items = [];\n      this.labels = [];\n    }\n    onValueChange(selectedOptions) {\n      var _a;\n      const selected = Array.from(selectedOptions).map(option => option.index);\n      const flatItems = ((_a = this.items) === null || _a === void 0 ? void 0 : _a.reduce((acc, val) => acc.concat(val), [])) || [];\n      const value = flatItems.filter((_, index) => selected.includes(index));\n      this.host.onSelectionChange(value);\n    }\n  }\n  TuiNativeMultiSelectGroupComponent.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiNativeMultiSelectGroupComponent_BaseFactory;\n    return function TuiNativeMultiSelectGroupComponent_Factory(__ngFactoryType__) {\n      return (ɵTuiNativeMultiSelectGroupComponent_BaseFactory || (ɵTuiNativeMultiSelectGroupComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiNativeMultiSelectGroupComponent)))(__ngFactoryType__ || TuiNativeMultiSelectGroupComponent);\n    };\n  })();\n  TuiNativeMultiSelectGroupComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiNativeMultiSelectGroupComponent,\n    selectors: [[\"select\", \"multiple\", \"\", \"tuiSelect\", \"\", \"labels\", \"\"]],\n    hostVars: 3,\n    hostBindings: function TuiNativeMultiSelectGroupComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"change\", function TuiNativeMultiSelectGroupComponent_change_HostBindingHandler($event) {\n          return ctx.onValueChange($event.target.selectedOptions);\n        })(\"click.stop.silent\", function TuiNativeMultiSelectGroupComponent_click_stop_silent_HostBindingHandler() {\n          return 0;\n        })(\"mousedown.stop.silent\", function TuiNativeMultiSelectGroupComponent_mousedown_stop_silent_HostBindingHandler() {\n          return 0;\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"disabled\", ctx.host.disabled || ctx.control.readOnly)(\"tabIndex\", ctx.host.focusable ? 0 : -1);\n        i0.ɵɵattribute(\"aria-invalid\", ctx.host.invalid);\n      }\n    },\n    inputs: {\n      items: \"items\",\n      labels: \"labels\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsDataList(TuiNativeMultiSelectGroupComponent), {\n      provide: TemplateRef,\n      deps: [TuiNativeMultiSelectGroupComponent],\n      useFactory: ({\n        datalist\n      }) => datalist\n    }, {\n      provide: AbstractTuiNativeMultiSelect,\n      useExisting: TuiNativeMultiSelectGroupComponent\n    }]), i0.ɵɵInheritDefinitionFeature],\n    attrs: _c6,\n    decls: 4,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\", \"labels\", 4, \"tuiDataList\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\", \"labels\"], [3, \"label\"], [3, \"disabled\", \"selected\", \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"selected\", \"value\"]],\n    template: function TuiNativeMultiSelectGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiNativeMultiSelectGroupComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵtemplate(2, TuiNativeMultiSelectGroupComponent_tui_data_list_wrapper_2_Template, 2, 6, \"tui-data-list-wrapper\", 1)(3, TuiNativeMultiSelectGroupComponent_optgroup_3_Template, 2, 2, \"optgroup\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.control.control == null ? null : ctx.control.control.valueChanges));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [i1$1.TuiDataListGroupWrapperComponent, i2$1.NgIf, i1.TuiDataListDirective, TuiMultiSelectGroupDirective, i2$1.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i2$1.AsyncPipe, i6$1.TuiStringifyContentPipe, i3.TuiMapperPipe],\n    styles: [_c7],\n    changeDetection: 0\n  });\n  return TuiNativeMultiSelectGroupComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMultiSelectModule = /*#__PURE__*/(() => {\n  class TuiMultiSelectModule {}\n  TuiMultiSelectModule.ɵfac = function TuiMultiSelectModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMultiSelectModule)();\n  };\n  TuiMultiSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiMultiSelectModule\n  });\n  TuiMultiSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiWrapperModule, TuiPreventDefaultModule, TuiActiveZoneModule, TuiArrowModule, TuiLetModule, TuiMapperPipeModule, TuiSvgModule, TuiHostedDropdownModule, TuiInputTagModule, TuiMultiSelectOptionModule, TuiDataListWrapperModule, TuiMapperPipeModule, TuiLinkModule, TuiDataListModule, TuiTextfieldControllerModule, TuiStringifyContentPipeModule]]\n  });\n  return TuiMultiSelectModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiNativeMultiSelect, TUI_MULTI_SELECT_DEFAULT_OPTIONS, TUI_MULTI_SELECT_OPTION, TUI_MULTI_SELECT_OPTIONS, TuiHideSelectedPipe, TuiMultiSelectComponent, TuiMultiSelectDirective, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiMultiSelectModule, TuiNativeMultiSelectComponent, TuiNativeMultiSelectGroupComponent, tuiMultiSelectOptionsProvider };\n//# sourceMappingURL=taiga-ui-kit-components-multi-select.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}