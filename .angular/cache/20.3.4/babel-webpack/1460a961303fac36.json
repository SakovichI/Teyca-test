{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, ChangeDetectorRef, Component, ChangeDetectionStrategy, Inject, Optional, Self, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@taiga-ui/cdk';\nimport { ALWAYS_FALSE_HANDLER, TuiMonth, TUI_FIRST_DAY, TUI_LAST_DAY, tuiWatch, TuiDestroyService, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_DEFAULT_MARKER_HANDLER, TuiScrollbarModule, TuiCalendarModule } from '@taiga-ui/core';\nimport { TUI_CALENDAR_DATE_STREAM } from '@taiga-ui/kit/tokens';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i3 from 'rxjs';\n\n/**\n * @internal\n */\nlet TuiPrimitiveCalendarRangeComponent = /*#__PURE__*/(() => {\n  class TuiPrimitiveCalendarRangeComponent {\n    constructor(valueChanges, cdr, destroy$) {\n      this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n      this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;\n      this.defaultViewedMonthFirst = TuiMonth.currentLocal();\n      this.defaultViewedMonthSecond = TuiMonth.currentLocal().append({\n        month: 1\n      });\n      this.min = TUI_FIRST_DAY;\n      this.max = TUI_LAST_DAY;\n      this.value = null;\n      this.dayClick = new EventEmitter();\n      this.hoveredItem = null;\n      this.userViewedMonthFirst = this.defaultViewedMonthFirst;\n      this.userViewedMonthSecond = this.defaultViewedMonthSecond;\n      this.monthOffset = (value, offset) => value.append({\n        month: offset\n      });\n      if (!valueChanges) {\n        return;\n      }\n      valueChanges.pipe(tuiWatch(cdr), takeUntil(destroy$)).subscribe(value => {\n        this.value = value;\n        this.updateViewedMonths();\n      });\n    }\n    get cappedUserViewedMonthSecond() {\n      return this.userViewedMonthSecond.monthBefore(this.max) ? this.userViewedMonthSecond : this.max;\n    }\n    get cappedUserViewedMonthFirst() {\n      return this.userViewedMonthFirst.monthSameOrBefore(this.userViewedMonthSecond) ? this.userViewedMonthFirst : this.userViewedMonthSecond;\n    }\n    ngOnChanges({\n      defaultViewedMonthFirst,\n      defaultViewedMonthSecond\n    }) {\n      if (!this.value) {\n        this.updateViewedMonths(defaultViewedMonthFirst === null || defaultViewedMonthFirst === void 0 ? void 0 : defaultViewedMonthFirst.currentValue, defaultViewedMonthSecond === null || defaultViewedMonthSecond === void 0 ? void 0 : defaultViewedMonthSecond.currentValue);\n      }\n    }\n    ngOnInit() {\n      this.setInitialMonths();\n    }\n    onSectionFirstViewedMonth(month) {\n      this.userViewedMonthFirst = month;\n      this.userViewedMonthSecond = this.userViewedMonthFirst.append({\n        month: 1\n      });\n    }\n    onSectionSecondViewedMonth(month) {\n      this.userViewedMonthSecond = month;\n      this.userViewedMonthFirst = this.userViewedMonthSecond.append({\n        month: -1\n      });\n    }\n    onDayClick(day) {\n      this.dayClick.emit(day);\n    }\n    setInitialMonths() {\n      if (!this.value) {\n        this.userViewedMonthSecond = this.updatedViewedMonthSecond(this.defaultViewedMonthSecond);\n        this.userViewedMonthFirst = this.updatedViewedMonthFirst(this.defaultViewedMonthFirst);\n      }\n    }\n    updatedViewedMonthSecond(month) {\n      if (month.monthSameOrAfter(this.max)) {\n        return this.max;\n      }\n      if (month.monthSameOrBefore(this.min)) {\n        return this.min.append({\n          month: 1\n        });\n      }\n      return month;\n    }\n    updatedViewedMonthFirst(month) {\n      if (month.monthSameOrAfter(this.userViewedMonthSecond)) {\n        return this.userViewedMonthSecond.append({\n          month: -1\n        });\n      }\n      if (month.monthSameOrBefore(this.min)) {\n        return this.min;\n      }\n      return month;\n    }\n    updateViewedMonths(firstMonth, secondMonth) {\n      if (this.value) {\n        this.userViewedMonthFirst = this.value.from;\n        this.userViewedMonthSecond = this.userViewedMonthFirst.append({\n          month: 1\n        });\n      } else {\n        this.userViewedMonthSecond = this.updatedViewedMonthSecond(secondMonth !== null && secondMonth !== void 0 ? secondMonth : this.userViewedMonthSecond);\n        this.userViewedMonthFirst = this.updatedViewedMonthFirst(firstMonth !== null && firstMonth !== void 0 ? firstMonth : this.userViewedMonthFirst);\n      }\n    }\n  }\n  TuiPrimitiveCalendarRangeComponent.ɵfac = function TuiPrimitiveCalendarRangeComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPrimitiveCalendarRangeComponent)(i0.ɵɵdirectiveInject(TUI_CALENDAR_DATE_STREAM, 8), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n  };\n  TuiPrimitiveCalendarRangeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiPrimitiveCalendarRangeComponent,\n    selectors: [[\"tui-primitive-calendar-range\"]],\n    inputs: {\n      disabledItemHandler: \"disabledItemHandler\",\n      markerHandler: \"markerHandler\",\n      defaultViewedMonthFirst: \"defaultViewedMonthFirst\",\n      defaultViewedMonthSecond: \"defaultViewedMonthSecond\",\n      min: \"min\",\n      max: \"max\",\n      value: \"value\"\n    },\n    outputs: {\n      dayClick: \"dayClick\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService]), i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 26,\n    consts: [[3, \"hoveredItemChange\", \"dayClick\", \"monthChange\", \"disabledItemHandler\", \"markerHandler\", \"max\", \"maxViewedMonth\", \"min\", \"month\", \"showAdjacent\", \"value\", \"hoveredItem\"], [1, \"t-border\", 3, \"hoveredItemChange\", \"dayClick\", \"monthChange\", \"disabledItemHandler\", \"markerHandler\", \"max\", \"min\", \"minViewedMonth\", \"month\", \"showAdjacent\", \"value\", \"hoveredItem\"]],\n    template: function TuiPrimitiveCalendarRangeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tui-calendar\", 0);\n        i0.ɵɵpipe(1, \"tuiMapper\");\n        i0.ɵɵtwoWayListener(\"hoveredItemChange\", function TuiPrimitiveCalendarRangeComponent_Template_tui_calendar_hoveredItemChange_0_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.hoveredItem, $event) || (ctx.hoveredItem = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"dayClick\", function TuiPrimitiveCalendarRangeComponent_Template_tui_calendar_dayClick_0_listener($event) {\n          return ctx.onDayClick($event);\n        })(\"monthChange\", function TuiPrimitiveCalendarRangeComponent_Template_tui_calendar_monthChange_0_listener($event) {\n          return ctx.onSectionFirstViewedMonth($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"tui-calendar\", 1);\n        i0.ɵɵpipe(3, \"tuiMapper\");\n        i0.ɵɵtwoWayListener(\"hoveredItemChange\", function TuiPrimitiveCalendarRangeComponent_Template_tui_calendar_hoveredItemChange_2_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.hoveredItem, $event) || (ctx.hoveredItem = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"dayClick\", function TuiPrimitiveCalendarRangeComponent_Template_tui_calendar_dayClick_2_listener($event) {\n          return ctx.onDayClick($event);\n        })(\"monthChange\", function TuiPrimitiveCalendarRangeComponent_Template_tui_calendar_monthChange_2_listener($event) {\n          return ctx.onSectionSecondViewedMonth($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabledItemHandler\", ctx.disabledItemHandler)(\"markerHandler\", ctx.markerHandler)(\"max\", ctx.max)(\"maxViewedMonth\", i0.ɵɵpipeBind3(1, 18, ctx.cappedUserViewedMonthSecond, ctx.monthOffset, -1))(\"min\", ctx.min)(\"month\", ctx.userViewedMonthFirst)(\"showAdjacent\", false)(\"value\", ctx.value);\n        i0.ɵɵtwoWayProperty(\"hoveredItem\", ctx.hoveredItem);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabledItemHandler\", ctx.disabledItemHandler)(\"markerHandler\", ctx.markerHandler)(\"max\", ctx.max)(\"min\", ctx.min)(\"minViewedMonth\", i0.ɵɵpipeBind3(3, 22, ctx.cappedUserViewedMonthFirst, ctx.monthOffset, 1))(\"month\", ctx.userViewedMonthSecond)(\"showAdjacent\", false)(\"value\", ctx.value);\n        i0.ɵɵtwoWayProperty(\"hoveredItem\", ctx.hoveredItem);\n      }\n    },\n    dependencies: [i1.TuiCalendarComponent, i2.TuiMapperPipe],\n    styles: [\"[_nghost-%COMP%]{display:flex}.t-border[_ngcontent-%COMP%]{border-left:1px solid var(--tui-base-03)}\"],\n    changeDetection: 0\n  });\n  return TuiPrimitiveCalendarRangeComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @internal\n */\nlet TuiPrimitiveCalendarRangeModule = /*#__PURE__*/(() => {\n  class TuiPrimitiveCalendarRangeModule {}\n  TuiPrimitiveCalendarRangeModule.ɵfac = function TuiPrimitiveCalendarRangeModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPrimitiveCalendarRangeModule)();\n  };\n  TuiPrimitiveCalendarRangeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiPrimitiveCalendarRangeModule\n  });\n  TuiPrimitiveCalendarRangeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[TuiMapperPipeModule, TuiScrollbarModule, TuiCalendarModule]]\n  });\n  return TuiPrimitiveCalendarRangeModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiPrimitiveCalendarRangeComponent, TuiPrimitiveCalendarRangeModule };\n//# sourceMappingURL=taiga-ui-kit-internal-primitive-calendar-range.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}