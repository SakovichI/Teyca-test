{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, ElementRef, Directive, Inject, Attribute, Output, Injectable, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nconst SafeObserver = typeof MutationObserver !== `undefined` ? MutationObserver : class {\n  observe() {}\n  disconnect() {}\n  takeRecords() {\n    return [];\n  }\n};\nconst MUTATION_OBSERVER_INIT = /*#__PURE__*/new InjectionToken('MutationObserver config');\nfunction booleanAttribute(element, attribute) {\n  return element.getAttribute(attribute) !== null || undefined;\n}\nfunction mutationObserverInitFactory({\n  nativeElement\n}) {\n  const attributeFilter = nativeElement.getAttribute('attributeFilter');\n  return {\n    attributeFilter: attributeFilter === null || attributeFilter === void 0 ? void 0 : attributeFilter.split(',').map(attr => attr.trim()),\n    attributeOldValue: booleanAttribute(nativeElement, 'attributeOldValue'),\n    attributes: booleanAttribute(nativeElement, 'attributes'),\n    characterData: booleanAttribute(nativeElement, 'characterData'),\n    characterDataOldValue: booleanAttribute(nativeElement, 'characterDataOldValue'),\n    childList: booleanAttribute(nativeElement, 'childList'),\n    subtree: booleanAttribute(nativeElement, 'subtree')\n  };\n}\nlet MutationObserverDirective = /*#__PURE__*/(() => {\n  class MutationObserverDirective extends SafeObserver {\n    constructor({\n      nativeElement\n    }, config, _1, _2, _3, _4, _5, _6, _7) {\n      super(records => {\n        this.waMutationObserver.emit(records);\n      });\n      this.waMutationObserver = new EventEmitter();\n      this.observe(nativeElement, config);\n    }\n    ngOnDestroy() {\n      this.disconnect();\n    }\n  }\n  MutationObserverDirective.ɵfac = function MutationObserverDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MutationObserverDirective)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(MUTATION_OBSERVER_INIT), i0.ɵɵinjectAttribute('attributeFilter'), i0.ɵɵinjectAttribute('attributeOldValue'), i0.ɵɵinjectAttribute('attributes'), i0.ɵɵinjectAttribute('characterData'), i0.ɵɵinjectAttribute('characterDataOldValue'), i0.ɵɵinjectAttribute('childList'), i0.ɵɵinjectAttribute('subtree'));\n  };\n  MutationObserverDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MutationObserverDirective,\n    selectors: [[\"\", \"waMutationObserver\", \"\"]],\n    outputs: {\n      waMutationObserver: \"waMutationObserver\"\n    },\n    exportAs: [\"MutationObserver\"],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MUTATION_OBSERVER_INIT,\n      deps: [ElementRef],\n      useFactory: mutationObserverInitFactory\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return MutationObserverDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MutationObserverService = /*#__PURE__*/(() => {\n  class MutationObserverService extends Observable {\n    constructor({\n      nativeElement\n    }, config) {\n      super(subscriber => {\n        const observer = new SafeObserver(records => {\n          subscriber.next(records);\n        });\n        observer.observe(nativeElement, config);\n        return () => {\n          observer.disconnect();\n        };\n      });\n    }\n  }\n  MutationObserverService.ɵfac = function MutationObserverService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MutationObserverService)(i0.ɵɵinject(ElementRef), i0.ɵɵinject(MUTATION_OBSERVER_INIT));\n  };\n  MutationObserverService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MutationObserverService,\n    factory: MutationObserverService.ɵfac\n  });\n  return MutationObserverService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MutationObserverModule = /*#__PURE__*/(() => {\n  class MutationObserverModule {}\n  MutationObserverModule.ɵfac = function MutationObserverModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MutationObserverModule)();\n  };\n  MutationObserverModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MutationObserverModule\n  });\n  MutationObserverModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return MutationObserverModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Public API Surface of @ng-web-apis/mutation-observer\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MUTATION_OBSERVER_INIT, MutationObserverDirective, MutationObserverModule, MutationObserverService };\n//# sourceMappingURL=ng-web-apis-mutation-observer.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}