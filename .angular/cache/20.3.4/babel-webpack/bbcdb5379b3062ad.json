{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, TemplateRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, ContentChild, HostBinding, Directive, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { AbstractTuiControl, tuiIsNativeFocused, AbstractTuiValueTransformer, tuiAsFocusableItemAccessor, tuiAsControl, TuiActiveZoneModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_SIZE, tuiAsDataListHost, TuiDataListDirective, TuiHostedDropdownComponent, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiPrimitiveTextfieldModule, TuiHostedDropdownModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_VALUE_ACCESSOR_PROVIDER, FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nlet TuiInputComponent = /*#__PURE__*/(() => {\n  class TuiInputComponent extends AbstractTuiControl {\n    constructor(control, cdr, textfieldSize, valueTransformer) {\n      super(control, cdr, valueTransformer);\n      this.textfieldSize = textfieldSize;\n      this.open = false;\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get nativeFocusableElement() {\n      return this.computedDisabled || !this.textfield ? null : this.textfield.nativeFocusableElement;\n    }\n    get focused() {\n      return tuiIsNativeFocused(this.nativeFocusableElement) || !!this.hostedDropdown && this.hostedDropdown.focused;\n    }\n    get canOpen() {\n      return this.interactive && !!this.datalist;\n    }\n    onValueChange(value) {\n      this.value = value;\n      this.open = true;\n    }\n    onActiveZone(active) {\n      this.updateFocused(active);\n    }\n    handleOption(item) {\n      this.setNativeValue(String(item));\n      this.focusInput();\n      this.value = String(item);\n      this.open = false;\n    }\n    getFallbackValue() {\n      return '';\n    }\n    focusInput(preventScroll = false) {\n      if (this.nativeFocusableElement) {\n        this.nativeFocusableElement.focus({\n          preventScroll\n        });\n      }\n    }\n    setNativeValue(value) {\n      if (this.nativeFocusableElement) {\n        this.nativeFocusableElement.value = value;\n      }\n    }\n  }\n  TuiInputComponent.ɵfac = function TuiInputComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE), i0.ɵɵdirectiveInject(AbstractTuiValueTransformer, 8));\n  };\n  TuiInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputComponent,\n    selectors: [[\"tui-input\"]],\n    contentQueries: function TuiInputComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TuiDataListDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datalist = _t.first);\n      }\n    },\n    viewQuery: function TuiInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiHostedDropdownComponent, 5);\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hostedDropdown = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TUI_VALUE_ACCESSOR_PROVIDER, tuiAsFocusableItemAccessor(TuiInputComponent), tuiAsDataListHost(TuiInputComponent), tuiAsControl(TuiInputComponent)], [FIXED_DROPDOWN_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 11,\n    consts: [[1, \"t-hosted\", 3, \"openChange\", \"tuiActiveZoneChange\", \"canOpen\", \"content\", \"open\"], [\"automation-id\", \"tui-input__textfield\", 1, \"t-textfield\", 3, \"valueChange\", \"disabled\", \"focusable\", \"invalid\", \"nativeId\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"value\"]],\n    template: function TuiInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 0);\n        i0.ɵɵtwoWayListener(\"openChange\", function TuiInputComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.open, $event) || (ctx.open = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiInputComponent_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n          return ctx.onActiveZone($event);\n        });\n        i0.ɵɵelementStart(1, \"tui-primitive-textfield\", 1);\n        i0.ɵɵlistener(\"valueChange\", function TuiInputComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n          return ctx.onValueChange($event);\n        });\n        i0.ɵɵprojection(2);\n        i0.ɵɵprojection(3, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"canOpen\", ctx.canOpen)(\"content\", ctx.datalist || \"\");\n        i0.ɵɵtwoWayProperty(\"open\", ctx.open);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"focusable\", ctx.computedFocusable)(\"invalid\", ctx.computedInvalid)(\"nativeId\", ctx.nativeId)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"value\", ctx.value);\n      }\n    },\n    dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i2.TuiActiveZoneDirective, i1.TuiPrimitiveTextfieldDirective],\n    styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}._disabled[_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n    changeDetection: 0\n  });\n  return TuiInputComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputDirective = /*#__PURE__*/(() => {\n  class TuiInputDirective extends AbstractTuiTextfieldHost {\n    onValueChange(value) {\n      this.host.onValueChange(value);\n    }\n  }\n  TuiInputDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiInputDirective_BaseFactory;\n    return function TuiInputDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiInputDirective_BaseFactory || (ɵTuiInputDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputDirective)))(__ngFactoryType__ || TuiInputDirective);\n    };\n  })();\n  TuiInputDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiInputDirective,\n    selectors: [[\"tui-input\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputDirective)]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiInputDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputModule = /*#__PURE__*/(() => {\n  class TuiInputModule {}\n  TuiInputModule.ɵfac = function TuiInputModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputModule)();\n  };\n  TuiInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputModule\n  });\n  TuiInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiActiveZoneModule, TuiPrimitiveTextfieldModule, TuiHostedDropdownModule]]\n  });\n  return TuiInputModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputComponent, TuiInputDirective, TuiInputModule };\n//# sourceMappingURL=taiga-ui-kit-components-input.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}