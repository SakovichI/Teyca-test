{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ElementRef, Renderer2, Directive, Inject, Input, NgModule } from '@angular/core';\nimport { svgNodeFilter, tuiPx, TuiResizeService, TuiDestroyService } from '@taiga-ui/cdk';\nimport * as i1 from 'rxjs';\nlet TuiHighlightDirective = /*#__PURE__*/(() => {\n  class TuiHighlightDirective {\n    constructor(doc, el, renderer, resize$) {\n      this.doc = doc;\n      this.el = el;\n      this.renderer = renderer;\n      this.highlight = this.setUpHighlight();\n      this.treeWalker = this.doc.createTreeWalker(this.el.nativeElement, NodeFilter.SHOW_TEXT, svgNodeFilter);\n      this.tuiHighlight = '';\n      this.tuiHighlightColor = 'var(--tui-selection)';\n      resize$.subscribe(() => {\n        this.updateStyles();\n      });\n    }\n    get match() {\n      return this.indexOf(this.el.nativeElement.textContent) !== -1;\n    }\n    ngOnChanges() {\n      this.updateStyles();\n    }\n    updateStyles() {\n      this.highlight.style.display = 'none';\n      if (!this.match) {\n        return;\n      }\n      this.treeWalker.currentNode = this.el.nativeElement;\n      do {\n        const index = this.indexOf(this.treeWalker.currentNode.nodeValue);\n        if (index === -1) {\n          continue;\n        }\n        const range = this.doc.createRange();\n        range.setStart(this.treeWalker.currentNode, index);\n        range.setEnd(this.treeWalker.currentNode, index + this.tuiHighlight.length);\n        const hostRect = this.el.nativeElement.getBoundingClientRect();\n        const {\n          left,\n          top,\n          width,\n          height\n        } = range.getBoundingClientRect();\n        const {\n          style\n        } = this.highlight;\n        style.background = this.tuiHighlightColor;\n        style.left = tuiPx(left - hostRect.left);\n        style.top = tuiPx(top - hostRect.top);\n        style.width = tuiPx(width);\n        style.height = tuiPx(height);\n        style.display = 'block';\n        return;\n      } while (this.treeWalker.nextNode());\n    }\n    indexOf(source) {\n      return !source || !this.tuiHighlight ? -1 : source.toLowerCase().indexOf(this.tuiHighlight.toLowerCase());\n    }\n    setUpHighlight() {\n      const highlight = this.renderer.createElement('div');\n      const {\n        style\n      } = highlight;\n      style.background = this.tuiHighlightColor;\n      style.zIndex = '-1';\n      style.position = 'absolute';\n      this.renderer.appendChild(this.el.nativeElement, highlight);\n      return highlight;\n    }\n  }\n  TuiHighlightDirective.ɵfac = function TuiHighlightDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHighlightDirective)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(TuiResizeService));\n  };\n  TuiHighlightDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiHighlightDirective,\n    selectors: [[\"\", \"tuiHighlight\", \"\"]],\n    hostVars: 4,\n    hostBindings: function TuiHighlightDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"position\", \"relative\")(\"z-index\", 0);\n      }\n    },\n    inputs: {\n      tuiHighlight: \"tuiHighlight\",\n      tuiHighlightColor: \"tuiHighlightColor\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService, TuiResizeService]), i0.ɵɵNgOnChangesFeature]\n  });\n  return TuiHighlightDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiHighlightModule = /*#__PURE__*/(() => {\n  class TuiHighlightModule {}\n  TuiHighlightModule.ɵfac = function TuiHighlightModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHighlightModule)();\n  };\n  TuiHighlightModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiHighlightModule\n  });\n  TuiHighlightModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiHighlightModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiHighlightDirective, TuiHighlightModule };\n//# sourceMappingURL=taiga-ui-kit-directives-highlight.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}