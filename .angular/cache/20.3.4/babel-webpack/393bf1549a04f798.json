{"ast":null,"code":"import { tuiCreateToken, tuiProvideOptions, tuiCreateTokenFromFactory, AbstractTuiController, TuiDestroyService, tuiWatch } from '@taiga-ui/cdk';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Directive, Input, NgModule, InjectionToken, ChangeDetectorRef } from '@angular/core';\nimport { TUI_TEXTFIELD_APPEARANCE } from '@taiga-ui/core/tokens';\nimport { merge, NEVER } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nclass TuiTextfieldController {\n  constructor(change$, options, legacyAppearance, appearanceDirective, cleanerDirective, customContentDirective, iconDirective, iconLeftDirective, labelOutsideDirective, sizeDirective, prefixDirective, postfixDirective, fillerDirective) {\n    this.change$ = change$;\n    this.options = options;\n    this.legacyAppearance = legacyAppearance;\n    this.appearanceDirective = appearanceDirective;\n    this.cleanerDirective = cleanerDirective;\n    this.customContentDirective = customContentDirective;\n    this.iconDirective = iconDirective;\n    this.iconLeftDirective = iconLeftDirective;\n    this.labelOutsideDirective = labelOutsideDirective;\n    this.sizeDirective = sizeDirective;\n    this.prefixDirective = prefixDirective;\n    this.postfixDirective = postfixDirective;\n    this.fillerDirective = fillerDirective;\n  }\n  get appearance() {\n    return this.appearanceDirective.appearance || this.legacyAppearance;\n  }\n  get cleaner() {\n    return this.cleanerDirective.cleaner;\n  }\n  get customContent() {\n    return this.customContentDirective.customContent || '';\n  }\n  get icon() {\n    return this.iconDirective.icon;\n  }\n  get iconLeft() {\n    return this.iconLeftDirective.iconLeft;\n  }\n  get labelOutside() {\n    return this.labelOutsideDirective.labelOutside;\n  }\n  get size() {\n    return this.sizeDirective.size;\n  }\n  get prefix() {\n    return this.prefixDirective.prefix;\n  }\n  get postfix() {\n    return this.postfixDirective.postfix;\n  }\n  get filler() {\n    return this.fillerDirective.filler;\n  }\n}\n\n/** Default values for primitive textfield options */\nconst TUI_TEXTFIELD_DEFAULT_OPTIONS = {\n  iconCleaner: 'tuiIconClose',\n  hintOnDisabled: false\n};\n/**\n * Default parameters for textfield\n */\nconst TUI_TEXTFIELD_OPTIONS = tuiCreateToken(TUI_TEXTFIELD_DEFAULT_OPTIONS);\nfunction tuiTextfieldOptionsProvider(options) {\n  return tuiProvideOptions(TUI_TEXTFIELD_OPTIONS, options, TUI_TEXTFIELD_DEFAULT_OPTIONS);\n}\n\n// TODO: rename to TUI_TEXTFIELD_APPEARANCE in v4\nconst TUI_TEXTFIELD_APPEARANCE_DIRECTIVE = tuiCreateTokenFromFactory(() => new TuiTextfieldAppearanceDirective());\nlet TuiTextfieldAppearanceDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldAppearanceDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      // it's an empty string by default for backward compatibility\n      // (see comment https://github.com/taiga-family/taiga-ui/pull/3007#issuecomment-1315179508)\n      this.appearance = '';\n    }\n  }\n  TuiTextfieldAppearanceDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldAppearanceDirective_BaseFactory;\n    return function TuiTextfieldAppearanceDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldAppearanceDirective_BaseFactory || (ɵTuiTextfieldAppearanceDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldAppearanceDirective)))(__ngFactoryType__ || TuiTextfieldAppearanceDirective);\n    };\n  })();\n  TuiTextfieldAppearanceDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldAppearanceDirective,\n    selectors: [[\"\", \"tuiTextfieldAppearance\", \"\"]],\n    inputs: {\n      appearance: [0, \"tuiTextfieldAppearance\", \"appearance\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,\n      useExisting: forwardRef(() => TuiTextfieldAppearanceDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldAppearanceDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_CLEANER = tuiCreateTokenFromFactory(() => new TuiTextfieldCleanerDirective());\nlet TuiTextfieldCleanerDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldCleanerDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      this.cleaner = false;\n    }\n  }\n  TuiTextfieldCleanerDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldCleanerDirective_BaseFactory;\n    return function TuiTextfieldCleanerDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldCleanerDirective_BaseFactory || (ɵTuiTextfieldCleanerDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldCleanerDirective)))(__ngFactoryType__ || TuiTextfieldCleanerDirective);\n    };\n  })();\n  TuiTextfieldCleanerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldCleanerDirective,\n    selectors: [[\"\", \"tuiTextfieldCleaner\", \"\"]],\n    inputs: {\n      cleaner: [0, \"tuiTextfieldCleaner\", \"cleaner\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_CLEANER,\n      useExisting: forwardRef(() => TuiTextfieldCleanerDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldCleanerDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_CUSTOM_CONTENT = tuiCreateTokenFromFactory(() => new TuiTextfieldCustomContentDirective());\nlet TuiTextfieldCustomContentDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldCustomContentDirective extends AbstractTuiController {}\n  TuiTextfieldCustomContentDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldCustomContentDirective_BaseFactory;\n    return function TuiTextfieldCustomContentDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldCustomContentDirective_BaseFactory || (ɵTuiTextfieldCustomContentDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldCustomContentDirective)))(__ngFactoryType__ || TuiTextfieldCustomContentDirective);\n    };\n  })();\n  TuiTextfieldCustomContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldCustomContentDirective,\n    selectors: [[\"\", \"tuiTextfieldCustomContent\", \"\"]],\n    inputs: {\n      customContent: [0, \"tuiTextfieldCustomContent\", \"customContent\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_CUSTOM_CONTENT,\n      useExisting: forwardRef(() => TuiTextfieldCustomContentDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldCustomContentDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_FILLER = tuiCreateTokenFromFactory(() => new TuiTextfieldFillerDirective());\nlet TuiTextfieldFillerDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldFillerDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      this.filler = '';\n    }\n  }\n  TuiTextfieldFillerDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldFillerDirective_BaseFactory;\n    return function TuiTextfieldFillerDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldFillerDirective_BaseFactory || (ɵTuiTextfieldFillerDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldFillerDirective)))(__ngFactoryType__ || TuiTextfieldFillerDirective);\n    };\n  })();\n  TuiTextfieldFillerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldFillerDirective,\n    selectors: [[\"\", \"tuiTextfieldFiller\", \"\"]],\n    inputs: {\n      filler: [0, \"tuiTextfieldFiller\", \"filler\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_FILLER,\n      useExisting: forwardRef(() => TuiTextfieldFillerDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldFillerDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_ICON = tuiCreateTokenFromFactory(() => new TuiTextfieldIconDirective());\nlet TuiTextfieldIconDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldIconDirective extends AbstractTuiController {}\n  TuiTextfieldIconDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldIconDirective_BaseFactory;\n    return function TuiTextfieldIconDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldIconDirective_BaseFactory || (ɵTuiTextfieldIconDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldIconDirective)))(__ngFactoryType__ || TuiTextfieldIconDirective);\n    };\n  })();\n  TuiTextfieldIconDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldIconDirective,\n    selectors: [[\"\", \"tuiTextfieldIcon\", \"\"]],\n    inputs: {\n      icon: [0, \"tuiTextfieldIcon\", \"icon\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_ICON,\n      useExisting: forwardRef(() => TuiTextfieldIconDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldIconDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_ICON_LEFT = tuiCreateTokenFromFactory(() => new TuiTextfieldIconLeftDirective());\nlet TuiTextfieldIconLeftDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldIconLeftDirective extends AbstractTuiController {}\n  TuiTextfieldIconLeftDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldIconLeftDirective_BaseFactory;\n    return function TuiTextfieldIconLeftDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldIconLeftDirective_BaseFactory || (ɵTuiTextfieldIconLeftDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldIconLeftDirective)))(__ngFactoryType__ || TuiTextfieldIconLeftDirective);\n    };\n  })();\n  TuiTextfieldIconLeftDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldIconLeftDirective,\n    selectors: [[\"\", \"tuiTextfieldIconLeft\", \"\"]],\n    inputs: {\n      iconLeft: [0, \"tuiTextfieldIconLeft\", \"iconLeft\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_ICON_LEFT,\n      useExisting: forwardRef(() => TuiTextfieldIconLeftDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldIconLeftDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_LABEL_OUTSIDE = tuiCreateTokenFromFactory(() => new TuiTextfieldLabelOutsideDirective());\nlet TuiTextfieldLabelOutsideDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldLabelOutsideDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      this.labelOutside = false;\n    }\n  }\n  TuiTextfieldLabelOutsideDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldLabelOutsideDirective_BaseFactory;\n    return function TuiTextfieldLabelOutsideDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldLabelOutsideDirective_BaseFactory || (ɵTuiTextfieldLabelOutsideDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldLabelOutsideDirective)))(__ngFactoryType__ || TuiTextfieldLabelOutsideDirective);\n    };\n  })();\n  TuiTextfieldLabelOutsideDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldLabelOutsideDirective,\n    selectors: [[\"\", \"tuiTextfieldLabelOutside\", \"\"]],\n    inputs: {\n      labelOutside: [0, \"tuiTextfieldLabelOutside\", \"labelOutside\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_LABEL_OUTSIDE,\n      useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldLabelOutsideDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_POSTFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPostfixDirective());\nlet TuiTextfieldPostfixDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldPostfixDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      this.postfix = '';\n    }\n  }\n  TuiTextfieldPostfixDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldPostfixDirective_BaseFactory;\n    return function TuiTextfieldPostfixDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldPostfixDirective_BaseFactory || (ɵTuiTextfieldPostfixDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldPostfixDirective)))(__ngFactoryType__ || TuiTextfieldPostfixDirective);\n    };\n  })();\n  TuiTextfieldPostfixDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldPostfixDirective,\n    selectors: [[\"\", \"tuiTextfieldPostfix\", \"\"]],\n    inputs: {\n      postfix: [0, \"tuiTextfieldPostfix\", \"postfix\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_POSTFIX,\n      useExisting: forwardRef(() => TuiTextfieldPostfixDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldPostfixDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_PREFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPrefixDirective());\nlet TuiTextfieldPrefixDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldPrefixDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      this.prefix = '';\n    }\n  }\n  TuiTextfieldPrefixDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldPrefixDirective_BaseFactory;\n    return function TuiTextfieldPrefixDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldPrefixDirective_BaseFactory || (ɵTuiTextfieldPrefixDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldPrefixDirective)))(__ngFactoryType__ || TuiTextfieldPrefixDirective);\n    };\n  })();\n  TuiTextfieldPrefixDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldPrefixDirective,\n    selectors: [[\"\", \"tuiTextfieldPrefix\", \"\"]],\n    inputs: {\n      prefix: [0, \"tuiTextfieldPrefix\", \"prefix\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_PREFIX,\n      useExisting: forwardRef(() => TuiTextfieldPrefixDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldPrefixDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_SIZE = tuiCreateTokenFromFactory(() => new TuiTextfieldSizeDirective());\nlet TuiTextfieldSizeDirective = /*#__PURE__*/(() => {\n  class TuiTextfieldSizeDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      this.size = 'l';\n    }\n  }\n  TuiTextfieldSizeDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiTextfieldSizeDirective_BaseFactory;\n    return function TuiTextfieldSizeDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiTextfieldSizeDirective_BaseFactory || (ɵTuiTextfieldSizeDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldSizeDirective)))(__ngFactoryType__ || TuiTextfieldSizeDirective);\n    };\n  })();\n  TuiTextfieldSizeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiTextfieldSizeDirective,\n    selectors: [[\"\", \"tuiTextfieldSize\", \"\"]],\n    inputs: {\n      size: [0, \"tuiTextfieldSize\", \"size\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_SIZE,\n      useExisting: forwardRef(() => TuiTextfieldSizeDirective)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiTextfieldSizeDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiTextfieldControllerModule = /*#__PURE__*/(() => {\n  class TuiTextfieldControllerModule {}\n  TuiTextfieldControllerModule.ɵfac = function TuiTextfieldControllerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiTextfieldControllerModule)();\n  };\n  TuiTextfieldControllerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiTextfieldControllerModule\n  });\n  TuiTextfieldControllerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiTextfieldControllerModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_TEXTFIELD_WATCHED_CONTROLLER = /*#__PURE__*/new InjectionToken('[TUI_TEXTFIELD_WATCHED_CONTROLLER]');\nconst TEXTFIELD_CONTROLLER_PROVIDER = [TuiDestroyService, {\n  provide: TUI_TEXTFIELD_WATCHED_CONTROLLER,\n  deps: [ChangeDetectorRef, TuiDestroyService, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_APPEARANCE, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_FILLER],\n  useFactory: (cdr, destroy$, options, legacyAppearance, ...controllers) => {\n    const change$ = merge(...controllers.map(({\n      change$\n    }) => change$ || NEVER)).pipe(tuiWatch(cdr), takeUntil(destroy$));\n    change$.subscribe();\n    return new TuiTextfieldController(change$, options, legacyAppearance, ...controllers);\n  }\n}];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_DEFAULT_OPTIONS, TUI_TEXTFIELD_FILLER, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldController, TuiTextfieldControllerModule, TuiTextfieldCustomContentDirective, TuiTextfieldFillerDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldPostfixDirective, TuiTextfieldPrefixDirective, TuiTextfieldSizeDirective, tuiTextfieldOptionsProvider };\n//# sourceMappingURL=taiga-ui-core-directives-textfield-controller.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}