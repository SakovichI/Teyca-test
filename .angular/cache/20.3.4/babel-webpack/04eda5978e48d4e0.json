{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, inject, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostListener, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { maskitoDateOptionsGenerator } from '@maskito/kit';\nimport * as i6 from '@taiga-ui/cdk';\nimport { AbstractTuiMultipleControl, ALWAYS_FALSE_HANDLER, TuiMonth, changeDateSeparator, tuiIsString, TuiDay, tuiDateClamp, TUI_IS_MOBILE, TUI_DATE_FORMAT, TUI_DATE_SEPARATOR, tuiAsFocusableItemAccessor, tuiAsControl, InjectFlags, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_DEFAULT_MARKER_HANDLER, TUI_TEXTFIELD_SIZE, TUI_DROPDOWN_COMPONENT, TuiPrimitiveTextfieldComponent, TuiWrapperModule, TuiCalendarModule, TuiSvgModule, TuiLinkModule, TuiHostedDropdownModule, TuiTextfieldControllerModule, TuiPrimitiveTextfieldModule } from '@taiga-ui/core';\nimport { TuiStringifiableItem } from '@taiga-ui/kit/classes';\nimport * as i2 from '@taiga-ui/kit/components/input-tag';\nimport { TuiInputTagComponent, TuiInputTagModule } from '@taiga-ui/kit/components/input-tag';\nimport { TUI_MOBILE_CALENDAR, TUI_DATE_TEXTS, TUI_DATE_VALUE_TRANSFORMER, TUI_INPUT_DATE_OPTIONS, TUI_DONE_WORD, tuiDateStreamWithTransformer } from '@taiga-ui/kit/tokens';\nimport { tuiImmutableUpdateInputDateMulti } from '@taiga-ui/kit/utils';\nimport { map } from 'rxjs/operators';\nimport * as i3 from '@maskito/angular';\nimport { MaskitoModule } from '@maskito/angular';\nimport * as i5 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i8 from 'rxjs';\nconst _c0 = [\"multiple\", \"\"];\nconst _c1 = [\"*\", [[\"input\"]]];\nconst _c2 = [\"*\", \"input\"];\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputDateMultiComponent_ng_template_9_tui_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-svg\", 6);\n    i0.ɵɵlistener(\"click\", function TuiInputDateMultiComponent_ng_template_9_tui_svg_0_Template_tui_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.onIconClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const src_r5 = ctx.polymorpheusOutlet;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-icon\", !ctx_r3.computedDisabled);\n    i0.ɵɵproperty(\"readOnly\", ctx_r3.readOnly)(\"src\", src_r5);\n  }\n}\nfunction TuiInputDateMultiComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputDateMultiComponent_ng_template_9_tui_svg_0_Template, 1, 4, \"tui-svg\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r3.calendarIcon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r3.size));\n  }\n}\nfunction TuiInputDateMultiComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar\", 7);\n    i0.ɵɵlistener(\"dayClick\", function TuiInputDateMultiComponent_ng_template_11_Template_tui_calendar_dayClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDayClick($event));\n    })(\"monthChange\", function TuiInputDateMultiComponent_ng_template_11_Template_tui_calendar_monthChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onMonthChange($event));\n    })(\"mousedown.silent.prevent\", function TuiInputDateMultiComponent_ng_template_11_Template_tui_calendar_mousedown_silent_prevent_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵlistener(\"mousedown.silent.prevent\", function TuiInputDateMultiComponent_ng_template_11_Template_div_mousedown_silent_prevent_1_listener() {\n      i0.ɵɵrestoreView(_r6);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TuiInputDateMultiComponent_ng_template_11_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.done());\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r3.disabledItemHandler)(\"markerHandler\", ctx_r3.markerHandler)(\"max\", ctx_r3.computedMax)(\"min\", ctx_r3.computedMin)(\"month\", ctx_r3.computedActiveYearMonth)(\"value\", ctx_r3.value);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 7, ctx_r3.doneWord$), \" \");\n  }\n}\nlet TuiInputDateMultiComponent = /*#__PURE__*/(() => {\n  class TuiInputDateMultiComponent extends AbstractTuiMultipleControl {\n    constructor(control, cdr, isMobile, mobileCalendar, dateFormat, dateSeparator, dateTexts$, valueTransformer, options, textfieldSize, doneWord$) {\n      var _a, _b;\n      super(control, cdr, valueTransformer);\n      this.isMobile = isMobile;\n      this.mobileCalendar = mobileCalendar;\n      this.dateFormat = dateFormat;\n      this.dateSeparator = dateSeparator;\n      this.dateTexts$ = dateTexts$;\n      this.valueTransformer = valueTransformer;\n      this.options = options;\n      this.textfieldSize = textfieldSize;\n      this.doneWord$ = doneWord$;\n      this.month = null;\n      this.min = this.options.min;\n      this.max = this.options.max;\n      this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n      this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;\n      this.defaultActiveYearMonth = TuiMonth.currentLocal();\n      this.expandable = false;\n      this.inputHidden = false;\n      this.search = '';\n      this.placeholder = '';\n      this.rows = Infinity;\n      this.maskitoOptions = maskitoDateOptionsGenerator({\n        mode: 'dd/mm/yyyy',\n        separator: '.',\n        min: (_a = this.min) === null || _a === void 0 ? void 0 : _a.toLocalNativeDate(),\n        max: (_b = this.max) === null || _b === void 0 ? void 0 : _b.toLocalNativeDate()\n      });\n      this.open = false;\n      this.filler$ = this.dateTexts$.pipe(map(dateTexts => changeDateSeparator(dateTexts[this.dateFormat], this.dateSeparator)));\n      this.tagValidator = tag => {\n        var _a, _b, _c;\n        const {\n          year,\n          month,\n          day\n        } = tuiIsString(tag) ? TuiDay.parseRawDateString(tag) : tag;\n        const date = new TuiDay(year, month, day);\n        return (_c = TuiDay.isValidDay(year, month, day) && ((_a = this.min) === null || _a === void 0 ? void 0 : _a.daySameOrBefore(date)) && ((_b = this.max) === null || _b === void 0 ? void 0 : _b.daySameOrAfter(date))) !== null && _c !== void 0 ? _c : false;\n      };\n      this.disabledItemHandlerWrapper = handler => stringifiable => tuiIsString(stringifiable) || handler(stringifiable.item);\n      this.valueMapper = value => value.map(item => new TuiStringifiableItem(item, item => String(item)));\n    }\n    onClick() {\n      if (!this.isMobile && this.interactive) {\n        this.open = !this.open;\n      }\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get nativeDropdownMode() {\n      return this.isMobile;\n    }\n    get computedMin() {\n      var _a;\n      return (_a = this.min) !== null && _a !== void 0 ? _a : this.options.min;\n    }\n    get computedMax() {\n      var _a;\n      return (_a = this.max) !== null && _a !== void 0 ? _a : this.options.max;\n    }\n    get nativeFocusableElement() {\n      var _a;\n      return ((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || null;\n    }\n    get focused() {\n      var _a;\n      return !!((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.focused);\n    }\n    get computedMobile() {\n      return this.isMobile && !!this.mobileCalendar;\n    }\n    get calendarIcon() {\n      return this.options.icon;\n    }\n    get computedActiveYearMonth() {\n      return this.month || this.value[this.value.length - 1] || tuiDateClamp(this.defaultActiveYearMonth, this.computedMin, this.computedMax);\n    }\n    onIconClick() {\n      if (this.isMobile && this.interactive) {\n        this.open = true;\n      }\n    }\n    onEnter(search) {\n      if (!this.tagValidator(search)) {\n        return;\n      }\n      this.value = tuiImmutableUpdateInputDateMulti(this.value, TuiDay.normalizeParse(search));\n      if (this.inputTag) {\n        this.inputTag.search = '';\n      }\n      this.done();\n    }\n    onValueChange(value) {\n      var _a;\n      (_a = this.control) === null || _a === void 0 ? void 0 : _a.updateValueAndValidity({\n        emitEvent: false\n      });\n      if (!value.length && !this.mobileCalendar) {\n        this.onOpenChange(true);\n      }\n      this.value = value.map(({\n        item\n      }) => item);\n    }\n    onDayClick(value) {\n      this.value = tuiImmutableUpdateInputDateMulti(this.value, value);\n    }\n    done() {\n      this.open = false;\n    }\n    onMonthChange(month) {\n      this.month = month;\n    }\n    onOpenChange(open) {\n      this.open = open;\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    setDisabledState() {\n      super.setDisabledState();\n      this.open = false;\n    }\n  }\n  TuiInputDateMultiComponent.ɵfac = function TuiInputDateMultiComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputDateMultiComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TUI_MOBILE_CALENDAR, 8), i0.ɵɵdirectiveInject(TUI_DATE_FORMAT), i0.ɵɵdirectiveInject(TUI_DATE_SEPARATOR), i0.ɵɵdirectiveInject(TUI_DATE_TEXTS), i0.ɵɵdirectiveInject(TUI_DATE_VALUE_TRANSFORMER, 8), i0.ɵɵdirectiveInject(TUI_INPUT_DATE_OPTIONS), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE), i0.ɵɵdirectiveInject(TUI_DONE_WORD));\n  };\n  TuiInputDateMultiComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputDateMultiComponent,\n    selectors: [[\"tui-input-date\", \"multiple\", \"\"]],\n    viewQuery: function TuiInputDateMultiComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n        i0.ɵɵviewQuery(TuiInputTagComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputTag = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputDateMultiComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function TuiInputDateMultiComponent_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      min: \"min\",\n      max: \"max\",\n      disabledItemHandler: \"disabledItemHandler\",\n      markerHandler: \"markerHandler\",\n      defaultActiveYearMonth: \"defaultActiveYearMonth\",\n      expandable: \"expandable\",\n      inputHidden: \"inputHidden\",\n      search: \"search\",\n      placeholder: \"placeholder\",\n      rows: \"rows\",\n      tagValidator: \"tagValidator\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputDateMultiComponent), tuiAsControl(TuiInputDateMultiComponent), tuiDateStreamWithTransformer(TUI_DATE_VALUE_TRANSFORMER), {\n      provide: TUI_DROPDOWN_COMPONENT,\n      useFactory: () => inject(TUI_IS_MOBILE) && inject(TUI_MOBILE_CALENDAR, InjectFlags.Optional) || inject(TUI_DROPDOWN_COMPONENT, InjectFlags.SkipSelf)\n    }]), i0.ɵɵInheritDefinitionFeature],\n    attrs: _c0,\n    ngContentSelectors: _c2,\n    decls: 13,\n    vars: 32,\n    consts: [[\"inputTag\", \"\"], [\"iconContent\", \"\"], [\"dropdown\", \"\"], [1, \"t-hosted\", 3, \"openChange\", \"canOpen\", \"content\", \"open\"], [1, \"t-input\", 3, \"keydown.enter\", \"ngModelChange\", \"disabled\", \"disabledItemHandler\", \"editable\", \"expandable\", \"inputHidden\", \"maskito\", \"nativeId\", \"ngModel\", \"placeholder\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"readOnly\", \"removable\", \"rows\", \"tagValidator\", \"tuiTextfieldFiller\", \"tuiTextfieldIcon\"], [\"appearance\", \"icon\", \"tuiWrapper\", \"\", 3, \"t-icon\", \"readOnly\", \"src\", \"click\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"appearance\", \"icon\", \"tuiWrapper\", \"\", 3, \"click\", \"readOnly\", \"src\"], [3, \"dayClick\", \"monthChange\", \"mousedown.silent.prevent\", \"disabledItemHandler\", \"markerHandler\", \"max\", \"min\", \"month\", \"value\"], [1, \"t-button\", 3, \"mousedown.silent.prevent\"], [\"tuiLink\", \"\", \"type\", \"button\", 3, \"click\"]],\n    template: function TuiInputDateMultiComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 3);\n        i0.ɵɵlistener(\"openChange\", function TuiInputDateMultiComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onOpenChange($event));\n        });\n        i0.ɵɵelementStart(1, \"tui-input-tag\", 4, 0);\n        i0.ɵɵpipe(3, \"tuiMapper\");\n        i0.ɵɵpipe(4, \"tuiMapper\");\n        i0.ɵɵpipe(5, \"tuiMapper\");\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵlistener(\"keydown.enter\", function TuiInputDateMultiComponent_Template_tui_input_tag_keydown_enter_1_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const inputTag_r2 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.onEnter(inputTag_r2.search || \"\"));\n        })(\"ngModelChange\", function TuiInputDateMultiComponent_Template_tui_input_tag_ngModelChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onValueChange($event));\n        });\n        i0.ɵɵprojection(7);\n        i0.ɵɵprojection(8, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, TuiInputDateMultiComponent_ng_template_9_Template, 1, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(11, TuiInputDateMultiComponent_ng_template_11_Template, 5, 9, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const iconContent_r7 = i0.ɵɵreference(10);\n        const dropdown_r8 = i0.ɵɵreference(12);\n        i0.ɵɵproperty(\"canOpen\", ctx.interactive)(\"content\", dropdown_r8)(\"open\", ctx.open && ctx.interactive);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disabledItemHandler\", i0.ɵɵpipeBind2(3, 21, ctx.disabledItemHandler, ctx.disabledItemHandlerWrapper))(\"editable\", false)(\"expandable\", ctx.expandable)(\"inputHidden\", ctx.inputHidden)(\"maskito\", ctx.maskitoOptions)(\"nativeId\", ctx.nativeId)(\"ngModel\", i0.ɵɵpipeBind2(4, 24, ctx.value, ctx.valueMapper))(\"placeholder\", ctx.placeholder)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.computedInvalid)(\"readOnly\", ctx.readOnly)(\"removable\", !ctx.nativeDropdownMode)(\"rows\", ctx.rows)(\"tagValidator\", i0.ɵɵpipeBind2(5, 27, ctx.tagValidator, ctx.disabledItemHandlerWrapper))(\"tuiTextfieldFiller\", i0.ɵɵpipeBind1(6, 30, ctx.filler$) || \"\")(\"tuiTextfieldIcon\", ctx.calendarIcon && iconContent_r7);\n      }\n    },\n    dependencies: [i1.TuiHostedDropdownComponent, i2.TuiInputTagComponent, i1.TuiSvgComponent, i1.TuiCalendarComponent, i1.TuiLinkComponent, i3.MaskitoDirective, i4.NgControlStatus, i4.NgModel, i1.TuiTextfieldFillerDirective, i1.TuiTextfieldIconDirective, i5.PolymorpheusOutletDirective, i1.TuiWrapperDirective, i6.TuiMapperPipe, i7.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}.t-icon[_ngcontent-%COMP%]{pointer-events:auto}.t-button[_ngcontent-%COMP%]{display:flex;height:2.75rem;justify-content:center;box-shadow:inset 0 1px var(--tui-base-03)}.t-button[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{flex:1;text-align:center}.t-native-input[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;pointer-events:auto;font-size:2rem}\"],\n    changeDetection: 0\n  });\n  return TuiInputDateMultiComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputDateMultiModule = /*#__PURE__*/(() => {\n  class TuiInputDateMultiModule {}\n  TuiInputDateMultiModule.ɵfac = function TuiInputDateMultiModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputDateMultiModule)();\n  };\n  TuiInputDateMultiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputDateMultiModule\n  });\n  TuiInputDateMultiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, MaskitoModule, PolymorpheusModule, TuiWrapperModule, TuiCalendarModule, TuiSvgModule, TuiLinkModule, TuiInputTagModule, FormsModule, TuiMapperPipeModule, TuiHostedDropdownModule, TuiTextfieldControllerModule, TuiPrimitiveTextfieldModule]]\n  });\n  return TuiInputDateMultiModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputDateMultiComponent, TuiInputDateMultiModule };\n//# sourceMappingURL=taiga-ui-kit-components-input-date-multi.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}