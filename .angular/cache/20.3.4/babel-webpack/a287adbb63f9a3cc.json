{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, Inject, NgModule } from '@angular/core';\nimport { WINDOW } from '@ng-web-apis/common';\nimport { tuiAssert, tuiIsObserved, TUI_PARENT_ANIMATION } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { tuiIsMobile, TUI_CLOSE_WORD, TUI_COMMON_ICONS, TUI_ANIMATION_OPTIONS, TUI_MEDIA, tuiSlideInTop, TuiModeModule, TuiButtonModule } from '@taiga-ui/core';\nimport * as i5 from 'rxjs';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nfunction TuiTableBarsHostComponent_div_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r1 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r1, \" \");\n  }\n}\nfunction TuiTableBarsHostComponent_div_0_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵlistener(\"click\", function TuiTableBarsHostComponent_div_0_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const item_r3 = i0.ɵɵnextContext().ngIf;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onCloseClick(item_r3));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().ngIf;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r3.icons.close)(\"title\", i0.ɵɵpipeBind1(1, 3, ctx_r3.closeWord$))(\"tuiMode\", ctx_r3.getMode(item_r3.mode));\n  }\n}\nfunction TuiTableBarsHostComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5);\n    i0.ɵɵtemplate(5, TuiTableBarsHostComponent_div_0_ng_container_5_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, TuiTableBarsHostComponent_div_0_button_6_Template, 2, 5, \"button\", 7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.ngIf;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@tuiParentAnimation\", undefined);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"t-bar_light\", item_r3.mode === \"onDark\");\n    i0.ɵɵproperty(\"@tuiSlideInTop\", ctx_r3.animation);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"t-container_adaptive\", item_r3.adaptive);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", item_r3.content)(\"polymorpheusOutletContext\", ctx_r3.getItemContext(item_r3));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r3.hasCloseButton);\n  }\n}\nclass TuiTableBar {\n  constructor(observer, content, options = {}) {\n    this.observer = observer;\n    this.content = content;\n    const {\n      mode = 'onLight',\n      hasCloseButton = false,\n      adaptive = false\n    } = options;\n    this.mode = mode;\n    this.hasCloseButton = hasCloseButton;\n    this.adaptive = adaptive;\n  }\n  close() {\n    this.observer.complete();\n  }\n}\nconst NO_HOST = 'Table bars are disabled, enable support by adding TuiTableBarsHostModule to your main app module ' + 'and tui-table-bars-host component to app template';\nlet TuiTableBarsService = /*#__PURE__*/(() => {\n  class TuiTableBarsService {\n    constructor() {\n      this.bar$ = new ReplaySubject(1);\n    }\n    open(content, options) {\n      return new Observable(observer => {\n        ngDevMode && tuiAssert.assert(tuiIsObserved(this.bar$), NO_HOST);\n        const tableBar = new TuiTableBar(observer, content, options);\n        this.bar$.next(tableBar);\n        return () => {\n          this.bar$.next(null);\n        };\n      });\n    }\n  }\n  TuiTableBarsService.ɵfac = function TuiTableBarsService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiTableBarsService)();\n  };\n  TuiTableBarsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TuiTableBarsService,\n    factory: TuiTableBarsService.ɵfac,\n    providedIn: 'root'\n  });\n  return TuiTableBarsService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO: Accessibility\nlet TuiTableBarsHostComponent = /*#__PURE__*/(() => {\n  class TuiTableBarsHostComponent {\n    constructor(service, closeWord$, icons, animation, media, win) {\n      this.service = service;\n      this.closeWord$ = closeWord$;\n      this.icons = icons;\n      this.animation = animation;\n      this.media = media;\n      this.win = win;\n    }\n    get isMobile() {\n      return tuiIsMobile(this.win, this.media);\n    }\n    getMode(mode) {\n      return mode === 'onLight' ? 'onDark' : null;\n    }\n    onCloseClick(itemToRemove) {\n      itemToRemove.close();\n    }\n    getItemContext(item) {\n      return {\n        $implicit: () => item.close()\n      };\n    }\n  }\n  TuiTableBarsHostComponent.ɵfac = function TuiTableBarsHostComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiTableBarsHostComponent)(i0.ɵɵdirectiveInject(TuiTableBarsService), i0.ɵɵdirectiveInject(TUI_CLOSE_WORD), i0.ɵɵdirectiveInject(TUI_COMMON_ICONS), i0.ɵɵdirectiveInject(TUI_ANIMATION_OPTIONS), i0.ɵɵdirectiveInject(TUI_MEDIA), i0.ɵɵdirectiveInject(WINDOW));\n  };\n  TuiTableBarsHostComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiTableBarsHostComponent,\n    selectors: [[\"tui-table-bars-host\"]],\n    standalone: false,\n    decls: 2,\n    vars: 3,\n    consts: [[\"class\", \"t-wrapper\", 4, \"ngIf\"], [1, \"t-wrapper\"], [\"automation-id\", \"tui-table-bar__bar\", 1, \"t-bar\"], [1, \"t-container\"], [1, \"t-inner\"], [1, \"t-content\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"appearance\", \"icon\", \"automation-id\", \"tui-table-bar__close-button\", \"size\", \"xs\", \"tuiIconButton\", \"\", \"type\", \"button\", \"class\", \"t-close-button\", 3, \"icon\", \"title\", \"tuiMode\", \"click\", 4, \"ngIf\"], [\"appearance\", \"icon\", \"automation-id\", \"tui-table-bar__close-button\", \"size\", \"xs\", \"tuiIconButton\", \"\", \"type\", \"button\", 1, \"t-close-button\", 3, \"click\", \"icon\", \"title\", \"tuiMode\"]],\n    template: function TuiTableBarsHostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiTableBarsHostComponent_div_0_Template, 7, 9, \"div\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.service.bar$));\n      }\n    },\n    dependencies: [i1.TuiButtonComponent, i2.NgIf, i3.PolymorpheusOutletDirective, i1.TuiModeDirective, i2.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{position:fixed;bottom:0;left:0;display:flex;align-items:flex-end;width:100%;height:0}.t-wrapper[_ngcontent-%COMP%]{display:flex;width:100%}.t-bar[_ngcontent-%COMP%]{box-shadow:var(--tui-shadow);flex:0 0 100%;background:var(--tui-base-07);color:var(--tui-base-01)}.t-bar_light[_ngcontent-%COMP%]{background:var(--tui-base-01);color:var(--tui-text-01)}.t-container[_ngcontent-%COMP%]{position:relative;margin:0 auto}@media screen and (min-width: 80em){.t-container.t-container_adaptive[_ngcontent-%COMP%]{width:69rem}}@media screen and (max-width: 79.9625em){.t-container.t-container_adaptive[_ngcontent-%COMP%]{width:51.5rem}}@media screen and (max-width: 47.9625em){.t-container.t-container_adaptive[_ngcontent-%COMP%]{width:100%;padding:0 1rem;box-sizing:border-box}}@media screen and (min-width: 80em){.t-container[_ngcontent-%COMP%]{width:69rem}}@media screen and (max-width: 79.9625em){.t-container[_ngcontent-%COMP%]{width:51.5rem;padding:0 3rem}}.t-inner[_ngcontent-%COMP%]{display:flex;align-items:center;height:4.5rem;width:100%;overflow:hidden}tui-root._mobile[_nghost-%COMP%]   .t-inner[_ngcontent-%COMP%], tui-root._mobile   [_nghost-%COMP%]   .t-inner[_ngcontent-%COMP%]{height:5.75rem}.t-close-button[_ngcontent-%COMP%]{margin-left:1.5rem}.t-content[_ngcontent-%COMP%]{width:100%;flex:1 1 0}\"],\n    data: {\n      animation: [tuiSlideInTop, TUI_PARENT_ANIMATION]\n    },\n    changeDetection: 0\n  });\n  return TuiTableBarsHostComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiTableBarsHostModule = /*#__PURE__*/(() => {\n  class TuiTableBarsHostModule {}\n  TuiTableBarsHostModule.ɵfac = function TuiTableBarsHostModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiTableBarsHostModule)();\n  };\n  TuiTableBarsHostModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiTableBarsHostModule\n  });\n  TuiTableBarsHostModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiModeModule, TuiButtonModule]]\n  });\n  return TuiTableBarsHostModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiTableBar, TuiTableBarsHostComponent, TuiTableBarsHostModule, TuiTableBarsService };\n//# sourceMappingURL=taiga-ui-addon-tablebars.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}