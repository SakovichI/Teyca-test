{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Optional, Inject, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nconst _c0 = [\"type\", \"radio\", \"tuiRadio\", \"\"];\nlet TuiRadioComponent = /*#__PURE__*/(() => {\n  class TuiRadioComponent {\n    constructor(control) {\n      this.control = control;\n      this.size = 'm';\n    }\n  }\n  TuiRadioComponent.ɵfac = function TuiRadioComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioComponent)(i0.ɵɵdirectiveInject(NgControl, 8));\n  };\n  TuiRadioComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiRadioComponent,\n    selectors: [[\"input\", \"type\", \"radio\", \"tuiRadio\", \"\"]],\n    hostAttrs: [\"tuiAppearance\", \"\"],\n    hostVars: 6,\n    hostBindings: function TuiRadioComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"disabled\", !ctx.control || ctx.control.disabled);\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n        i0.ɵɵclassProp(\"_invalid\", (ctx.control == null ? null : ctx.control.invalid) && (ctx.control == null ? null : ctx.control.touched))(\"_readonly\", !ctx.control);\n      }\n    },\n    inputs: {\n      size: \"size\"\n    },\n    standalone: false,\n    attrs: _c0,\n    decls: 0,\n    vars: 0,\n    template: function TuiRadioComponent_Template(rf, ctx) {},\n    styles: [\"[_nghost-%COMP%]{--t-size: 1.5rem;transition-property:background,box-shadow;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:var(--t-size);height:var(--t-size);cursor:pointer;margin:0;border-radius:100%;box-shadow:inset 0 0 0 .0625rem var(--tui-clear-active);color:var(--tui-primary-text)}[_nghost-%COMP%]:disabled._readonly{opacity:1}[_nghost-%COMP%]:before{position:absolute;top:0;left:0;width:100%;height:100%;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\\\"\\\";border-radius:100%;background:currentColor;transform:scale(0)}[_nghost-%COMP%]:checked{box-shadow:none;background:var(--tui-primary)}[_nghost-%COMP%]:checked:hover{background:var(--tui-primary-hover)}[_nghost-%COMP%]:checked:active{background:var(--tui-primary-active)}[_nghost-%COMP%]:checked:before{transform:scale(.5)}[data-size=s][_nghost-%COMP%]{--t-size: 1rem}._invalid[_nghost-%COMP%]{box-shadow:inset 0 0 0 .0625rem var(--tui-error-bg-hover)}._invalid[_nghost-%COMP%]:checked{background:var(--tui-error-fill)}\"],\n    changeDetection: 0\n  });\n  return TuiRadioComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiRadioModule = /*#__PURE__*/(() => {\n  class TuiRadioModule {}\n  TuiRadioModule.ɵfac = function TuiRadioModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioModule)();\n  };\n  TuiRadioModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiRadioModule\n  });\n  TuiRadioModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiRadioModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiRadioComponent, TuiRadioModule };\n//# sourceMappingURL=taiga-ui-experimental-components-radio.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}