{"ast":null,"code":"import { input } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TuiFieldErrorPipeModule, TuiInputModule, TuiInputPasswordModule } from '@taiga-ui/kit';\nimport { TuiErrorModule, TuiLabelModule, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport { AsyncPipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@taiga-ui/kit\";\nimport * as i3 from \"@taiga-ui/core\";\nconst _c0 = () => [];\nfunction LoginFormComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 0);\n    i0.ɵɵelementStart(1, \"label\")(2, \"tui-input\", 1);\n    i0.ɵɵtext(3, \" \\u041B\\u043E\\u0433\\u0438\\u043D \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"tui-error\", 2);\n    i0.ɵɵpipe(5, \"tuiFieldError\");\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\")(8, \"tui-input-password\", 3);\n    i0.ɵɵtext(9, \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"tui-error\", 4);\n    i0.ɵɵpipe(11, \"tuiFieldError\");\n    i0.ɵɵpipe(12, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"formGroup\", ctx);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(6, 7, i0.ɵɵpipeBind1(5, 5, i0.ɵɵpureFunction0(13, _c0))));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(12, 11, i0.ɵɵpipeBind1(11, 9, i0.ɵɵpureFunction0(14, _c0))));\n  }\n}\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    $form = input.required(...(ngDevMode ? [{\n      debugName: \"$form\",\n      alias: 'form'\n    }] : [{\n      alias: 'form'\n    }]));\n    static ɵfac = function LoginFormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginFormComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginFormComponent,\n      selectors: [[\"app-login-form\"]],\n      inputs: {\n        $form: [1, \"form\", \"$form\"]\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"formGroup\"], [\"formControlName\", \"login\", \"tuiTextfieldSize\", \"m\", 1, \"input\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"login\", 3, \"error\"], [\"formControlName\", \"password\", \"tuiTextfieldSize\", \"m\", 1, \"input\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"password\", 3, \"error\"]],\n      template: function LoginFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵconditionalCreate(0, LoginFormComponent_Conditional_0_Template, 13, 15, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          let tmp_0_0;\n          i0.ɵɵconditional((tmp_0_0 = ctx.$form()) ? 0 : -1, tmp_0_0);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, TuiInputModule, i2.TuiInputComponent, i2.TuiInputDirective, TuiLabelModule, TuiTextfieldControllerModule, i3.TuiTextfieldCleanerDirective, i3.TuiTextfieldSizeDirective, TuiFieldErrorPipeModule, TuiInputPasswordModule, i2.TuiInputPasswordComponent, i2.TuiInputPasswordDirective, TuiErrorModule, i3.TuiErrorComponent, i2.TuiFieldErrorPipe, AsyncPipe],\n      styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;gap:var(--spacing-3x)}\"]\n    });\n  }\n  return LoginFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}