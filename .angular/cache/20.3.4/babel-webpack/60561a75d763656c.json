{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, ElementRef, Component, ChangeDetectionStrategy, Inject, Self, Optional, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NgModel, NgControl } from '@angular/forms';\nimport { tuiCreateToken, tuiProvideOptions, tuiIsString, tuiControlValue, tuiWatch, TuiDestroyService } from '@taiga-ui/cdk';\nimport { TUI_ICON_RESOLVER } from '@taiga-ui/experimental/tokens';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'rxjs';\nconst _c0 = [\"type\", \"checkbox\", \"tuiCheckbox\", \"\"];\nconst TUI_CHECKBOX_DEFAULT_OPTIONS = {\n  size: 'm',\n  icons: {\n    checked: size => size === 'm' ? 'tuiIconCheckLarge' : 'tuiIconCheck',\n    indeterminate: size => size === 'm' ? 'tuiIconMinusLarge' : 'tuiIconMinus'\n  }\n};\nconst TUI_CHECKBOX_OPTIONS = tuiCreateToken(TUI_CHECKBOX_DEFAULT_OPTIONS);\nfunction tuiCheckboxOptionsProvider(options) {\n  return tuiProvideOptions(TUI_CHECKBOX_OPTIONS, options, TUI_CHECKBOX_DEFAULT_OPTIONS);\n}\nlet TuiCheckboxComponent = /*#__PURE__*/(() => {\n  class TuiCheckboxComponent {\n    constructor(cdr, resolver, options, destroy$, el, control) {\n      this.cdr = cdr;\n      this.resolver = resolver;\n      this.options = options;\n      this.destroy$ = destroy$;\n      this.el = el;\n      this.control = control;\n      this.size = this.options.size;\n    }\n    get icon() {\n      const option = this.el.nativeElement.indeterminate ? this.options.icons.indeterminate : this.options.icons.checked;\n      const icon = tuiIsString(option) ? option : option(this.size);\n      return `url(${this.resolver(icon)})`;\n    }\n    ngOnInit() {\n      var _a;\n      if (!((_a = this.control) === null || _a === void 0 ? void 0 : _a.valueChanges)) {\n        return;\n      }\n      tuiControlValue(this.control).pipe(distinctUntilChanged(), tuiWatch(this.cdr), takeUntil(this.destroy$)).subscribe(value => {\n        // https://github.com/angular/angular/issues/14988\n        const fix = this.control instanceof NgModel ? this.control.model : value;\n        this.el.nativeElement.indeterminate = fix === null;\n      });\n    }\n  }\n  TuiCheckboxComponent.ɵfac = function TuiCheckboxComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiCheckboxComponent)(i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_ICON_RESOLVER), i0.ɵɵdirectiveInject(TUI_CHECKBOX_OPTIONS), i0.ɵɵdirectiveInject(TuiDestroyService, 2), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(NgControl, 8));\n  };\n  TuiCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiCheckboxComponent,\n    selectors: [[\"input\", \"type\", \"checkbox\", \"tuiCheckbox\", \"\"]],\n    hostAttrs: [\"tuiAppearance\", \"\"],\n    hostVars: 8,\n    hostBindings: function TuiCheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"disabled\", !ctx.control || ctx.control.disabled);\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n        i0.ɵɵstyleProp(\"--t-mask\", ctx.icon);\n        i0.ɵɵclassProp(\"_invalid\", (ctx.control == null ? null : ctx.control.invalid) && (ctx.control == null ? null : ctx.control.touched))(\"_readonly\", !ctx.control);\n      }\n    },\n    inputs: {\n      size: \"size\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService])],\n    attrs: _c0,\n    decls: 0,\n    vars: 0,\n    template: function TuiCheckboxComponent_Template(rf, ctx) {},\n    styles: [\"[_nghost-%COMP%]{width:1.5rem;height:1.5rem;border-radius:var(--tui-radius-s);color:var(--tui-primary-text);cursor:pointer;margin:0;box-shadow:inset 0 0 0 .0625rem var(--tui-clear-active)}[_nghost-%COMP%]:before{position:absolute;top:0;left:0;width:100%;height:100%;content:\\\"\\\";background:currentColor;-webkit-mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"></svg>') center / 100%;mask:url('data:image/svg+xml,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"></svg>') center / 100%;transform:scale(0);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out}[_nghost-%COMP%]:disabled._readonly{opacity:1}[_nghost-%COMP%]:checked, [_nghost-%COMP%]:indeterminate{box-shadow:none;background:var(--tui-primary)}[_nghost-%COMP%]:checked:hover, [_nghost-%COMP%]:indeterminate:hover{background:var(--tui-primary-hover)}[_nghost-%COMP%]:checked:active, [_nghost-%COMP%]:indeterminate:active{background:var(--tui-primary-active)}[_nghost-%COMP%]:checked:before, [_nghost-%COMP%]:indeterminate:before{-webkit-mask-image:var(--t-mask);mask-image:var(--t-mask);transform:scale(1);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out,-webkit-mask 0s ease-in-out}[data-size=s][_nghost-%COMP%]{width:1rem;height:1rem;border-radius:var(--tui-radius-xs)}._invalid[_nghost-%COMP%]{box-shadow:inset 0 0 0 .0625rem var(--tui-error-bg-hover)}._invalid[_nghost-%COMP%]:checked, ._invalid[_nghost-%COMP%]:indeterminate{background:var(--tui-error-fill)}\"],\n    changeDetection: 0\n  });\n  return TuiCheckboxComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiCheckboxModule = /*#__PURE__*/(() => {\n  class TuiCheckboxModule {}\n  TuiCheckboxModule.ɵfac = function TuiCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiCheckboxModule)();\n  };\n  TuiCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiCheckboxModule\n  });\n  TuiCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiCheckboxModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_CHECKBOX_DEFAULT_OPTIONS, TUI_CHECKBOX_OPTIONS, TuiCheckboxComponent, TuiCheckboxModule, tuiCheckboxOptionsProvider };\n//# sourceMappingURL=taiga-ui-experimental-components-checkbox.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}