{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, InjectionToken, SkipSelf, Optional, SecurityContext, ElementRef, Component, ChangeDetectionStrategy, Inject, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WINDOW } from '@ng-web-apis/common';\nimport * as i1 from '@taiga-ui/cdk';\nimport { tuiSvgLinearGradientProcessor, tuiCreateTokenFromFactory, tuiIsString, tuiAssert, tuiGetDocumentOrShadowRoot, TuiStaticRequestService, TUI_BASE_HREF, tuiPure, TuiLetModule } from '@taiga-ui/cdk';\nimport { TUI_CACHE_BUSTING_PAYLOAD, TUI_ICON_ERROR } from '@taiga-ui/core/constants';\nimport * as i3 from '@taiga-ui/core/services';\nimport { TuiSvgService } from '@taiga-ui/core/services';\nimport { TUI_DEFAULT_ICONS_PLACE, TUI_ICONS_PLACE, TUI_ICONS_PATH, TUI_SVG_SRC_PROCESSOR, TUI_SVG_CONTENT_PROCESSOR, TUI_SANITIZER } from '@taiga-ui/core/tokens';\nimport { tuiIsPresumedHTMLString } from '@taiga-ui/core/utils/miscellaneous';\nimport { identity, ReplaySubject, of } from 'rxjs';\nimport { switchMap, startWith, catchError, map } from 'rxjs/operators';\nimport { tuiIconsPathFactory } from '@taiga-ui/core/utils';\nfunction TuiSvgComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 3);\n  }\n  if (rf & 2) {\n    const innerHTML_r1 = i0.ɵɵnextContext().tuiLet;\n    i0.ɵɵproperty(\"innerHTML\", innerHTML_r1, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TuiSvgComponent_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 4);\n    i0.ɵɵlistener(\"error\", function TuiSvgComponent_ng_container_0_ng_template_2_Template_svg_error_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onError());\n    });\n    i0.ɵɵelement(1, \"use\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"href\", ctx_r2.use, null, \"xlink\");\n  }\n}\nfunction TuiSvgComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiSvgComponent_ng_container_0_div_1_Template, 1, 1, \"div\", 2)(2, TuiSvgComponent_ng_container_0_ng_template_2_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const useTemplate_r4 = i0.ɵɵreference(3);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isInnerHTML)(\"ngIfElse\", useTemplate_r4);\n  }\n}\nconst TUI_DEPRECATED_ICONS = {\n  tuiIconAttach: 'tuiIconPaperclip',\n  tuiIconAttention: 'tuiIconAlertCircle',\n  tuiIconBackCircle: 'tuiIconArrowLeftCircle',\n  tuiIconCall: 'tuiIconPhone',\n  tuiIconCallIn: 'tuiIconPhoneIncoming',\n  tuiIconCallOut: 'tuiIconPhoneOutgoing',\n  tuiIconCallTransfer: 'tuiIconPhoneForwarded',\n  tuiIconCancel: 'tuiIconXCircle',\n  tuiIconCancelCircle: 'tuiIconSlash',\n  tuiIconCard: 'tuiIconCreditCard',\n  tuiIconCards: 'tuiIconCreditCard',\n  tuiIconChartBar: 'tuiIconBarChart',\n  tuiIconChart: 'tuiIconBarChart',\n  tuiIconCheckList: 'tuiIconClipboard',\n  tuiIconCloseCircle: 'tuiIconXCircle',\n  tuiIconCollapse: 'tuiIconMinimize',\n  tuiIconComment: 'tuiIconMessageSquare',\n  tuiIconCommentFw: 'tuiIconMessageForward',\n  tuiIconCompany: 'tuiIconBriefcase',\n  tuiIconDefaultDoc: 'tuiIconFile',\n  tuiIconDesktop: 'tuiIconMonitor',\n  tuiIconDesktopOff: 'tuiIconMonitorOff',\n  tuiIconDislike: 'tuiIconThumbsDown',\n  tuiIconDone: 'tuiIconCheckCircle',\n  tuiIconDraft: 'tuiIconEdit2',\n  tuiIconEyeOpen: 'tuiIconEye',\n  tuiIconEyeClosed: 'tuiIconEyeOff',\n  tuiIconExpand: 'tuiIconMaximize',\n  tuiIconExternal: 'tuiIconExternalLink',\n  tuiIconFrame: 'tuiIconLayout',\n  tuiIconGeo: 'tuiIconMapPin',\n  tuiIconHeartFilled: 'tuiIconHeart',\n  tuiIconHide: 'tuiIconEyeOff',\n  tuiIconImg: 'tuiIconImage',\n  tuiIconInfoCircle: 'tuiIconInfo',\n  tuiIconLike: 'tuiIconThumbsUp',\n  tuiIconLockOpen: 'tuiIconUnlock',\n  tuiIconMobile: 'tuiIconSmartphone',\n  tuiIconMoreHor: 'tuiIconMoreHorizontal',\n  tuiIconMoreVer: 'tuiIconMoreVertical',\n  tuiIconMoreVert: 'tuiIconMoreVertical',\n  tuiIconPicture: 'tuiIconImage',\n  tuiIconPin: 'tuiIconMapPin',\n  tuiIconPrint: 'tuiIconPrinter',\n  tuiIconRefresh: 'tuiIconRefreshCw',\n  tuiIconRemove: 'tuiIconX',\n  tuiIconShow: 'tuiIconEye',\n  tuiIconSound: 'tuiIconVolume',\n  tuiIconSoundOff: 'tuiIconVolumeX',\n  tuiIconStarFilled: 'tuiIconStar',\n  tuiIconStop: 'tuiIconSquare',\n  tuiIconStructure: 'tuiIconGrid',\n  tuiIconTime: 'tuiIconClock',\n  tuiIconTooltip: 'tuiIconHelpCircle',\n  tuiIconViewList: 'tuiIconList',\n  tuiIconWifiOn: 'tuiIconWifi'\n};\nconst TUI_SVG_DEFAULT_OPTIONS = {\n  iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n  path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n  srcProcessor: identity,\n  contentProcessor: tuiSvgLinearGradientProcessor,\n  deprecated: src => {\n    const oldIcon = src.replace('Large', '').replace('Outline', '');\n    const newIcon = TUI_DEPRECATED_ICONS[oldIcon];\n    return newIcon ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead` : '';\n  }\n};\n/**\n * SVG component options\n */\nconst TUI_SVG_OPTIONS = tuiCreateTokenFromFactory(() => ({\n  iconsPlace: inject(TUI_ICONS_PLACE),\n  path: inject(TUI_ICONS_PATH),\n  deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,\n  srcProcessor: inject(TUI_SVG_SRC_PROCESSOR),\n  contentProcessor: inject(TUI_SVG_CONTENT_PROCESSOR)\n}));\nconst TUI_SVG_SRC_INTERCEPTORS = /*#__PURE__*/new InjectionToken('[TUI_SVG_SRC_INTERCEPTORS]');\nfunction tuiSvgSrcInterceptors(interceptor) {\n  return {\n    provide: TUI_SVG_SRC_INTERCEPTORS,\n    useValue: interceptor,\n    multi: true\n  };\n}\nconst tuiSvgOptionsProvider = options => ({\n  provide: TUI_SVG_OPTIONS,\n  deps: [[new SkipSelf(), new Optional(), TUI_SVG_OPTIONS], [new Optional(), TUI_ICONS_PLACE], [new Optional(), TUI_ICONS_PATH], [new Optional(), TUI_SVG_SRC_PROCESSOR], [new Optional(), TUI_SVG_CONTENT_PROCESSOR]],\n  useFactory: (fallback, iconsPlace, path, srcProcessor, contentProcessor) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    return {\n      iconsPlace: (_c = (_b = (_a = options.iconsPlace) !== null && _a !== void 0 ? _a : fallback === null || fallback === void 0 ? void 0 : fallback.iconsPlace) !== null && _b !== void 0 ? _b : iconsPlace) !== null && _c !== void 0 ? _c : TUI_SVG_DEFAULT_OPTIONS.iconsPlace,\n      path: tuiIsString(options.path) ? tuiIconsPathFactory(options.path) : (_f = (_e = (_d = options.path) !== null && _d !== void 0 ? _d : fallback === null || fallback === void 0 ? void 0 : fallback.path) !== null && _e !== void 0 ? _e : path) !== null && _f !== void 0 ? _f : TUI_SVG_DEFAULT_OPTIONS.path,\n      deprecated: (_h = (_g = options.deprecated) !== null && _g !== void 0 ? _g : fallback === null || fallback === void 0 ? void 0 : fallback.deprecated) !== null && _h !== void 0 ? _h : TUI_SVG_DEFAULT_OPTIONS.deprecated,\n      srcProcessor: (_l = (_k = (_j = options.srcProcessor) !== null && _j !== void 0 ? _j : fallback === null || fallback === void 0 ? void 0 : fallback.srcProcessor) !== null && _k !== void 0 ? _k : srcProcessor) !== null && _l !== void 0 ? _l : TUI_SVG_DEFAULT_OPTIONS.srcProcessor,\n      contentProcessor: (_p = (_o = (_m = options.contentProcessor) !== null && _m !== void 0 ? _m : fallback === null || fallback === void 0 ? void 0 : fallback.contentProcessor) !== null && _o !== void 0 ? _o : contentProcessor) !== null && _p !== void 0 ? _p : TUI_SVG_DEFAULT_OPTIONS.contentProcessor\n    };\n  }\n});\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n// TODO: Consider moving to CDK along with SvgService and SvgDefsHostComponent\nlet TuiSvgComponent = /*#__PURE__*/(() => {\n  class TuiSvgComponent {\n    constructor(doc, win, options, srcInterceptors, tuiSanitizer, svgService, staticRequestService, sanitizer, el, baseHref) {\n      this.doc = doc;\n      this.win = win;\n      this.options = options;\n      this.srcInterceptors = srcInterceptors;\n      this.tuiSanitizer = tuiSanitizer;\n      this.svgService = svgService;\n      this.staticRequestService = staticRequestService;\n      this.sanitizer = sanitizer;\n      this.el = el;\n      this.baseHref = baseHref;\n      this.src$ = new ReplaySubject(1);\n      this.icon = '';\n      this.innerHTML$ = this.src$.pipe(switchMap(() => {\n        if (tuiIsString(this.icon)) {\n          return this.isExternal ? this.getExternalIcon(this.icon) : of(this.getSafeHtml(this.icon));\n        }\n        return of(this.icon);\n      }), startWith(''));\n    }\n    set src(src) {\n      var _a;\n      const deprecated = this.options.deprecated(String(src));\n      ngDevMode && tuiAssert.assert(!deprecated, deprecated);\n      this.icon = ((_a = this.srcInterceptors) !== null && _a !== void 0 ? _a : []).reduce((newSrc, interceptor) => interceptor(newSrc, this.options), this.options.srcProcessor(src || ''));\n      this.src$.next();\n    }\n    get src() {\n      return this.icon;\n    }\n    get use() {\n      if (tuiIsString(this.icon)) {\n        return this.icon.includes('.svg#') ? this.icon : this.resolveName(this.icon, this.options.path);\n      }\n      return '';\n    }\n    get isInnerHTML() {\n      return !tuiIsString(this.icon) || this.isSrc || this.isExternal || this.isName && this.isShadowDOM;\n    }\n    get isShadowDOM() {\n      return tuiGetDocumentOrShadowRoot(this.el.nativeElement) !== this.doc;\n    }\n    get isUse() {\n      return this.use.replace(TUI_CACHE_BUSTING_PAYLOAD, '').includes('.svg#');\n    }\n    get isExternal() {\n      return this.isUrl || this.isCrossDomain;\n    }\n    get isUrl() {\n      return tuiIsString(this.icon) && this.icon.replace(TUI_CACHE_BUSTING_PAYLOAD, '').endsWith('.svg');\n    }\n    get isSrc() {\n      return tuiIsString(this.icon) && tuiIsPresumedHTMLString(this.icon);\n    }\n    get isName() {\n      return !this.isUrl && !this.isUse && !this.isSrc;\n    }\n    get isCrossDomain() {\n      const {\n        use,\n        isUse,\n        win\n      } = this;\n      return isUse && use.startsWith('http') && !!win.origin && !use.startsWith(win.origin);\n    }\n    onError(message = MISSING_EXTERNAL_ICON) {\n      const {\n        icon\n      } = this;\n      const event = new CustomEvent(TUI_ICON_ERROR, {\n        bubbles: true,\n        detail: {\n          message,\n          icon: icon\n        }\n      });\n      ngDevMode && tuiAssert.assert(false, message, icon);\n      this.el.nativeElement.dispatchEvent(event);\n    }\n    resolveName(name, iconsPath) {\n      return iconsPath(name, this.baseHref);\n    }\n    getSafeHtml(src) {\n      return this.isSrc ? this.sanitize(src) : this.process(src);\n    }\n    process(src) {\n      const icon = this.svgService.getOriginal(src);\n      if (this.isName && !icon && !!src) {\n        this.onError(UNDEFINED_NAMED_ICON);\n      }\n      // Empty line for innerHTML when icon is shown through USE tag\n      return !this.isShadowDOM || !this.isName ? '' : this.sanitize(icon || '');\n    }\n    sanitize(src) {\n      src = this.options.contentProcessor(src);\n      return this.tuiSanitizer && tuiIsString(src) ? this.sanitizer.bypassSecurityTrustHtml(this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '') : src;\n    }\n    getExternalIcon(src) {\n      const url = src.includes('.svg') ? src : this.use;\n      return this.staticRequestService.request(url).pipe(catchError(() => {\n        this.onError(FAILED_EXTERNAL_ICON);\n        return of('');\n      }), map(response => this.sanitize(response.replace('<svg', '<svg focusable=\"false\"'))));\n    }\n  }\n  TuiSvgComponent.ɵfac = function TuiSvgComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiSvgComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(WINDOW), i0.ɵɵdirectiveInject(TUI_SVG_OPTIONS), i0.ɵɵdirectiveInject(TUI_SVG_SRC_INTERCEPTORS, 8), i0.ɵɵdirectiveInject(TUI_SANITIZER, 8), i0.ɵɵdirectiveInject(TuiSvgService), i0.ɵɵdirectiveInject(TuiStaticRequestService), i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(TUI_BASE_HREF));\n  };\n  TuiSvgComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiSvgComponent,\n    selectors: [[\"tui-svg\"]],\n    inputs: {\n      src: \"src\"\n    },\n    standalone: false,\n    decls: 2,\n    vars: 3,\n    consts: [[\"useTemplate\", \"\"], [4, \"tuiLet\"], [\"class\", \"t-src\", 3, \"innerHTML\", 4, \"ngIf\", \"ngIfElse\"], [1, \"t-src\", 3, \"innerHTML\"], [\"focusable\", \"false\", \"height\", \"100%\", \"version\", \"1.1\", \"width\", \"100%\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"t-svg\", 3, \"error\"]],\n    template: function TuiSvgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiSvgComponent_ng_container_0_Template, 4, 2, \"ng-container\", 1);\n        i0.ɵɵpipe(1, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.innerHTML$));\n      }\n    },\n    dependencies: [i1.TuiLetDirective, i2.NgIf, i2.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:inline-flex;vertical-align:middle;flex-shrink:0;align-items:center;justify-content:center;line-height:0;height:1.5rem;width:1.5rem;fill:transparent;stroke:transparent;font-size:1rem}.t-src[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;align-items:center;justify-content:center}.t-svg[_ngcontent-%COMP%]{overflow:visible}\"],\n    changeDetection: 0\n  });\n  __decorate([tuiPure], TuiSvgComponent.prototype, \"resolveName\", null);\n  return TuiSvgComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiSvgModule = /*#__PURE__*/(() => {\n  class TuiSvgModule {}\n  TuiSvgModule.ɵfac = function TuiSvgModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiSvgModule)();\n  };\n  TuiSvgModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiSvgModule\n  });\n  TuiSvgModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiLetModule]]\n  });\n  return TuiSvgModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_DEPRECATED_ICONS, TUI_SVG_DEFAULT_OPTIONS, TUI_SVG_OPTIONS, TUI_SVG_SRC_INTERCEPTORS, TuiSvgComponent, TuiSvgModule, tuiSvgOptionsProvider, tuiSvgSrcInterceptors };\n//# sourceMappingURL=taiga-ui-core-components-svg.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}