{"ast":null,"code":"import { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk';\nimport { TuiAppearance } from '@taiga-ui/core/enums';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Inject, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i1 from '@taiga-ui/core/components/svg';\nimport { TuiSvgModule } from '@taiga-ui/core/components/svg';\nimport * as i2 from '@taiga-ui/core/directives/wrapper';\nimport { TuiWrapperModule } from '@taiga-ui/core/directives/wrapper';\nimport * as i3 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n\n/** Default values for the checkbox options. */\nconst _c0 = [\"*\"];\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nfunction TuiPrimitiveCheckboxComponent_tui_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 2);\n  }\n  if (rf & 2) {\n    const src_r1 = ctx.polymorpheusOutlet;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-mark_on\", !ctx_r1.empty);\n    i0.ɵɵproperty(\"src\", src_r1);\n  }\n}\nconst TUI_CHECKBOX_DEFAULT_OPTIONS = {\n  size: 'm',\n  appearances: {\n    unchecked: TuiAppearance.Outline,\n    checked: TuiAppearance.Primary,\n    indeterminate: TuiAppearance.Primary\n  },\n  icons: {\n    checked: ({\n      $implicit\n    }) => $implicit === 'm' ? 'tuiIconCheck' : 'tuiIconCheckLarge',\n    indeterminate: ({\n      $implicit\n    }) => $implicit === 'm' ? 'tuiIconMinus' : 'tuiIconMinusLarge'\n  }\n};\n/**\n * Default parameters for checkbox component\n */\nconst TUI_CHECKBOX_OPTIONS = tuiCreateToken(TUI_CHECKBOX_DEFAULT_OPTIONS);\nfunction tuiCheckboxOptionsProvider(options) {\n  return tuiProvideOptions(TUI_CHECKBOX_OPTIONS, options, TUI_CHECKBOX_DEFAULT_OPTIONS);\n}\nlet TuiPrimitiveCheckboxComponent = /*#__PURE__*/(() => {\n  class TuiPrimitiveCheckboxComponent {\n    constructor(options) {\n      this.options = options;\n      this.size = this.options.size;\n      this.disabled = false;\n      this.focused = false;\n      this.hovered = false;\n      this.pressed = false;\n      this.invalid = false;\n      this.icon = this.options.icons.checked;\n      this.value = false;\n    }\n    set valueSetter(value) {\n      if (value !== false) {\n        this.setCurrentIcon(value);\n      }\n      this.value = value;\n    }\n    get appearance() {\n      switch (this.value) {\n        case false:\n          return this.options.appearances.unchecked;\n        case true:\n          return this.options.appearances.checked;\n        default:\n          return this.options.appearances.indeterminate;\n      }\n    }\n    get empty() {\n      return this.value === false;\n    }\n    setCurrentIcon(value) {\n      this.icon = value === null ? this.options.icons.indeterminate : this.options.icons.checked;\n    }\n  }\n  TuiPrimitiveCheckboxComponent.ɵfac = function TuiPrimitiveCheckboxComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPrimitiveCheckboxComponent)(i0.ɵɵdirectiveInject(TUI_CHECKBOX_OPTIONS));\n  };\n  TuiPrimitiveCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiPrimitiveCheckboxComponent,\n    selectors: [[\"tui-primitive-checkbox\"]],\n    hostVars: 1,\n    hostBindings: function TuiPrimitiveCheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      disabled: \"disabled\",\n      focused: \"focused\",\n      hovered: \"hovered\",\n      pressed: \"pressed\",\n      invalid: \"invalid\",\n      valueSetter: [0, \"value\", \"valueSetter\"]\n    },\n    standalone: false,\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 10,\n    consts: [[\"tuiWrapper\", \"\", 3, \"active\", \"appearance\", \"disabled\", \"focus\", \"hover\", \"invalid\"], [\"class\", \"t-mark\", 3, \"t-mark_on\", \"src\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [1, \"t-mark\", 3, \"src\"]],\n    template: function TuiPrimitiveCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TuiPrimitiveCheckboxComponent_tui_svg_1_Template, 1, 3, \"tui-svg\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"active\", ctx.pressed)(\"appearance\", ctx.appearance)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused)(\"hover\", ctx.hovered)(\"invalid\", ctx.invalid);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"polymorpheusOutlet\", ctx.icon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(8, _c1, ctx.size));\n      }\n    },\n    dependencies: [i1.TuiSvgComponent, i2.TuiWrapperDirective, i3.PolymorpheusOutletDirective],\n    styles: [\"[_nghost-%COMP%]{display:block;font-size:0;flex-shrink:0}[data-size=m][_nghost-%COMP%]{width:1rem;height:1rem;border-radius:var(--tui-radius-xs)}[data-size=l][_nghost-%COMP%]{width:1.5rem;height:1.5rem;border-radius:var(--tui-radius-s)}.t-mark[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:block;width:100%;height:100%;transform:scale(0)}.t-mark_on[_ngcontent-%COMP%]{transform:scale(1)}\"],\n    changeDetection: 0\n  });\n  return TuiPrimitiveCheckboxComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiPrimitiveCheckboxModule = /*#__PURE__*/(() => {\n  class TuiPrimitiveCheckboxModule {}\n  TuiPrimitiveCheckboxModule.ɵfac = function TuiPrimitiveCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPrimitiveCheckboxModule)();\n  };\n  TuiPrimitiveCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiPrimitiveCheckboxModule\n  });\n  TuiPrimitiveCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[TuiSvgModule, TuiWrapperModule, PolymorpheusModule]]\n  });\n  return TuiPrimitiveCheckboxModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_CHECKBOX_DEFAULT_OPTIONS, TUI_CHECKBOX_OPTIONS, TuiPrimitiveCheckboxComponent, TuiPrimitiveCheckboxModule, tuiCheckboxOptionsProvider };\n//# sourceMappingURL=taiga-ui-core-components-primitive-checkbox.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}