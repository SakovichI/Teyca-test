{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, AbstractTuiNullableControl, TUI_DEFAULT_IDENTITY_MATCHER, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule } from '@taiga-ui/cdk';\nimport * as i4 from '@taiga-ui/kit/components/radio-group';\nimport { TuiRadioGroupComponent } from '@taiga-ui/kit/components/radio-group';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiAppearance, TuiWrapperModule } from '@taiga-ui/core';\nimport { CommonModule } from '@angular/common';\n\n/** Default values for the checkbox options. */\nconst _c0 = [\"focusableElement\"];\nconst TUI_RADIO_DEFAULT_OPTIONS = {\n  size: 'm',\n  appearances: {\n    unchecked: TuiAppearance.Outline,\n    checked: TuiAppearance.Primary\n  }\n};\n/**\n * Default parameters for Radio component\n */\nconst TUI_RADIO_OPTIONS = tuiCreateToken(TUI_RADIO_DEFAULT_OPTIONS);\nfunction tuiRadioOptionsProvider(options) {\n  return tuiProvideOptions(TUI_RADIO_OPTIONS, options, TUI_RADIO_DEFAULT_OPTIONS);\n}\nlet TuiRadioComponent = /*#__PURE__*/(() => {\n  class TuiRadioComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, options, radioGroup) {\n      super(control, cdr);\n      this.options = options;\n      this.radioGroup = radioGroup;\n      this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;\n      this.name = null;\n      this.size = this.options.size;\n      this.pseudoDisabled = false;\n    }\n    get appearance() {\n      return this.checked ? this.options.appearances.checked : this.options.appearances.unchecked;\n    }\n    get computedDisabled() {\n      return this.disabled || this.pseudoDisabled;\n    }\n    get nativeFocusableElement() {\n      return !this.focusableElement || this.computedDisabled ? null : this.focusableElement.nativeElement;\n    }\n    get focused() {\n      return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get checked() {\n      return this.value === null ? this.item === null : this.item !== undefined && this.item !== null && this.identityMatcher(this.value, this.item);\n    }\n    get computedName() {\n      return this.name || this.radioGroupName || this.controlName || '';\n    }\n    get isFocusable() {\n      return !this.readOnly && this.computedFocusable;\n    }\n    onChecked(checked) {\n      if (checked) {\n        this.value = this.item !== undefined ? this.item : this.fallbackValue;\n      }\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    onFocusVisible(focusVisible) {\n      this.updateFocusVisible(focusVisible);\n    }\n    get radioGroupName() {\n      return this.radioGroup === null ? null : this.radioGroup.name;\n    }\n  }\n  TuiRadioComponent.ɵfac = function TuiRadioComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_RADIO_OPTIONS), i0.ɵɵdirectiveInject(TuiRadioGroupComponent, 8));\n  };\n  TuiRadioComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiRadioComponent,\n    selectors: [[\"tui-radio\"]],\n    viewQuery: function TuiRadioComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusableElement = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function TuiRadioComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n        i0.ɵɵclassProp(\"_disabled\", ctx.computedDisabled);\n      }\n    },\n    inputs: {\n      item: \"item\",\n      identityMatcher: \"identityMatcher\",\n      name: \"name\",\n      size: \"size\",\n      pseudoDisabled: \"pseudoDisabled\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiRadioComponent), tuiAsControl(TuiRadioComponent)]), i0.ɵɵInheritDefinitionFeature],\n    decls: 4,\n    vars: 13,\n    consts: [[\"focusableElement\", \"\"], [\"tuiWrapper\", \"\", 3, \"active\", \"appearance\", \"disabled\", \"focus\", \"hover\", \"invalid\"], [1, \"t-mark\"], [\"type\", \"radio\", 1, \"t-native\", 3, \"tuiCheckedChange\", \"tuiFocusedChange\", \"tuiFocusVisibleChange\", \"disabled\", \"id\", \"tuiChecked\", \"tuiFocusable\"]],\n    template: function TuiRadioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1);\n        i0.ɵɵelement(1, \"div\", 2);\n        i0.ɵɵelementStart(2, \"input\", 3, 0);\n        i0.ɵɵlistener(\"tuiCheckedChange\", function TuiRadioComponent_Template_input_tuiCheckedChange_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onChecked($event));\n        })(\"tuiFocusedChange\", function TuiRadioComponent_Template_input_tuiFocusedChange_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocused($event));\n        })(\"tuiFocusVisibleChange\", function TuiRadioComponent_Template_input_tuiFocusVisibleChange_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocusVisible($event));\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"active\", ctx.pseudoActive)(\"appearance\", ctx.appearance)(\"disabled\", ctx.computedDisabled)(\"focus\", ctx.computedFocusVisible)(\"hover\", ctx.pseudoHover)(\"invalid\", ctx.computedInvalid);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"t-mark_visible\", ctx.checked);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"id\", ctx.id)(\"tuiChecked\", ctx.checked)(\"tuiFocusable\", ctx.isFocusable);\n        i0.ɵɵattribute(\"name\", ctx.computedName);\n      }\n    },\n    dependencies: [i1.TuiWrapperDirective, i2.TuiCheckedDirective, i2.TuiFocusableDirective, i2.TuiFocusedDirective, i2.TuiFocusVisibleDirective],\n    styles: [\"[_nghost-%COMP%]{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;flex-shrink:0;border-radius:100%}[data-size=m][_nghost-%COMP%]{width:1rem;height:1rem}[data-size=l][_nghost-%COMP%]{width:1.5rem;height:1.5rem}._readonly[_nghost-%COMP%]{pointer-events:none}.t-mark[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;background-color:currentColor;border-radius:100%;transform:scale(0)}.t-mark_visible[_ngcontent-%COMP%]{transform:scale(1)}[data-size=m][_nghost-%COMP%]   .t-mark[_ngcontent-%COMP%]{margin:.25rem;width:.5rem;height:.5rem}[data-size=l][_nghost-%COMP%]   .t-mark[_ngcontent-%COMP%]{margin:.4375rem;width:.625rem;height:.625rem}.t-native[_ngcontent-%COMP%]{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.t-native[_ngcontent-%COMP%]:-webkit-autofill, .t-native[_ngcontent-%COMP%]:-webkit-autofill:hover, .t-native[_ngcontent-%COMP%]:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}._disabled[_nghost-%COMP%]   .t-native[_ngcontent-%COMP%]{cursor:default}\"],\n    changeDetection: 0\n  });\n  return TuiRadioComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiRadioModule = /*#__PURE__*/(() => {\n  class TuiRadioModule {}\n  TuiRadioModule.ɵfac = function TuiRadioModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioModule)();\n  };\n  TuiRadioModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiRadioModule\n  });\n  TuiRadioModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule, TuiWrapperModule]]\n  });\n  return TuiRadioModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_RADIO_DEFAULT_OPTIONS, TUI_RADIO_OPTIONS, TuiRadioComponent, TuiRadioModule, tuiRadioOptionsProvider };\n//# sourceMappingURL=taiga-ui-kit-components-radio.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}