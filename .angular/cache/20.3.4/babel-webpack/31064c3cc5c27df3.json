{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i6 from '@taiga-ui/cdk';\nimport { TuiMonth, ALWAYS_FALSE_HANDLER, TUI_FIRST_DAY, TUI_LAST_DAY, TuiDay, TUI_LAST_DISPLAYED_DAY, tuiNullableSame, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport { TUI_DEFAULT_MARKER_HANDLER } from '@taiga-ui/core/constants';\nimport * as i1 from '@taiga-ui/core/components/scrollbar';\nimport { TuiScrollbarModule } from '@taiga-ui/core/components/scrollbar';\nimport * as i2 from '@taiga-ui/core/components/primitive-year-picker';\nimport { TuiPrimitiveYearPickerModule } from '@taiga-ui/core/components/primitive-year-picker';\nimport * as i3 from '@taiga-ui/core/internal/primitive-year-month-pagination';\nimport { TuiPrimitiveYearMonthPaginationModule } from '@taiga-ui/core/internal/primitive-year-month-pagination';\nimport * as i4 from '@taiga-ui/core/components/primitive-calendar';\nimport { TuiPrimitiveCalendarModule } from '@taiga-ui/core/components/primitive-calendar';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction TuiCalendarComponent_tui_scrollbar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-scrollbar\", 2)(1, \"tui-primitive-year-picker\", 3);\n    i0.ɵɵlistener(\"yearClick\", function TuiCalendarComponent_tui_scrollbar_0_Template_tui_primitive_year_picker_yearClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPickerYearClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"initialItem\", ctx_r1.month)(\"max\", ctx_r1.computedMax)(\"min\", ctx_r1.computedMin)(\"value\", ctx_r1.value);\n  }\n}\nfunction TuiCalendarComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-primitive-year-month-pagination\", 4);\n    i0.ɵɵlistener(\"valueChange\", function TuiCalendarComponent_ng_template_1_Template_tui_primitive_year_month_pagination_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPaginationValueChange($event));\n    })(\"yearClick\", function TuiCalendarComponent_ng_template_1_Template_tui_primitive_year_month_pagination_yearClick_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPaginationYearClick());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"tui-primitive-calendar\", 5);\n    i0.ɵɵpipe(2, \"tuiMapper\");\n    i0.ɵɵlistener(\"dayClick\", function TuiCalendarComponent_ng_template_1_Template_tui_primitive_calendar_dayClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDayClick($event));\n    })(\"hoveredItemChange\", function TuiCalendarComponent_ng_template_1_Template_tui_primitive_calendar_hoveredItemChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onHoveredItemChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"max\", ctx_r1.computedMaxViewedMonth)(\"min\", ctx_r1.computedMinViewedMonth)(\"value\", ctx_r1.month);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabledItemHandler\", i0.ɵɵpipeBind4(2, 9, ctx_r1.disabledItemHandler, ctx_r1.disabledItemHandlerMapper, ctx_r1.computedMin, ctx_r1.computedMax))(\"hoveredItem\", ctx_r1.hoveredItem)(\"markerHandler\", ctx_r1.markerHandler)(\"month\", ctx_r1.month)(\"showAdjacent\", ctx_r1.showAdjacent)(\"value\", ctx_r1.value);\n  }\n}\nlet TuiCalendarComponent = /*#__PURE__*/(() => {\n  class TuiCalendarComponent {\n    constructor() {\n      this.day = null;\n      this.view = 'month';\n      this.month = TuiMonth.currentLocal();\n      this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n      this.min = TUI_FIRST_DAY;\n      this.max = TUI_LAST_DAY;\n      this.minViewedMonth = TUI_FIRST_DAY;\n      this.maxViewedMonth = TUI_LAST_DAY;\n      this.hoveredItem = null;\n      this.showAdjacent = true;\n      this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;\n      this.dayClick = new EventEmitter();\n      this.monthChange = new EventEmitter();\n      this.hoveredItemChange = new EventEmitter();\n      this.disabledItemHandlerMapper = (disabledItemHandler, min, max) => item => item.dayBefore(min) || item.dayAfter(max) || disabledItemHandler(item);\n    }\n    set initialView(view) {\n      this.view = view;\n    }\n    set value(value) {\n      this.day = value;\n      if (this.showAdjacent && value instanceof TuiDay && value.dayBefore(TUI_LAST_DISPLAYED_DAY)) {\n        this.month = value;\n      }\n    }\n    get value() {\n      return this.day;\n    }\n    get isInYearView() {\n      return this.view === 'year';\n    }\n    get computedMin() {\n      var _a;\n      return (_a = this.min) !== null && _a !== void 0 ? _a : TUI_FIRST_DAY;\n    }\n    get computedMax() {\n      var _a;\n      return (_a = this.max) !== null && _a !== void 0 ? _a : TUI_LAST_DAY;\n    }\n    get computedMinViewedMonth() {\n      var _a;\n      const min = this.computedMin;\n      const minViewed = (_a = this.minViewedMonth) !== null && _a !== void 0 ? _a : TUI_FIRST_DAY;\n      return minViewed.monthSameOrAfter(min) ? minViewed : min;\n    }\n    get computedMaxViewedMonth() {\n      var _a;\n      const max = this.computedMax;\n      const maxViewed = (_a = this.maxViewedMonth) !== null && _a !== void 0 ? _a : TUI_LAST_DAY;\n      return maxViewed.monthSameOrBefore(max) ? maxViewed : max;\n    }\n    onPaginationYearClick() {\n      this.view = 'year';\n    }\n    onPickerYearClick({\n      year\n    }) {\n      this.view = 'month';\n      this.updateViewedMonth(new TuiMonth(year, this.month.month));\n    }\n    onPaginationValueChange(month) {\n      this.updateViewedMonth(month);\n    }\n    onDayClick(day) {\n      this.dayClick.emit(day);\n    }\n    onHoveredItemChange(day) {\n      this.updateHoveredDay(day);\n    }\n    updateViewedMonth(month) {\n      if (this.month.monthSame(month)) {\n        return;\n      }\n      this.month = month;\n      this.monthChange.emit(month);\n    }\n    updateHoveredDay(day) {\n      if (tuiNullableSame(this.hoveredItem, day, (a, b) => a.daySame(b))) {\n        return;\n      }\n      this.hoveredItem = day;\n      this.hoveredItemChange.emit(day);\n    }\n  }\n  TuiCalendarComponent.ɵfac = function TuiCalendarComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiCalendarComponent)();\n  };\n  TuiCalendarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiCalendarComponent,\n    selectors: [[\"tui-calendar\"]],\n    inputs: {\n      initialView: \"initialView\",\n      month: \"month\",\n      disabledItemHandler: \"disabledItemHandler\",\n      min: \"min\",\n      max: \"max\",\n      minViewedMonth: \"minViewedMonth\",\n      maxViewedMonth: \"maxViewedMonth\",\n      hoveredItem: \"hoveredItem\",\n      showAdjacent: \"showAdjacent\",\n      markerHandler: \"markerHandler\",\n      value: \"value\"\n    },\n    outputs: {\n      dayClick: \"dayClick\",\n      monthChange: \"monthChange\",\n      hoveredItemChange: \"hoveredItemChange\"\n    },\n    standalone: false,\n    decls: 3,\n    vars: 2,\n    consts: [[\"calendar\", \"\"], [\"automation-id\", \"tui-calendar__scrollbar\", \"class\", \"t-scrollbar\", 4, \"ngIf\", \"ngIfElse\"], [\"automation-id\", \"tui-calendar__scrollbar\", 1, \"t-scrollbar\"], [\"automation-id\", \"tui-calendar__year\", 3, \"yearClick\", \"initialItem\", \"max\", \"min\", \"value\"], [\"automation-id\", \"tui-calendar__pagination\", 1, \"t-pagination\", 3, \"valueChange\", \"yearClick\", \"max\", \"min\", \"value\"], [\"automation-id\", \"tui-calendar__calendar\", 3, \"dayClick\", \"hoveredItemChange\", \"disabledItemHandler\", \"hoveredItem\", \"markerHandler\", \"month\", \"showAdjacent\", \"value\"]],\n    template: function TuiCalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiCalendarComponent_tui_scrollbar_0_Template, 2, 4, \"tui-scrollbar\", 1)(1, TuiCalendarComponent_ng_template_1_Template, 3, 14, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const calendar_r4 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInYearView)(\"ngIfElse\", calendar_r4);\n      }\n    },\n    dependencies: [i1.TuiScrollbarComponent, i2.TuiPrimitiveYearPickerComponent, i3.TuiPrimitiveYearMonthPaginationComponent, i4.TuiPrimitiveCalendarComponent, i5.NgIf, i6.TuiMapperPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;height:18.25rem;width:15.75rem;padding:1rem 1.125rem;box-sizing:content-box}.t-scrollbar[_ngcontent-%COMP%]{height:18.25rem;width:16.875rem}.t-pagination[_ngcontent-%COMP%]{margin-bottom:1rem}\"],\n    changeDetection: 0\n  });\n  return TuiCalendarComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiCalendarModule = /*#__PURE__*/(() => {\n  class TuiCalendarModule {}\n  TuiCalendarModule.ɵfac = function TuiCalendarModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiCalendarModule)();\n  };\n  TuiCalendarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiCalendarModule\n  });\n  TuiCalendarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiPrimitiveYearMonthPaginationModule, TuiPrimitiveCalendarModule, TuiPrimitiveYearPickerModule, TuiScrollbarModule, TuiMapperPipeModule]]\n  });\n  return TuiCalendarModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCalendarComponent, TuiCalendarModule };\n//# sourceMappingURL=taiga-ui-core-components-calendar.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}