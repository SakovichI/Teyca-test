{"ast":null,"code":"import { AsyncPipe } from '@angular/common';\nimport { input } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TuiErrorModule, TuiLabelModule, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport { TuiFieldErrorPipeModule, TuiInputModule, TuiInputPasswordModule, TuiInputPhoneModule } from '@taiga-ui/kit';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@taiga-ui/kit\";\nimport * as i3 from \"@taiga-ui/core\";\nconst _c0 = () => [];\nfunction ClientsUpsertDialogFormComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\")(3, \"tui-input\", 2);\n    i0.ɵɵtext(4, \" \\u0418\\u043C\\u044F \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"tui-error\", 3);\n    i0.ɵɵpipe(6, \"tuiFieldError\");\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\")(9, \"tui-input\", 4);\n    i0.ɵɵtext(10, \" \\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"tui-error\", 5);\n    i0.ɵɵpipe(12, \"tuiFieldError\");\n    i0.ɵɵpipe(13, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 1)(15, \"label\")(16, \"tui-input\", 6);\n    i0.ɵɵtext(17, \" \\u041F\\u043E\\u043B \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"tui-error\", 7);\n    i0.ɵɵpipe(19, \"tuiFieldError\");\n    i0.ɵɵpipe(20, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"label\")(22, \"tui-input\", 8);\n    i0.ɵɵtext(23, \" \\u0413\\u043E\\u0440\\u043E\\u0434 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"tui-error\", 9);\n    i0.ɵɵpipe(25, \"tuiFieldError\");\n    i0.ɵɵpipe(26, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"label\")(28, \"tui-input\", 10);\n    i0.ɵɵtext(29, \" \\u041F\\u043E\\u0447\\u0442\\u0430 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"tui-error\", 9);\n    i0.ɵɵpipe(31, \"tuiFieldError\");\n    i0.ɵɵpipe(32, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"label\")(34, \"tui-input-phone\", 11);\n    i0.ɵɵtext(35, \" \\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(36, \"tui-error\", 12);\n    i0.ɵɵpipe(37, \"tuiFieldError\");\n    i0.ɵɵpipe(38, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"formGroup\", ctx);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(7, 15, i0.ɵɵpipeBind1(6, 13, i0.ɵɵpureFunction0(37, _c0))));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(13, 19, i0.ɵɵpipeBind1(12, 17, i0.ɵɵpureFunction0(38, _c0))));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(20, 23, i0.ɵɵpipeBind1(19, 21, i0.ɵɵpureFunction0(39, _c0))));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(26, 27, i0.ɵɵpipeBind1(25, 25, i0.ɵɵpureFunction0(40, _c0))));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(32, 31, i0.ɵɵpipeBind1(31, 29, i0.ɵɵpureFunction0(41, _c0))));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"tuiTextfieldCleaner\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"error\", i0.ɵɵpipeBind1(38, 35, i0.ɵɵpipeBind1(37, 33, i0.ɵɵpureFunction0(42, _c0))));\n  }\n}\nexport let ClientsUpsertDialogFormComponent = /*#__PURE__*/(() => {\n  class ClientsUpsertDialogFormComponent {\n    $form = input.required(...(ngDevMode ? [{\n      debugName: \"$form\",\n      alias: 'form'\n    }] : [{\n      alias: 'form'\n    }]));\n    static ɵfac = function ClientsUpsertDialogFormComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClientsUpsertDialogFormComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClientsUpsertDialogFormComponent,\n      selectors: [[\"app-clients-upsert-dialog-form\"]],\n      inputs: {\n        $form: [1, \"form\", \"$form\"]\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"formGroup\"], [1, \"form-row\"], [\"formControlName\", \"firstName\", \"tuiTextfieldSize\", \"m\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"firstName\", 3, \"error\"], [\"formControlName\", \"lastName\", \"tuiTextfieldSize\", \"m\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"lastName\", 3, \"error\"], [\"formControlName\", \"gender\", \"tuiTextfieldSize\", \"m\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"gender\", 3, \"error\"], [\"formControlName\", \"city\", \"tuiTextfieldSize\", \"m\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"city\", 3, \"error\"], [\"formControlName\", \"email\", \"tuiTextfieldSize\", \"m\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"phone\", \"tuiTextfieldSize\", \"m\", 3, \"tuiTextfieldCleaner\"], [\"formControlName\", \"phone\", 3, \"error\"]],\n      template: function ClientsUpsertDialogFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵconditionalCreate(0, ClientsUpsertDialogFormComponent_Conditional_0_Template, 39, 43, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          let tmp_0_0;\n          i0.ɵɵconditional((tmp_0_0 = ctx.$form()) ? 0 : -1, tmp_0_0);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, TuiInputModule, i2.TuiInputComponent, i2.TuiInputDirective, TuiLabelModule, TuiTextfieldControllerModule, i3.TuiTextfieldCleanerDirective, i3.TuiTextfieldSizeDirective, TuiFieldErrorPipeModule, TuiInputPasswordModule, TuiErrorModule, i3.TuiErrorComponent, TuiInputPhoneModule, i2.TuiInputPhoneComponent, i2.TuiInputPhoneDirective, i2.TuiFieldErrorPipe, AsyncPipe],\n      styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column;gap:var(--spacing-3x)}[_nghost-%COMP%]   .form-row[_ngcontent-%COMP%]{display:flex;gap:var(--spacing-3x)}[_nghost-%COMP%]   .form-row[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{flex:1 1 50%}\"]\n    });\n  }\n  return ClientsUpsertDialogFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}