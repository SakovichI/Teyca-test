{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport * as i4 from '@taiga-ui/cdk';\nimport { AbstractTuiControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, TuiFocusableModule, TuiFocusedModule } from '@taiga-ui/cdk';\nimport { TUI_VALUE_ACCESSOR_PROVIDER } from '@taiga-ui/kit/providers';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@taiga-ui/core';\nimport { TuiMaskAccessorModule } from '@taiga-ui/core';\nconst _c0 = [\"native\"];\nconst _c1 = [\"*\"];\nfunction TuiInputInlineComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nlet TuiInputInlineComponent = /*#__PURE__*/(() => {\n  class TuiInputInlineComponent extends AbstractTuiControl {\n    constructor(control, cdr) {\n      super(control, cdr);\n      this.maxLength = null;\n    }\n    get nativeFocusableElement() {\n      return !this.native ? null : this.native.nativeElement;\n    }\n    get focused() {\n      return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    onValueChange(value) {\n      this.value = value;\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    getFallbackValue() {\n      return '';\n    }\n  }\n  TuiInputInlineComponent.ɵfac = function TuiInputInlineComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputInlineComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef));\n  };\n  TuiInputInlineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputInlineComponent,\n    selectors: [[\"tui-input-inline\"]],\n    viewQuery: function TuiInputInlineComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.native = _t.first);\n      }\n    },\n    inputs: {\n      maxLength: \"maxLength\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TUI_VALUE_ACCESSOR_PROVIDER, tuiAsFocusableItemAccessor(TuiInputInlineComponent)]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 8,\n    consts: [[\"native\", \"\"], [1, \"t-before\", 3, \"textContent\"], [\"automation-id\", \"tui-input-inline__placeholder\", \"class\", \"t-placeholder\", 4, \"ngIf\"], [\"automation-id\", \"tui-input-inline__native\", \"tuiMaskAccessor\", \"\", \"type\", \"text\", 1, \"t-native\", 3, \"ngModelChange\", \"tuiFocusedChange\", \"disabled\", \"id\", \"ngModel\", \"readOnly\", \"tuiFocusable\"], [\"automation-id\", \"tui-input-inline__placeholder\", 1, \"t-placeholder\"]],\n    template: function TuiInputInlineComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"span\", 1);\n        i0.ɵɵtemplate(1, TuiInputInlineComponent_span_1_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelementStart(2, \"input\", 3, 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TuiInputInlineComponent_Template_input_ngModelChange_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onValueChange($event));\n        })(\"tuiFocusedChange\", function TuiInputInlineComponent_Template_input_tuiFocusedChange_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocused($event));\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"textContent\", ctx.value);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.value);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"id\", ctx.id)(\"ngModel\", ctx.value)(\"readOnly\", ctx.readOnly)(\"tuiFocusable\", ctx.focusable);\n        i0.ɵɵattribute(\"maxLength\", ctx.maxLength);\n      }\n    },\n    dependencies: [i1.NgIf, i2.TuiMaskAccessorDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.TuiFocusableDirective, i4.TuiFocusedDirective],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:inline-block;white-space:nowrap;box-sizing:border-box}.t-before[_ngcontent-%COMP%]{padding-right:.02em;margin-left:1px;white-space:pre;visibility:hidden}.t-placeholder[_ngcontent-%COMP%]{display:inline-block;min-width:1px;margin-left:-1px}.t-native[_ngcontent-%COMP%]{position:absolute;top:0;left:0;background-color:transparent;padding:inherit;font:inherit;color:inherit;box-sizing:border-box;width:100%;height:100%;border-width:0;text-align:inherit;letter-spacing:inherit;text-indent:inherit;text-transform:inherit;text-decoration:inherit;outline:none}\"],\n    changeDetection: 0\n  });\n  return TuiInputInlineComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputInlineModule = /*#__PURE__*/(() => {\n  class TuiInputInlineModule {}\n  TuiInputInlineModule.ɵfac = function TuiInputInlineModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputInlineModule)();\n  };\n  TuiInputInlineModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputInlineModule\n  });\n  TuiInputInlineModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, TuiFocusableModule, TuiFocusedModule, TuiMaskAccessorModule]]\n  });\n  return TuiInputInlineModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputInlineComponent, TuiInputInlineModule };\n//# sourceMappingURL=taiga-ui-kit-components-input-inline.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}