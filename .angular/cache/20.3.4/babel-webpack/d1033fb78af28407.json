{"ast":null,"code":"import { TUI_NON_DIGIT_REGEXP, TUI_NON_DIGITS_REGEXP } from '@taiga-ui/core';\nimport { tuiIsString, tuiClamp } from '@taiga-ui/cdk';\nimport { TuiCurrencyCode, TuiCurrency } from '@taiga-ui/addon-commerce/enums';\nconst TUI_EXP_YEAR_MONTH = /^\\d{2}[/|.]\\d{4}$/;\nconst TUI_EXP_SAFARI = /^\\d{1,4}.\\d{1,2}.\\d{1,4}$/;\n/**\n * @deprecated Use {@link https://maskito.dev/kit/date Date} from {@link https://github.com/taiga-family/maskito Maskito} instead\n * TODO: delete in v4.0\n * Correct expiration date text allowing only valid months\n * @internal\n *\n * @returns MM/YY\n */\nfunction tuiCreateAutoCorrectedExpirePipe() {\n  return (conformedValue, {\n    rawValue\n  }) => {\n    // Autofilled with MM/YYYY format\n    if (TUI_EXP_YEAR_MONTH.test(rawValue)) {\n      conformedValue = `${rawValue.slice(0, 2)}/${rawValue.slice(5)}`;\n    }\n    // Autofilled with Safari crazy format\n    if (rawValue.length > 7 && rawValue.length < 11 && TUI_EXP_SAFARI.test(rawValue)) {\n      const array = rawValue.split(TUI_NON_DIGIT_REGEXP);\n      // TODO: investigate why the month is sometimes more than 2-length in safari\n      const month = array[1].slice(2);\n      const year = array.find(({\n        length\n      }) => length === 4);\n      conformedValue = `${'0'.repeat(2 - month.length)}${month}/${year ? year.slice(2) : ''}`;\n    }\n    const indexesOfPipedChars = [];\n    const conformedValueArr = conformedValue.split('');\n    if (parseInt(conformedValueArr[0], 10) > 1) {\n      conformedValueArr[2] = '/';\n      conformedValueArr[1] = conformedValueArr[0];\n      conformedValueArr[0] = '0';\n      indexesOfPipedChars.push(0);\n    }\n    return {\n      value: conformedValueArr.join(''),\n      indexesOfPipedChars\n    };\n  };\n}\nfunction tuiGetCurrencySymbol(currency) {\n  switch (currency) {\n    case TuiCurrency.Ruble:\n    case TuiCurrencyCode.Ruble:\n      return '₽';\n    case TuiCurrency.Dollar:\n    case TuiCurrencyCode.Dollar:\n    case TuiCurrency.MexicanPeso:\n    case TuiCurrencyCode.MexicanPeso:\n      return '$';\n    case TuiCurrency.SingaporeDollar:\n    case TuiCurrencyCode.SingaporeDollar:\n      return 'S$';\n    case TuiCurrency.AustralianDollar:\n    case TuiCurrencyCode.AustralianDollar:\n      return 'A$';\n    case TuiCurrency.BahrainiDinar:\n    case TuiCurrencyCode.BahrainiDinar:\n      return 'BD';\n    case TuiCurrency.CzechKoruna:\n    case TuiCurrencyCode.CzechKoruna:\n      return 'Kč';\n    case TuiCurrency.HongKongDollar:\n    case TuiCurrencyCode.HongKongDollar:\n      return 'HK$';\n    case TuiCurrency.CanadianDollar:\n    case TuiCurrencyCode.CanadianDollar:\n      return 'C$';\n    case TuiCurrency.EastCaribbeanDollar:\n    case TuiCurrencyCode.EastCaribbeanDollar:\n      return 'EC$';\n    case TuiCurrency.Euro:\n    case TuiCurrencyCode.Euro:\n      return '€';\n    case TuiCurrency.Forint:\n    case TuiCurrencyCode.Forint:\n      return 'Ft';\n    case TuiCurrency.Pound:\n    case TuiCurrencyCode.Pound:\n      return '£';\n    case TuiCurrency.Baht:\n    case TuiCurrencyCode.Baht:\n      return '฿';\n    case TuiCurrency.TurkishLira:\n    case TuiCurrencyCode.TurkishLira:\n      return '₺';\n    case TuiCurrency.YuanRenminbi:\n    case TuiCurrencyCode.YuanRenminbi:\n      return 'CN¥';\n    case TuiCurrency.Yen:\n    case TuiCurrencyCode.Yen:\n      return '¥';\n    case TuiCurrency.IsraeliShekel:\n    case TuiCurrencyCode.IsraeliShekel:\n      return '₪';\n    case TuiCurrency.IndianRupee:\n    case TuiCurrencyCode.IndianRupee:\n      return '₹';\n    case TuiCurrency.SwissFranc:\n    case TuiCurrencyCode.SwissFranc:\n      return '₣';\n    case TuiCurrency.ArmenianDram:\n    case TuiCurrencyCode.ArmenianDram:\n      return '֏';\n    case TuiCurrency.Won:\n    case TuiCurrencyCode.Won:\n      return '₩';\n    case TuiCurrency.Tenge:\n    case TuiCurrencyCode.Tenge:\n      return '₸';\n    case TuiCurrency.Hryvnia:\n    case TuiCurrencyCode.Hryvnia:\n      return '₴';\n    case TuiCurrency.UzbekSum:\n    case TuiCurrencyCode.UzbekSum:\n      return \"So'm\";\n    case TuiCurrency.KyrgyzstanSom:\n    case TuiCurrencyCode.KyrgyzstanSom:\n      return 'c';\n    case TuiCurrency.Dirham:\n    case TuiCurrencyCode.Dirham:\n      return 'Dh';\n    case TuiCurrency.TajikistaniSomoni:\n    case TuiCurrencyCode.TajikistaniSomoni:\n      return 'SM';\n    case TuiCurrency.MalaysianRinggit:\n    case TuiCurrencyCode.MalaysianRinggit:\n      return 'RM';\n    case TuiCurrency.BelarusianRuble:\n    case TuiCurrencyCode.BelarusianRuble:\n      return 'Br';\n    case TuiCurrency.GeorgianLari:\n    case TuiCurrencyCode.GeorgianLari:\n      return '₾';\n    case TuiCurrency.AzerbaijaniManat:\n    case TuiCurrencyCode.AzerbaijaniManat:\n      return '₼';\n    case TuiCurrency.SriLankanRupee:\n    case TuiCurrencyCode.SriLankanRupee:\n      return 'Rs.';\n    case TuiCurrency.SerbianDinar:\n    case TuiCurrencyCode.SerbianDinar:\n      return 'DIN';\n    case TuiCurrency.SaudiRiyal:\n    case TuiCurrencyCode.SaudiRiyal:\n      return 'SR';\n    case TuiCurrency.MoldovanLeu:\n    case TuiCurrencyCode.MoldovanLeu:\n      return 'L';\n    case TuiCurrency.MongolianTugrik:\n    case TuiCurrencyCode.MongolianTugrik:\n      return '₮';\n    case TuiCurrency.PolandZloty:\n    case TuiCurrencyCode.PolandZloty:\n      return 'zł';\n    case TuiCurrency.SouthAfricanRand:\n    case TuiCurrencyCode.SouthAfricanRand:\n      return 'R';\n    case TuiCurrency.IranianRial:\n    case TuiCurrencyCode.IranianRial:\n      return 'IR';\n    case TuiCurrency.IndonesianRupiah:\n    case TuiCurrencyCode.IndonesianRupiah:\n      return 'Rp';\n    case TuiCurrency.VietnameseDong:\n    case TuiCurrencyCode.VietnameseDong:\n      return 'đ';\n    case TuiCurrency.NewTurkmenManat:\n    case TuiCurrencyCode.NewTurkmenManat:\n      return 'TMT';\n    case TuiCurrency.BrazilianReal:\n    case TuiCurrencyCode.BrazilianReal:\n      return 'R$';\n    default:\n      return null;\n  }\n}\nfunction stringifyCurrency(currency) {\n  return currency === null || tuiIsString(currency) ? currency || '' : String(currency).padStart(3, '0');\n}\nfunction tuiFormatCurrency(currency) {\n  const stringifiedCurrency = stringifyCurrency(currency);\n  return tuiGetCurrencySymbol(stringifiedCurrency) || stringifiedCurrency;\n}\n\n// cspell:disable\nconst TUI_CODE_DICTIONARY = {\n  [TuiCurrency.Ruble]: TuiCurrencyCode.Ruble,\n  [TuiCurrency.Dollar]: TuiCurrencyCode.Dollar,\n  [TuiCurrency.MexicanPeso]: TuiCurrencyCode.MexicanPeso,\n  [TuiCurrency.MoldovanLeu]: TuiCurrencyCode.MoldovanLeu,\n  [TuiCurrency.PolandZloty]: TuiCurrencyCode.PolandZloty,\n  [TuiCurrency.SingaporeDollar]: TuiCurrencyCode.SingaporeDollar,\n  [TuiCurrency.AustralianDollar]: TuiCurrencyCode.AustralianDollar,\n  [TuiCurrency.HongKongDollar]: TuiCurrencyCode.HongKongDollar,\n  [TuiCurrency.CanadianDollar]: TuiCurrencyCode.CanadianDollar,\n  [TuiCurrency.CzechKoruna]: TuiCurrencyCode.CzechKoruna,\n  [TuiCurrency.EastCaribbeanDollar]: TuiCurrencyCode.EastCaribbeanDollar,\n  [TuiCurrency.Euro]: TuiCurrencyCode.Euro,\n  [TuiCurrency.Forint]: TuiCurrencyCode.Forint,\n  [TuiCurrency.Pound]: TuiCurrencyCode.Pound,\n  [TuiCurrency.Baht]: TuiCurrencyCode.Baht,\n  [TuiCurrency.BahrainiDinar]: TuiCurrencyCode.BahrainiDinar,\n  [TuiCurrency.TurkishLira]: TuiCurrencyCode.TurkishLira,\n  [TuiCurrency.YuanRenminbi]: TuiCurrencyCode.YuanRenminbi,\n  [TuiCurrency.Yen]: TuiCurrencyCode.Yen,\n  [TuiCurrency.IsraeliShekel]: TuiCurrencyCode.IsraeliShekel,\n  [TuiCurrency.IndianRupee]: TuiCurrencyCode.IndianRupee,\n  [TuiCurrency.SwissFranc]: TuiCurrencyCode.SwissFranc,\n  [TuiCurrency.ArmenianDram]: TuiCurrencyCode.ArmenianDram,\n  [TuiCurrency.Won]: TuiCurrencyCode.Won,\n  [TuiCurrency.Tenge]: TuiCurrencyCode.Tenge,\n  [TuiCurrency.Hryvnia]: TuiCurrencyCode.Hryvnia,\n  [TuiCurrency.UzbekSum]: TuiCurrencyCode.UzbekSum,\n  [TuiCurrency.KyrgyzstanSom]: TuiCurrencyCode.KyrgyzstanSom,\n  [TuiCurrency.Dirham]: TuiCurrencyCode.Dirham,\n  [TuiCurrency.TajikistaniSomoni]: TuiCurrencyCode.TajikistaniSomoni,\n  [TuiCurrency.MalaysianRinggit]: TuiCurrencyCode.MalaysianRinggit,\n  [TuiCurrency.BelarusianRuble]: TuiCurrencyCode.BelarusianRuble,\n  [TuiCurrency.GeorgianLari]: TuiCurrencyCode.GeorgianLari,\n  [TuiCurrency.AzerbaijaniManat]: TuiCurrencyCode.AzerbaijaniManat,\n  [TuiCurrency.SriLankanRupee]: TuiCurrencyCode.SriLankanRupee,\n  [TuiCurrency.SerbianDinar]: TuiCurrencyCode.SerbianDinar,\n  [TuiCurrency.SaudiRiyal]: TuiCurrencyCode.SaudiRiyal,\n  [TuiCurrency.MongolianTugrik]: TuiCurrencyCode.MongolianTugrik,\n  [TuiCurrency.SouthAfricanRand]: TuiCurrencyCode.SouthAfricanRand,\n  [TuiCurrency.IranianRial]: TuiCurrencyCode.IranianRial,\n  [TuiCurrency.IndonesianRupiah]: TuiCurrencyCode.IndonesianRupiah,\n  [TuiCurrency.VietnameseDong]: TuiCurrencyCode.VietnameseDong,\n  [TuiCurrency.NewTurkmenManat]: TuiCurrencyCode.NewTurkmenManat,\n  [TuiCurrency.BrazilianReal]: TuiCurrencyCode.BrazilianReal\n};\nfunction tuiGetCodeByCurrency(code) {\n  var _a;\n  return (_a = TUI_CODE_DICTIONARY[code]) !== null && _a !== void 0 ? _a : null;\n}\n\n// cspell:disable\nconst TUI_CURRENCY_DICTIONARY = {\n  [TuiCurrencyCode.Ruble]: TuiCurrency.Ruble,\n  [TuiCurrencyCode.Dollar]: TuiCurrency.Dollar,\n  [TuiCurrencyCode.MexicanPeso]: TuiCurrency.MexicanPeso,\n  [TuiCurrencyCode.MoldovanLeu]: TuiCurrency.MoldovanLeu,\n  [TuiCurrencyCode.PolandZloty]: TuiCurrency.PolandZloty,\n  [TuiCurrencyCode.SingaporeDollar]: TuiCurrency.SingaporeDollar,\n  [TuiCurrencyCode.AustralianDollar]: TuiCurrency.AustralianDollar,\n  [TuiCurrencyCode.HongKongDollar]: TuiCurrency.HongKongDollar,\n  [TuiCurrencyCode.CanadianDollar]: TuiCurrency.CanadianDollar,\n  [TuiCurrencyCode.CzechKoruna]: TuiCurrency.CzechKoruna,\n  [TuiCurrencyCode.EastCaribbeanDollar]: TuiCurrency.EastCaribbeanDollar,\n  [TuiCurrencyCode.Euro]: TuiCurrency.Euro,\n  [TuiCurrencyCode.Forint]: TuiCurrency.Forint,\n  [TuiCurrencyCode.Pound]: TuiCurrency.Pound,\n  [TuiCurrencyCode.Baht]: TuiCurrency.Baht,\n  [TuiCurrencyCode.BahrainiDinar]: TuiCurrency.BahrainiDinar,\n  [TuiCurrencyCode.TurkishLira]: TuiCurrency.TurkishLira,\n  [TuiCurrencyCode.YuanRenminbi]: TuiCurrency.YuanRenminbi,\n  [TuiCurrencyCode.Yen]: TuiCurrency.Yen,\n  [TuiCurrencyCode.IsraeliShekel]: TuiCurrency.IsraeliShekel,\n  [TuiCurrencyCode.IndianRupee]: TuiCurrency.IndianRupee,\n  [TuiCurrencyCode.SwissFranc]: TuiCurrency.SwissFranc,\n  [TuiCurrencyCode.ArmenianDram]: TuiCurrency.ArmenianDram,\n  [TuiCurrencyCode.Won]: TuiCurrency.Won,\n  [TuiCurrencyCode.Tenge]: TuiCurrency.Tenge,\n  [TuiCurrencyCode.Hryvnia]: TuiCurrency.Hryvnia,\n  [TuiCurrencyCode.UzbekSum]: TuiCurrency.UzbekSum,\n  [TuiCurrencyCode.KyrgyzstanSom]: TuiCurrency.KyrgyzstanSom,\n  [TuiCurrencyCode.Dirham]: TuiCurrency.Dirham,\n  [TuiCurrencyCode.TajikistaniSomoni]: TuiCurrency.TajikistaniSomoni,\n  [TuiCurrencyCode.MalaysianRinggit]: TuiCurrency.MalaysianRinggit,\n  [TuiCurrencyCode.BelarusianRuble]: TuiCurrency.BelarusianRuble,\n  [TuiCurrencyCode.GeorgianLari]: TuiCurrency.GeorgianLari,\n  [TuiCurrencyCode.AzerbaijaniManat]: TuiCurrency.AzerbaijaniManat,\n  [TuiCurrencyCode.SriLankanRupee]: TuiCurrency.SriLankanRupee,\n  [TuiCurrencyCode.SerbianDinar]: TuiCurrency.SerbianDinar,\n  [TuiCurrencyCode.SaudiRiyal]: TuiCurrency.SaudiRiyal,\n  [TuiCurrencyCode.MongolianTugrik]: TuiCurrency.MongolianTugrik,\n  [TuiCurrencyCode.SouthAfricanRand]: TuiCurrency.SouthAfricanRand,\n  [TuiCurrencyCode.IranianRial]: TuiCurrency.IranianRial,\n  [TuiCurrencyCode.IndonesianRupiah]: TuiCurrency.IndonesianRupiah,\n  [TuiCurrencyCode.VietnameseDong]: TuiCurrency.VietnameseDong,\n  [TuiCurrencyCode.NewTurkmenManat]: TuiCurrency.NewTurkmenManat,\n  [TuiCurrencyCode.BrazilianReal]: TuiCurrency.BrazilianReal\n};\nfunction tuiGetCurrencyByCode(currency) {\n  var _a;\n  return (_a = TUI_CURRENCY_DICTIONARY[currency]) !== null && _a !== void 0 ? _a : null;\n}\n\n// https://en.wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_(IIN)\nconst TUI_BIN_TABLE = [['mir', 2200, 2204], ['mastercard', 2221, 2720], ['jcb', 3528, 3589], ['amex', 34], ['amex', 37], ['dinersclub', 36], ['electron', 4026], ['electron', 4175], ['electron', 4405], ['electron', 4508], ['electron', 4844], ['electron', 4913], ['electron', 4917], ['visa', 4], ['verve', 506099, 506198], ['verve', 507865, 507964], ['maestro', 5018], ['maestro', 5020], ['maestro', 5038], ['maestro', 5090], ['maestro', 5890], ['maestro', 5893], ['rupay', 508], ['maestro', 50], ['mastercard', 51, 55], ['maestro', 56], ['maestro', 58], ['mastercard', 5], ['maestro', 6000], ['maestro', 6304], ['maestro', 6759, 6763], ['verve', 650002, 650027], ['maestro', 676770], ['maestro', 676774], ['discover', 644, 649], ['discover', 6011], ['rupay', 60], ['unionpay', 62], ['discover', 65], ['maestro', 6], ['rupay', 81, 82], ['uzcard', 8600], ['humo', 9860]];\nfunction tuiGetPaymentSystem(cardNumber, supported) {\n  var _a;\n  if (!cardNumber) {\n    return null;\n  }\n  const row = TUI_BIN_TABLE.find(([paymentSystem, start, end = start]) => {\n    const cardNumberNumeric = Number.parseInt(cardNumber.slice(0, String(start).length), 10);\n    const match = cardNumberNumeric >= start && cardNumberNumeric <= end;\n    return match && (!(supported === null || supported === void 0 ? void 0 : supported.length) || supported.includes(paymentSystem));\n  });\n  return (_a = row === null || row === void 0 ? void 0 : row[0]) !== null && _a !== void 0 ? _a : null;\n}\nfunction tuiIsMaestro(three, two, one) {\n  if (one === 6) {\n    return true;\n  }\n  if (two === 50 || two > 55 && two < 59) {\n    return true;\n  }\n  if (three < 500) {\n    return false;\n  }\n  return three < 510;\n}\nfunction tuiIsMastercard(four, two, one) {\n  if (one === 5) {\n    return true;\n  }\n  if (two < 10) {\n    return false;\n  }\n  if (two > 50 && two < 56) {\n    return true;\n  }\n  if (four < 1000) {\n    return false;\n  }\n  return four > 2220 && four < 2721;\n}\nfunction tuiIsMir(four) {\n  return four > 2199 && four < 2205;\n}\nfunction tuiIsElectron(four) {\n  switch (four) {\n    case 4026:\n    case 4175:\n    case 4405:\n    case 4508:\n    case 4844:\n    case 4913:\n    case 4917:\n      return true;\n    default:\n      return false;\n  }\n}\nfunction tuiIsVisa(one) {\n  return one === 4;\n}\n\n/**\n * Validates card number length using payment system dictionary\n */\nfunction tuiIsCardLengthValid(cardNumber) {\n  const {\n    length\n  } = cardNumber;\n  const paymentSystem = tuiGetPaymentSystem(cardNumber);\n  switch (paymentSystem) {\n    case 'electron':\n      return length === 16;\n    case 'maestro':\n      return length > 11 && length < 20;\n    case 'mastercard':\n    case 'mir':\n      return length > 15 && length < 20;\n    case 'visa':\n      return length > 12 && length < 20;\n    default:\n      return length > 8 && length < 20;\n  }\n}\n\n/**\n * Validates card number using Luhn algorithm\n */\nfunction tuiIsCardNumberValid(value) {\n  const cardNumber = String(value).replace(TUI_NON_DIGITS_REGEXP, '');\n  const {\n    length\n  } = cardNumber;\n  const arr = cardNumber.split('').map((char, index) => {\n    const digit = parseInt(char, 10);\n    if ((index + length) % 2 === 0) {\n      const digitX2 = digit * 2;\n      return digitX2 > 9 ? digitX2 - 9 : digitX2;\n    }\n    return digit;\n  });\n  return !(arr.reduce((a, b) => a + b, 0) % 10);\n}\nfunction tuiIsExpireValid(expire, today = new Date()) {\n  const currentMonth = today.getMonth() + 1;\n  const currentYear = today.getFullYear() - 2000;\n  const expireMonth = tuiClamp(parseInt(expire.slice(0, 2), 10), 1, 12);\n  const expireYear = tuiClamp(parseInt(expire.slice(-2), 10), 0, 99);\n  return expireYear > currentYear || currentYear === expireYear && expireMonth >= currentMonth;\n}\n\n// TODO: Make it a token in 4.0, think about mono icons for card component\nconst TUI_PAYMENT_SYSTEM_ICONS = {\n  mir: 'tuiIconMirMono',\n  visa: 'tuiIconVisaMono',\n  electron: 'tuiIconElectronMono',\n  mastercard: 'tuiIconMastercard',\n  maestro: 'tuiIconMaestro',\n  amex: 'tuiIconAmex',\n  dinersclub: 'tuiIconDinersClub',\n  discover: 'tuiIconDiscover',\n  humo: 'tuiIconHumo',\n  jcb: 'tuiIconJCB',\n  rupay: 'tuiIconRuPay',\n  unionpay: 'tuiIconUnionPay',\n  uzcard: 'tuiIconUzcard',\n  verve: 'tuiIconVerve'\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_BIN_TABLE, TUI_CODE_DICTIONARY, TUI_CURRENCY_DICTIONARY, TUI_PAYMENT_SYSTEM_ICONS, tuiCreateAutoCorrectedExpirePipe, tuiFormatCurrency, tuiGetCodeByCurrency, tuiGetCurrencyByCode, tuiGetCurrencySymbol, tuiGetPaymentSystem, tuiIsCardLengthValid, tuiIsCardNumberValid, tuiIsElectron, tuiIsExpireValid, tuiIsMaestro, tuiIsMastercard, tuiIsMir, tuiIsVisa };\n//# sourceMappingURL=taiga-ui-addon-commerce-utils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}