{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport { tuiCreateToken, tuiProvideOptions, AbstractTuiControl, tuiAsFocusableItemAccessor, tuiAsControl, tuiPure } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiWrapperModule, TuiSvgModule, TuiHintModule, TuiPrimitiveTextfieldModule, TuiAlertModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_VALUE_ACCESSOR_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_COPY_TEXTS } from '@taiga-ui/kit/tokens';\nimport * as i5 from 'rxjs';\nimport { BehaviorSubject, of, merge, timer } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport * as i2 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputCopyComponent_ng_template_3_tui_svg_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-svg\", 4);\n    i0.ɵɵlistener(\"click\", function TuiInputCopyComponent_ng_template_3_tui_svg_0_Template_tui_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.copy());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const src_r4 = ctx.polymorpheusOutlet;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    const hint_r5 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.value)(\"src\", src_r4)(\"tuiHint\", hint_r5)(\"tuiHintAppearance\", ctx_r2.messageAppearance)(\"tuiHintDirection\", ctx_r2.messageDirection);\n  }\n}\nfunction TuiInputCopyComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputCopyComponent_ng_template_3_tui_svg_0_Template, 1, 5, \"tui-svg\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.icon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r2.size));\n  }\n}\nfunction TuiInputCopyComponent_ng_template_5_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r6 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r6, \" \");\n  }\n}\nfunction TuiInputCopyComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputCopyComponent_ng_template_5_ng_container_0_Template, 2, 1, \"ng-container\", 5);\n    i0.ɵɵpipe(1, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", i0.ɵɵpipeBind1(1, 1, ctx_r2.hintText$));\n  }\n}\nconst TUI_INPUT_COPY_DEFAULT_OPTIONS = {\n  successMessage: '',\n  messageDirection: 'bottom-left',\n  messageAppearance: '',\n  icon: ({\n    $implicit\n  }) => $implicit === 's' ? 'tuiIconCopy' : 'tuiIconCopyLarge'\n};\nconst TUI_INPUT_COPY_OPTIONS = tuiCreateToken(TUI_INPUT_COPY_DEFAULT_OPTIONS);\nfunction tuiInputCopyOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_COPY_OPTIONS, options, TUI_INPUT_COPY_DEFAULT_OPTIONS);\n}\nlet TuiInputCopyComponent = /*#__PURE__*/(() => {\n  class TuiInputCopyComponent extends AbstractTuiControl {\n    constructor(control, cdr, doc, copyTexts$, options, textfieldSize) {\n      super(control, cdr);\n      this.doc = doc;\n      this.copyTexts$ = copyTexts$;\n      this.options = options;\n      this.textfieldSize = textfieldSize;\n      this.copied$ = new BehaviorSubject(false);\n      this.successMessage = this.options.successMessage;\n      this.messageDirection = this.options.messageDirection;\n      this.messageAppearance = this.options.messageAppearance;\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get hintText$() {\n      return this.copyTexts$.pipe(switchMap(texts => this.copied$.pipe(switchMap(copied => {\n        if (!copied) {\n          return of(texts[0]);\n        }\n        this.copied$.next(false);\n        return merge(of(this.successMessage || texts[1]), timer(3000).pipe(map(() => texts[0])));\n      }))));\n    }\n    get nativeFocusableElement() {\n      return this.computedDisabled || !this.textfield ? null : this.textfield.nativeFocusableElement;\n    }\n    get focused() {\n      var _a;\n      return !!((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.focused);\n    }\n    get icon() {\n      return this.options.icon;\n    }\n    onValueChange(value) {\n      this.value = value;\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    copy() {\n      var _a;\n      if (!((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement)) {\n        return;\n      }\n      this.textfield.nativeFocusableElement.select();\n      this.doc.execCommand('copy');\n      this.copied$.next(true);\n    }\n    getFallbackValue() {\n      return '';\n    }\n  }\n  TuiInputCopyComponent.ɵfac = function TuiInputCopyComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputCopyComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(TUI_COPY_TEXTS), i0.ɵɵdirectiveInject(TUI_INPUT_COPY_OPTIONS), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE));\n  };\n  TuiInputCopyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputCopyComponent,\n    selectors: [[\"tui-input-copy\"]],\n    viewQuery: function TuiInputCopyComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputCopyComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      successMessage: \"successMessage\",\n      messageDirection: \"messageDirection\",\n      messageAppearance: \"messageAppearance\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TUI_VALUE_ACCESSOR_PROVIDER, tuiAsFocusableItemAccessor(TuiInputCopyComponent), tuiAsControl(TuiInputCopyComponent)]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 7,\n    vars: 10,\n    consts: [[\"iconContent\", \"\"], [\"hint\", \"\"], [1, \"t-textfield\", 3, \"valueChange\", \"focusedChange\", \"disabled\", \"focusable\", \"invalid\", \"nativeId\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldIcon\", \"value\"], [\"appearance\", \"icon\", \"automation-id\", \"tui-copy__icon\", \"tuiWrapper\", \"\", \"class\", \"t-icon\", 3, \"disabled\", \"src\", \"tuiHint\", \"tuiHintAppearance\", \"tuiHintDirection\", \"click\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"appearance\", \"icon\", \"automation-id\", \"tui-copy__icon\", \"tuiWrapper\", \"\", 1, \"t-icon\", 3, \"click\", \"disabled\", \"src\", \"tuiHint\", \"tuiHintAppearance\", \"tuiHintDirection\"], [4, \"polymorpheusOutlet\"]],\n    template: function TuiInputCopyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 2);\n        i0.ɵɵtwoWayListener(\"valueChange\", function TuiInputCopyComponent_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵlistener(\"focusedChange\", function TuiInputCopyComponent_Template_tui_primitive_textfield_focusedChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocused($event));\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, TuiInputCopyComponent_ng_template_3_Template, 1, 4, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(5, TuiInputCopyComponent_ng_template_5_Template, 2, 3, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const iconContent_r7 = i0.ɵɵreference(4);\n        i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"focusable\", ctx.focusable)(\"invalid\", ctx.computedInvalid)(\"nativeId\", ctx.nativeId)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldIcon\", !ctx.disabled ? iconContent_r7 : \"\");\n        i0.ɵɵtwoWayProperty(\"value\", ctx.value);\n      }\n    },\n    dependencies: [i1.TuiPrimitiveTextfieldComponent, i1.TuiSvgComponent, i1.TuiPrimitiveTextfieldDirective, i1.TuiTextfieldIconDirective, i2.PolymorpheusOutletDirective, i1.TuiWrapperDirective, i1.TuiHintDirective, i1.TuiHintDriverDirective, i1.TuiHintHoverDirective, i1.TuiHintPositionDirective, i3.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-icon[_ngcontent-%COMP%]{position:relative;cursor:pointer;pointer-events:auto;color:var(--tui-base-06)}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n    changeDetection: 0\n  });\n  __decorate([tuiPure], TuiInputCopyComponent.prototype, \"hintText$\", null);\n  return TuiInputCopyComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputCopyDirective = /*#__PURE__*/(() => {\n  class TuiInputCopyDirective extends AbstractTuiTextfieldHost {\n    onValueChange(value) {\n      this.host.onValueChange(value);\n    }\n  }\n  TuiInputCopyDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiInputCopyDirective_BaseFactory;\n    return function TuiInputCopyDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiInputCopyDirective_BaseFactory || (ɵTuiInputCopyDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputCopyDirective)))(__ngFactoryType__ || TuiInputCopyDirective);\n    };\n  })();\n  TuiInputCopyDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiInputCopyDirective,\n    selectors: [[\"tui-input-copy\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputCopyDirective)]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiInputCopyDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputCopyModule = /*#__PURE__*/(() => {\n  class TuiInputCopyModule {}\n  TuiInputCopyModule.ɵfac = function TuiInputCopyModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputCopyModule)();\n  };\n  TuiInputCopyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputCopyModule\n  });\n  TuiInputCopyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiWrapperModule, TuiSvgModule, TuiHintModule, TuiPrimitiveTextfieldModule, TuiAlertModule, TuiTextfieldControllerModule]]\n  });\n  return TuiInputCopyModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_COPY_DEFAULT_OPTIONS, TUI_INPUT_COPY_OPTIONS, TuiInputCopyComponent, TuiInputCopyDirective, TuiInputCopyModule, tuiInputCopyOptionsProvider };\n//# sourceMappingURL=taiga-ui-kit-components-input-copy.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}