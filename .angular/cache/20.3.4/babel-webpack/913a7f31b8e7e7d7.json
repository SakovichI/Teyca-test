{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ViewContainerRef, TemplateRef, Directive, Inject, Input, NgModule } from '@angular/core';\nimport { Subject, from, of } from 'rxjs';\nimport { concatMap, delay, takeUntil } from 'rxjs/operators';\n\n/**\n * @deprecated:\n * remove in v4.0\n */\nlet TuiForAsyncDirective = /*#__PURE__*/(() => {\n  class TuiForAsyncDirective {\n    constructor(view, template) {\n      this.view = view;\n      this.template = template;\n      this.destroy$ = new Subject();\n      this.tuiForAsyncTimeout = 10;\n    }\n    ngOnChanges() {\n      this.clearViewForOldNodes();\n      this.createAsyncViewForNewNodes();\n    }\n    ngOnDestroy() {\n      this.clearViewForOldNodes();\n      this.destroy$.complete();\n    }\n    createAsyncViewForNewNodes() {\n      from(this.iterableValues).pipe(concatMap(entry => this.tuiForAsyncTimeout > 0 ? of(entry).pipe(delay(this.tuiForAsyncTimeout)) : of(entry)), takeUntil(this.destroy$)).subscribe(([index, item]) => this.createEmbeddedView(item, index));\n    }\n    get iterableValues() {\n      var _a;\n      return ((_a = this.tuiForAsyncOf) !== null && _a !== void 0 ? _a : []).entries();\n    }\n    createEmbeddedView(item, index) {\n      this.view.createEmbeddedView(this.template, {\n        $implicit: item,\n        index\n      }, index).detectChanges();\n    }\n    clearViewForOldNodes() {\n      this.destroy$.next();\n      this.view.clear();\n    }\n  }\n  TuiForAsyncDirective.ɵfac = function TuiForAsyncDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiForAsyncDirective)(i0.ɵɵdirectiveInject(ViewContainerRef), i0.ɵɵdirectiveInject(TemplateRef));\n  };\n  TuiForAsyncDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiForAsyncDirective,\n    selectors: [[\"\", \"tuiForAsync\", \"\", \"tuiForAsyncOf\", \"\"]],\n    inputs: {\n      tuiForAsyncOf: \"tuiForAsyncOf\",\n      tuiForAsyncTimeout: \"tuiForAsyncTimeout\"\n    },\n    standalone: false,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return TuiForAsyncDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated:\n * remove in v4.0\n */\nlet TuiForAsyncModule = /*#__PURE__*/(() => {\n  class TuiForAsyncModule {}\n  TuiForAsyncModule.ɵfac = function TuiForAsyncModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiForAsyncModule)();\n  };\n  TuiForAsyncModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiForAsyncModule\n  });\n  TuiForAsyncModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiForAsyncModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiForAsyncDirective, TuiForAsyncModule };\n//# sourceMappingURL=taiga-ui-cdk-directives-for-async.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}