{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Self, Inject, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewChild, HostBinding, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport { AbstractTuiNullableControl, tuiPure, tuiCreateToken, tuiProvideOptions, tuiAsFocusableItemAccessor, tuiAsControl } from '@taiga-ui/cdk';\nimport { TUI_CARD_MASK } from '@taiga-ui/addon-commerce/constants';\nimport * as i1$1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiSvgModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_PAYMENT_SYSTEM_ICONS, tuiGetPaymentSystem } from '@taiga-ui/addon-commerce/utils';\nimport * as i2 from '@taiga-ui/kit';\nimport { TuiValueAccessorModule } from '@taiga-ui/kit';\nimport * as i3 from '@maskito/angular';\nimport { MaskitoModule } from '@maskito/angular';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nfunction TuiInputCardComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.defaultIcon);\n  }\n}\nlet AbstractTuiInputCard = /*#__PURE__*/(() => {\n  class AbstractTuiInputCard extends AbstractTuiNullableControl {\n    constructor(control, cdr, options) {\n      super(control, cdr);\n      this.options = options;\n      this.autocompleteEnabled = this.options.autocompleteEnabled;\n      this.binChange = new EventEmitter();\n    }\n    get defaultIcon() {\n      const paymentSystem = this.getPaymentSystem(this.card);\n      return paymentSystem && this.options.icons[paymentSystem];\n    }\n    get paymentSystem() {\n      return this.getPaymentSystem(this.card);\n    }\n    /** @deprecated remove in 4.0 */\n    get icon() {\n      return this.cardSrc || this.defaultIcon;\n    }\n    get autocomplete() {\n      return this.autocompleteEnabled ? 'cc-number' : 'off';\n    }\n    /**\n     * @deprecated: drop in v4.0\n     * use {@link autocomplete}\n     */\n    get autocompleteCard() {\n      return this.autocomplete;\n    }\n    get bin() {\n      return this.card.length < 6 ? null : this.card.slice(0, 6);\n    }\n    getPaymentSystem(cardNumber) {\n      return this.options.paymentSystemHandler(cardNumber);\n    }\n  }\n  AbstractTuiInputCard.ɵfac = function AbstractTuiInputCard_Factory(__ngFactoryType__) {\n    i0.ɵɵinvalidFactory();\n  };\n  AbstractTuiInputCard.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: AbstractTuiInputCard,\n    inputs: {\n      cardSrc: \"cardSrc\",\n      autocompleteEnabled: \"autocompleteEnabled\"\n    },\n    outputs: {\n      binChange: \"binChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  __decorate([tuiPure], AbstractTuiInputCard.prototype, \"getPaymentSystem\", null);\n  return AbstractTuiInputCard;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO: Move payment system icons into its own token in 4.0\nconst TUI_INPUT_CARD_DEFAULT_OPTIONS = {\n  icons: TUI_PAYMENT_SYSTEM_ICONS,\n  cardSrc: '',\n  paymentSystemHandler: tuiGetPaymentSystem,\n  autocompleteEnabled: false\n};\nconst TUI_INPUT_CARD_OPTIONS = tuiCreateToken(TUI_INPUT_CARD_DEFAULT_OPTIONS);\nfunction tuiInputCardOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_CARD_OPTIONS, options, TUI_INPUT_CARD_DEFAULT_OPTIONS);\n}\nlet TuiInputCardComponent = /*#__PURE__*/(() => {\n  class TuiInputCardComponent extends AbstractTuiInputCard {\n    constructor(control, cdr, textfieldSize, options) {\n      super(control, cdr, options);\n      this.textfieldSize = textfieldSize;\n      this.maskOptions = {\n        mask: TUI_CARD_MASK\n      };\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get card() {\n      var _a;\n      return (_a = this.value) !== null && _a !== void 0 ? _a : '';\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get focused() {\n      return !!this.input && this.input.focused;\n    }\n    onValueChange(value) {\n      const parsed = value.split(' ').join('');\n      const currentBin = this.bin;\n      this.value = parsed;\n      const newBin = this.bin;\n      if (currentBin !== newBin) {\n        this.binChange.emit(newBin);\n      }\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    writeValue(value) {\n      const currentBin = this.bin;\n      super.writeValue(value);\n      const newBin = this.bin;\n      if (currentBin !== newBin) {\n        this.binChange.emit(newBin);\n      }\n    }\n    getFallbackValue() {\n      return '';\n    }\n  }\n  TuiInputCardComponent.ɵfac = function TuiInputCardComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputCardComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE), i0.ɵɵdirectiveInject(TUI_INPUT_CARD_OPTIONS));\n  };\n  TuiInputCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputCardComponent,\n    selectors: [[\"tui-input-card\"]],\n    viewQuery: function TuiInputCardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputCardComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputCardComponent), tuiAsControl(TuiInputCardComponent)]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 6,\n    vars: 14,\n    consts: [[\"logo\", \"\"], [\"tuiValueAccessor\", \"\", 1, \"t-input\", 3, \"focusedChange\", \"valueChange\", \"disabled\", \"focusable\", \"invalid\", \"maskito\", \"nativeId\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldCustomContent\", \"value\"], [1, \"t-payment-system\", 3, \"src\"]],\n    template: function TuiInputCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 1);\n        i0.ɵɵpipe(1, \"maskito\");\n        i0.ɵɵlistener(\"focusedChange\", function TuiInputCardComponent_Template_tui_primitive_textfield_focusedChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocused($event));\n        })(\"valueChange\", function TuiInputCardComponent_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onValueChange($event));\n        });\n        i0.ɵɵprojection(2);\n        i0.ɵɵprojection(3, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, TuiInputCardComponent_ng_template_4_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const logo_r3 = i0.ɵɵreference(5);\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"focusable\", ctx.focusable)(\"invalid\", ctx.computedInvalid)(\"maskito\", ctx.maskOptions)(\"nativeId\", ctx.nativeId)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldCustomContent\", ctx.cardSrc || ctx.defaultIcon && logo_r3)(\"value\", i0.ɵɵpipeBind2(1, 11, ctx.card, ctx.maskOptions));\n      }\n    },\n    dependencies: [i1$1.TuiPrimitiveTextfieldComponent, i1$1.TuiSvgComponent, i1$1.TuiPrimitiveTextfieldDirective, i2.TuiValueAccessorDirective, i3.MaskitoDirective, i1$1.TuiTextfieldCustomContentDirective, i3.MaskitoPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-input[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}.t-payment-system[_ngcontent-%COMP%]{width:2rem;height:2rem;color:#1434cb}\"],\n    changeDetection: 0\n  });\n  return TuiInputCardComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputCardDirective = /*#__PURE__*/(() => {\n  class TuiInputCardDirective extends AbstractTuiTextfieldHost {\n    onValueChange(value) {\n      this.host.onValueChange(value);\n    }\n    ngAfterViewInit() {\n      const {\n        nativeFocusableElement\n      } = this.host;\n      if (!nativeFocusableElement) {\n        return;\n      }\n      nativeFocusableElement.inputMode = 'numeric';\n      nativeFocusableElement.placeholder = nativeFocusableElement.placeholder || '0000 0000 0000 0000';\n    }\n  }\n  TuiInputCardDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiInputCardDirective_BaseFactory;\n    return function TuiInputCardDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiInputCardDirective_BaseFactory || (ɵTuiInputCardDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputCardDirective)))(__ngFactoryType__ || TuiInputCardDirective);\n    };\n  })();\n  TuiInputCardDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiInputCardDirective,\n    selectors: [[\"tui-input-card\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputCardDirective)]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiInputCardDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputCardModule = /*#__PURE__*/(() => {\n  class TuiInputCardModule {}\n  TuiInputCardModule.ɵfac = function TuiInputCardModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputCardModule)();\n  };\n  TuiInputCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputCardModule\n  });\n  TuiInputCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[MaskitoModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, TuiSvgModule]]\n  });\n  return TuiInputCardModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiInputCard, TUI_INPUT_CARD_DEFAULT_OPTIONS, TUI_INPUT_CARD_OPTIONS, TuiInputCardComponent, TuiInputCardDirective, TuiInputCardModule, tuiInputCardOptionsProvider };\n//# sourceMappingURL=taiga-ui-addon-commerce-components-input-card.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}