{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, ElementRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport * as i7 from '@taiga-ui/cdk';\nimport { AbstractTuiControl, tuiIsNativeFocused, tuiRound, tuiClamp, tuiAsFocusableItemAccessor, tuiAsControl, tuiPure, TuiFocusableModule } from '@taiga-ui/cdk';\nimport * as i3 from '@taiga-ui/core';\nimport { tuiGetFractionPartPadded, TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/kit/components/input-number';\nimport * as i2 from '@taiga-ui/kit/components/slider';\nimport { tuiSliderOptionsProvider, TuiSliderComponent, TuiSliderModule } from '@taiga-ui/kit/components/slider';\nimport { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nconst _c0 = [\"*\"];\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputSliderComponent_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r1 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r1, \" \");\n  }\n}\nfunction TuiInputSliderComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TuiInputSliderComponent_div_2_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.valueContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.value));\n  }\n}\nlet TuiInputSliderComponent = /*#__PURE__*/(() => {\n  class TuiInputSliderComponent extends AbstractTuiControl {\n    constructor(control, cdr, controller) {\n      super(control, cdr);\n      this.controller = controller;\n      this.min = 0;\n      this.max = 100;\n      this.quantum = 1;\n      this.steps = 0;\n      this.segments = 1;\n      this.keySteps = null;\n      /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */\n      this.textfieldPrefix = '';\n      /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n      this.textfieldPostfix = '';\n      this.textfieldValue = this.safeCurrentValue;\n    }\n    get prefix() {\n      return this.textfieldPrefix || this.controller.prefix;\n    }\n    get postfix() {\n      return this.textfieldPostfix || this.controller.postfix;\n    }\n    get nativeFocusableElement() {\n      var _a;\n      return !((_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || this.computedDisabled ? null : this.inputNumberRef.nativeFocusableElement;\n    }\n    get focused() {\n      var _a;\n      return tuiIsNativeFocused(this.nativeFocusableElement) || tuiIsNativeFocused(((_a = this.sliderRef) === null || _a === void 0 ? void 0 : _a.nativeElement) || null);\n    }\n    get computedSteps() {\n      return this.steps || (this.max - this.min) / this.quantum;\n    }\n    get precision() {\n      return tuiGetFractionPartPadded(this.quantum).length;\n    }\n    get decimal() {\n      return this.precision ? 'not-zero' : 'never';\n    }\n    get showValueContent() {\n      return Boolean(this.valueContent && !this.focused);\n    }\n    get step() {\n      return (this.max - this.min) / this.computedSteps;\n    }\n    computeKeySteps(keySteps, min, max) {\n      return keySteps || [[0, min], [100, max]];\n    }\n    focusTextInput() {\n      var _a;\n      const focusableElement = (_a = this.inputNumberRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement;\n      if (focusableElement) {\n        focusableElement.focus();\n      }\n    }\n    safelyUpdateValue(value) {\n      this.value = this.valueGuard(value !== null && value !== void 0 ? value : this.safeCurrentValue);\n    }\n    onVerticalArrowKeyDown(coefficient) {\n      if (this.readOnly || !this.step) {\n        return;\n      }\n      const value = this.value + coefficient * this.step;\n      if (value !== this.value) {\n        this.safelyUpdateValue(value);\n        this.textfieldValue = this.value;\n      }\n    }\n    onSliderChange(newValue) {\n      this.safelyUpdateValue(newValue);\n      this.textfieldValue = this.value;\n    }\n    onFocused(focused) {\n      const {\n        value,\n        textfieldValue\n      } = this;\n      if (!focused && textfieldValue !== value) {\n        this.textfieldValue = value;\n      }\n      this.updateFocused(focused);\n    }\n    writeValue(value) {\n      super.writeValue(value);\n      this.textfieldValue = this.value;\n    }\n    getFallbackValue() {\n      return 0;\n    }\n    valueGuard(value) {\n      const roundedValue = tuiRound(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n      return tuiClamp(roundedValue, this.min, this.max);\n    }\n  }\n  TuiInputSliderComponent.ɵfac = function TuiInputSliderComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputSliderComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_WATCHED_CONTROLLER));\n  };\n  TuiInputSliderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputSliderComponent,\n    selectors: [[\"tui-input-slider\"]],\n    viewQuery: function TuiInputSliderComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiInputNumberComponent, 5);\n        i0.ɵɵviewQuery(TuiSliderComponent, 5, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputNumberRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sliderRef = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function TuiInputSliderComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.controller.size);\n        i0.ɵɵclassProp(\"_label-outside\", ctx.controller.labelOutside);\n      }\n    },\n    inputs: {\n      min: \"min\",\n      max: \"max\",\n      quantum: \"quantum\",\n      steps: \"steps\",\n      segments: \"segments\",\n      keySteps: \"keySteps\",\n      valueContent: \"valueContent\",\n      textfieldPrefix: [0, \"prefix\", \"textfieldPrefix\"],\n      textfieldPostfix: [0, \"postfix\", \"textfieldPostfix\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputSliderComponent), tuiAsControl(TuiInputSliderComponent), tuiSliderOptionsProvider({\n      trackColor: 'transparent'\n    }), TEXTFIELD_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 20,\n    consts: [[3, \"ngModelChange\", \"focusedChange\", \"keydown.arrowDown.prevent\", \"keydown.arrowUp.prevent\", \"decimal\", \"disabled\", \"max\", \"min\", \"precision\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"readOnly\", \"tuiTextfieldPostfix\", \"tuiTextfieldPrefix\", \"ngModel\"], [\"automation-id\", \"tui-input-slider__value-content\", \"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"], 4, \"ngIf\"], [\"tuiSlider\", \"\", \"type\", \"range\", 3, \"click\", \"ngModelChange\", \"disabled\", \"keySteps\", \"max\", \"ngModel\", \"segments\", \"tuiFocusable\"], [\"automation-id\", \"tui-input-slider__value-content\", \"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"]], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"]],\n    template: function TuiInputSliderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"tui-input-number\", 0);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiInputSliderComponent_Template_tui_input_number_ngModelChange_0_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.textfieldValue, $event) || (ctx.textfieldValue = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"focusedChange\", function TuiInputSliderComponent_Template_tui_input_number_focusedChange_0_listener($event) {\n          return ctx.onFocused($event);\n        })(\"keydown.arrowDown.prevent\", function TuiInputSliderComponent_Template_tui_input_number_keydown_arrowDown_prevent_0_listener() {\n          return ctx.onVerticalArrowKeyDown(-1);\n        })(\"keydown.arrowUp.prevent\", function TuiInputSliderComponent_Template_tui_input_number_keydown_arrowUp_prevent_0_listener() {\n          return ctx.onVerticalArrowKeyDown(1);\n        })(\"ngModelChange\", function TuiInputSliderComponent_Template_tui_input_number_ngModelChange_0_listener($event) {\n          return ctx.safelyUpdateValue($event);\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵtemplate(2, TuiInputSliderComponent_div_2_Template, 2, 4, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"click\", function TuiInputSliderComponent_Template_input_click_3_listener() {\n          return ctx.focusTextInput();\n        })(\"ngModelChange\", function TuiInputSliderComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.onSliderChange($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"decimal\", ctx.decimal)(\"disabled\", ctx.computedDisabled)(\"max\", ctx.max)(\"min\", ctx.min)(\"precision\", ctx.precision)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.pseudoInvalid)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldPostfix\", ctx.showValueContent ? \"\" : ctx.postfix)(\"tuiTextfieldPrefix\", ctx.showValueContent ? \"\" : ctx.prefix);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.textfieldValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showValueContent);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.readOnly || ctx.computedDisabled)(\"keySteps\", ctx.computeKeySteps(ctx.keySteps, ctx.min, ctx.max))(\"max\", ctx.computedSteps)(\"ngModel\", ctx.value)(\"segments\", ctx.segments)(\"tuiFocusable\", false);\n      }\n    },\n    dependencies: [i1.TuiInputNumberComponent, i2.TuiSliderComponent, i1.TuiInputNumberDirective, i3.TuiTextfieldPostfixDirective, i3.TuiTextfieldPrefixDirective, i4.NgControlStatus, i4.NgModel, i5.NgIf, i6.PolymorpheusOutletDirective, i2.TuiSliderKeyStepsDirective, i4.RangeValueAccessor, i4.DefaultValueAccessor, i7.TuiFocusableDirective],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:block;height:-webkit-max-content;height:max-content;isolation:isolate;border-radius:var(--tui-radius-m)}tui-input-number[_ngcontent-%COMP%]{border-radius:inherit}input[type=range][_ngcontent-%COMP%]{position:absolute;top:100%;left:calc(var(--tui-radius-m) / 2);right:0;width:calc(100% - calc(var(--tui-radius-m) / 2));box-sizing:border-box;height:1rem;margin:-.5625rem 0 0;border-top-left-radius:0;border-bottom-left-radius:calc(var(--tui-radius-m) * 5) calc(var(--tui-radius-m) * 1.5)}\"],\n    changeDetection: 0\n  });\n  __decorate([tuiPure], TuiInputSliderComponent.prototype, \"computeKeySteps\", null);\n  return TuiInputSliderComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputSliderModule = /*#__PURE__*/(() => {\n  class TuiInputSliderModule {}\n  TuiInputSliderModule.ɵfac = function TuiInputSliderModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputSliderModule)();\n  };\n  TuiInputSliderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputSliderModule\n  });\n  TuiInputSliderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiFocusableModule, TuiInputNumberModule, TuiSliderModule, TuiTextfieldControllerModule]]\n  });\n  return TuiInputSliderModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputSliderComponent, TuiInputSliderModule };\n//# sourceMappingURL=taiga-ui-kit-components-input-slider.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}