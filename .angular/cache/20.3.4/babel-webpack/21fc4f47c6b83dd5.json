{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i3 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiDay, tuiDateClamp, CHAR_EN_DASH, TuiMonthRange, tuiAsFocusableItemAccessor, tuiAsControl, AbstractTuiControl, TuiDestroyService, TuiPreventDefaultModule, TuiActiveZoneModule, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_SIZE, TuiMonthPipe, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_MONTH_FORMATTER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_MONTH_FORMATTER, TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';\nimport * as i2 from '@taiga-ui/kit/components/calendar-month';\nimport { TuiCalendarMonthModule } from '@taiga-ui/kit/components/calendar-month';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'rxjs';\nimport { Subject, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nfunction TuiInputMonthRangeComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar-month\", 3);\n    i0.ɵɵlistener(\"monthClick\", function TuiInputMonthRangeComponent_ng_template_8_Template_tui_calendar_month_monthClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMonthClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r2.disabledItemHandler)(\"max\", ctx_r2.max)(\"min\", ctx_r2.min)(\"value\", ctx_r2.value)(\"year\", ctx_r2.computedDefaultActiveYear);\n  }\n}\nlet TuiInputMonthRangeComponent = /*#__PURE__*/(() => {\n  class TuiInputMonthRangeComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, formatter, options, textfieldSize) {\n      super(control, cdr);\n      this.formatter = formatter;\n      this.options = options;\n      this.textfieldSize = textfieldSize;\n      this.min = this.options.min;\n      this.max = this.options.max;\n      this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n      this.defaultActiveYear = TuiDay.currentLocal();\n      this.open = false;\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get computedDefaultActiveYear() {\n      var _a;\n      return ((_a = this.value) === null || _a === void 0 ? void 0 : _a.from) || tuiDateClamp(this.defaultActiveYear, this.min, this.max);\n    }\n    get focused() {\n      var _a;\n      return !!((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.focused);\n    }\n    get calendarIcon() {\n      return this.options.icon;\n    }\n    computeValue(from, to) {\n      const formattedTo = from === to && this.focused && !this.readOnly ? '' : to;\n      return `${from} ${CHAR_EN_DASH} ${formattedTo}`;\n    }\n    onValueChange(value) {\n      if (value) {\n        return;\n      }\n      this.value = null;\n      this.onOpenChange(true);\n    }\n    onMonthClick(month) {\n      if (this.value === null || !this.value.isSingleMonth) {\n        this.writeValue(new TuiMonthRange(month, month));\n        return;\n      }\n      this.value = TuiMonthRange.sort(this.value.from, month);\n      this.close();\n    }\n    onOpenChange(open) {\n      this.open = open;\n    }\n    onActiveZone(focused) {\n      var _a;\n      this.updateFocused(focused);\n      if (focused) {\n        return;\n      }\n      if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.isSingleMonth) {\n        this.value = new TuiMonthRange(this.value.from, this.value.from);\n      }\n    }\n    setDisabledState() {\n      super.setDisabledState();\n      this.close();\n    }\n    close() {\n      this.open = false;\n    }\n  }\n  TuiInputMonthRangeComponent.ɵfac = function TuiInputMonthRangeComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputMonthRangeComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_MONTH_FORMATTER), i0.ɵɵdirectiveInject(TUI_INPUT_DATE_OPTIONS), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE));\n  };\n  TuiInputMonthRangeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputMonthRangeComponent,\n    selectors: [[\"tui-input-month-range\"]],\n    viewQuery: function TuiInputMonthRangeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputMonthRangeComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      min: \"min\",\n      max: \"max\",\n      disabledItemHandler: \"disabledItemHandler\",\n      defaultActiveYear: \"defaultActiveYear\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent), tuiAsControl(TuiInputMonthRangeComponent), TUI_MONTH_FORMATTER_PROVIDER, TuiMonthPipe]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 10,\n    vars: 22,\n    consts: [[\"dropdown\", \"\"], [1, \"t-hosted\", 3, \"openChange\", \"tuiActiveZoneChange\", \"canOpen\", \"content\", \"open\"], [1, \"t-textfield\", 3, \"valueChange\", \"disabled\", \"editable\", \"invalid\", \"nativeId\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldIcon\", \"value\"], [\"tuiPreventDefault\", \"mousedown\", 3, \"monthClick\", \"disabledItemHandler\", \"max\", \"min\", \"value\", \"year\"]],\n    template: function TuiInputMonthRangeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 1);\n        i0.ɵɵlistener(\"openChange\", function TuiInputMonthRangeComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onOpenChange($event));\n        })(\"tuiActiveZoneChange\", function TuiInputMonthRangeComponent_Template_tui_hosted_dropdown_tuiActiveZoneChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onActiveZone($event));\n        });\n        i0.ɵɵelementStart(1, \"tui-primitive-textfield\", 2);\n        i0.ɵɵpipe(2, \"tuiMapper\");\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵpipe(4, \"tuiMapper\");\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵlistener(\"valueChange\", function TuiInputMonthRangeComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onValueChange($event));\n        });\n        i0.ɵɵprojection(6);\n        i0.ɵɵprojection(7, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, TuiInputMonthRangeComponent_ng_template_8_Template, 1, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const dropdown_r4 = i0.ɵɵreference(9);\n        i0.ɵɵproperty(\"canOpen\", ctx.interactive)(\"content\", dropdown_r4)(\"open\", ctx.open && ctx.interactive);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"editable\", false)(\"invalid\", ctx.computedInvalid)(\"nativeId\", ctx.nativeId)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldIcon\", ctx.calendarIcon)(\"value\", ctx.value ? ctx.computeValue(i0.ɵɵpipeBind1(3, 15, i0.ɵɵpipeBind2(2, 12, ctx.value.from, ctx.formatter)), i0.ɵɵpipeBind1(5, 20, i0.ɵɵpipeBind2(4, 17, ctx.value.to, ctx.formatter))) : \"\");\n      }\n    },\n    dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i2.TuiCalendarMonthComponent, i3.TuiActiveZoneDirective, i1.TuiPrimitiveTextfieldDirective, i1.TuiTextfieldIconDirective, i3.TuiPreventDefaultDirective, i4.AsyncPipe, i3.TuiMapperPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n    changeDetection: 0\n  });\n  return TuiInputMonthRangeComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputMonthRangeDirective = /*#__PURE__*/(() => {\n  class TuiInputMonthRangeDirective extends AbstractTuiTextfieldHost {\n    constructor(host, formatter, destroy$) {\n      super(host);\n      this.value$ = new Subject();\n      this.localizedValue = ['', ''];\n      this.value$.pipe(distinctUntilChanged(), switchMap(value => combineLatest([formatter((value === null || value === void 0 ? void 0 : value.from) || null), formatter((value === null || value === void 0 ? void 0 : value.to) || null)])), takeUntil(destroy$)).subscribe(localizedValue => {\n        this.localizedValue = localizedValue;\n      });\n    }\n    get readOnly() {\n      return true;\n    }\n    get value() {\n      return this.localizedValue[0] ? this.host.computeValue(...this.localizedValue) : '';\n    }\n    ngDoCheck() {\n      this.value$.next(this.host.value);\n    }\n    onValueChange(value) {\n      this.host.onValueChange(value);\n    }\n  }\n  TuiInputMonthRangeDirective.ɵfac = function TuiInputMonthRangeDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputMonthRangeDirective)(i0.ɵɵdirectiveInject(AbstractTuiControl), i0.ɵɵdirectiveInject(TUI_MONTH_FORMATTER), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n  };\n  TuiInputMonthRangeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiInputMonthRangeDirective,\n    selectors: [[\"tui-input-month-range\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputMonthRangeDirective), TuiDestroyService]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiInputMonthRangeDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputMonthRangeModule = /*#__PURE__*/(() => {\n  class TuiInputMonthRangeModule {}\n  TuiInputMonthRangeModule.ɵfac = function TuiInputMonthRangeModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputMonthRangeModule)();\n  };\n  TuiInputMonthRangeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputMonthRangeModule\n  });\n  TuiInputMonthRangeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiCalendarMonthModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiPreventDefaultModule, TuiActiveZoneModule, TuiMapperPipeModule, TuiTextfieldControllerModule]]\n  });\n  return TuiInputMonthRangeModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiInputMonthRangeModule };\n//# sourceMappingURL=taiga-ui-kit-components-input-month-range.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}