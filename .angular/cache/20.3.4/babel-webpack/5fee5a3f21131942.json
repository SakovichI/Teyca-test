{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ElementRef, Directive, Inject, Self, Output, NgModule } from '@angular/core';\nimport { tuiTypedFromEvent, tuiPreventDefault } from '@taiga-ui/cdk/observables';\nimport { TuiDestroyService } from '@taiga-ui/cdk/services';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i1 from 'rxjs';\nimport { merge } from 'rxjs';\nimport { map, filter, switchMap, startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nlet TuiDroppableDirective = /*#__PURE__*/(() => {\n  class TuiDroppableDirective {\n    constructor({\n      nativeElement\n    }, destroy$) {\n      this.tuiDroppableDropped = tuiTypedFromEvent(nativeElement, 'drop').pipe(tuiPreventDefault(), map(event => event.dataTransfer), filter(tuiIsPresent));\n      this.tuiDroppableDragOverChange = tuiTypedFromEvent(nativeElement, 'dragenter').pipe(switchMap(({\n        target,\n        dataTransfer\n      }) => merge(tuiTypedFromEvent(nativeElement, 'dragleave').pipe(filter(event => event.target === target)), tuiTypedFromEvent(nativeElement, 'drop')).pipe(map(() => null), startWith(dataTransfer))), distinctUntilChanged((a, b) => !!a && !!b || !a && !b));\n      // Required by Drag and Drop API to stop redirecting\n      tuiTypedFromEvent(nativeElement, 'dragover').pipe(tuiPreventDefault(), takeUntil(destroy$)).subscribe();\n    }\n  }\n  TuiDroppableDirective.ɵfac = function TuiDroppableDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiDroppableDirective)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n  };\n  TuiDroppableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiDroppableDirective,\n    selectors: [[\"\", \"tuiDroppableDropped\", \"\"], [\"\", \"tuiDroppableDragOverChange\", \"\"]],\n    outputs: {\n      tuiDroppableDropped: \"tuiDroppableDropped\",\n      tuiDroppableDragOverChange: \"tuiDroppableDragOverChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService])]\n  });\n  return TuiDroppableDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiDroppableModule = /*#__PURE__*/(() => {\n  class TuiDroppableModule {}\n  TuiDroppableModule.ɵfac = function TuiDroppableModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiDroppableModule)();\n  };\n  TuiDroppableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiDroppableModule\n  });\n  TuiDroppableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiDroppableModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiDroppableDirective, TuiDroppableModule };\n//# sourceMappingURL=taiga-ui-cdk-directives-droppable.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}