{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, ElementRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChildren, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, EMPTY_QUERY, TUI_DEFAULT_IDENTITY_MATCHER, ALWAYS_FALSE_HANDLER, tuiIsNativeFocusedIn, tuiAsFocusableItemAccessor, tuiAsControl } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/kit/components/radio-labeled';\nimport { TuiRadioLabeledComponent, TuiRadioLabeledModule } from '@taiga-ui/kit/components/radio-labeled';\nimport * as i1 from '@taiga-ui/kit/components/radio-group';\nimport { TuiRadioGroupModule } from '@taiga-ui/kit/components/radio-group';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i5 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nconst _c0 = (a0, a1, a2) => ({\n  $implicit: a0,\n  index: a1,\n  active: a2\n});\nfunction TuiRadioListComponent_tui_radio_labeled_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r3 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r3, \" \");\n  }\n}\nfunction TuiRadioListComponent_tui_radio_labeled_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-radio-labeled\", 2);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiRadioListComponent_tui_radio_labeled_1_Template_tui_radio_labeled_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.value, $event) || (ctx_r1.value = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵtemplate(1, TuiRadioListComponent_tui_radio_labeled_1_ng_container_1_Template, 2, 1, \"ng-container\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const index_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled)(\"identityMatcher\", ctx_r1.identityMatcher)(\"item\", item_r4)(\"nativeId\", ctx_r1.computeId(index_r5))(\"pseudoDisabled\", ctx_r1.itemIsDisabled(item_r4))(\"pseudoInvalid\", ctx_r1.computedInvalid)(\"readOnly\", ctx_r1.readOnly)(\"size\", ctx_r1.size);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.value);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.itemContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction3(11, _c0, item_r4, index_r5, ctx_r1.itemIsActive(item_r4)));\n  }\n}\nlet TuiRadioListComponent = /*#__PURE__*/(() => {\n  class TuiRadioListComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, el) {\n      super(control, cdr);\n      this.el = el;\n      this.radioButtons = EMPTY_QUERY;\n      this.items = [];\n      this.size = 'm';\n      this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;\n      this.orientation = 'vertical';\n      this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n      // @bad TODO: Remove & { index: number }\n      this.itemContent = ({\n        $implicit\n      }) => String($implicit);\n    }\n    get nativeFocusableElement() {\n      var _a;\n      const focusableRadioButton = this.radioButtons.find(radioButton => radioButton.nativeFocusableElement !== null);\n      return (_a = focusableRadioButton === null || focusableRadioButton === void 0 ? void 0 : focusableRadioButton.nativeFocusableElement) !== null && _a !== void 0 ? _a : null;\n    }\n    get focused() {\n      return tuiIsNativeFocusedIn(this.el.nativeElement);\n    }\n    computeId(index) {\n      return `${this.id}-${index}`;\n    }\n    itemIsDisabled(item) {\n      return this.disabledItemHandler(item);\n    }\n    /** @deprecated use 'value' setter */\n    onModelChange(value) {\n      this.value = value;\n    }\n    itemIsActive(item) {\n      return this.value === null ? item === null : this.identityMatcher(this.value, item);\n    }\n  }\n  TuiRadioListComponent.ɵfac = function TuiRadioListComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioListComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(ElementRef));\n  };\n  TuiRadioListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiRadioListComponent,\n    selectors: [[\"tui-radio-list\"]],\n    viewQuery: function TuiRadioListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiRadioLabeledComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radioButtons = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function TuiRadioListComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size)(\"data-orientation\", ctx.orientation);\n      }\n    },\n    inputs: {\n      items: \"items\",\n      size: \"size\",\n      identityMatcher: \"identityMatcher\",\n      orientation: \"orientation\",\n      disabledItemHandler: \"disabledItemHandler\",\n      itemContent: \"itemContent\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiRadioListComponent), tuiAsControl(TuiRadioListComponent)]), i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"t-group\"], [\"class\", \"t-item\", 3, \"disabled\", \"identityMatcher\", \"item\", \"nativeId\", \"pseudoDisabled\", \"pseudoInvalid\", \"readOnly\", \"size\", \"ngModel\", \"ngModelChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"t-item\", 3, \"ngModelChange\", \"disabled\", \"identityMatcher\", \"item\", \"nativeId\", \"pseudoDisabled\", \"pseudoInvalid\", \"readOnly\", \"size\", \"ngModel\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"]],\n    template: function TuiRadioListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tui-radio-group\", 0);\n        i0.ɵɵtemplate(1, TuiRadioListComponent_tui_radio_labeled_1_Template, 2, 15, \"tui-radio-labeled\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [i1.TuiRadioGroupComponent, i2.TuiRadioLabeledComponent, i3.NgForOf, i4.NgControlStatus, i4.NgModel, i5.PolymorpheusOutletDirective],\n    styles: [\"[_nghost-%COMP%]{display:block}._readonly[_nghost-%COMP%]{pointer-events:none}.t-group[_ngcontent-%COMP%]{align-items:inherit}[data-orientation=horizontal][_nghost-%COMP%]   .t-group[_ngcontent-%COMP%]{display:flex;justify-content:inherit}.t-item[_ngcontent-%COMP%]{align-items:inherit}[data-orientation=horizontal][_nghost-%COMP%]   .t-item[_ngcontent-%COMP%]:nth-child(n + 2){margin-left:1.5rem}[data-orientation=vertical][_nghost-%COMP%]   .t-item[_ngcontent-%COMP%]:nth-child(n + 2){margin-top:.75rem}[data-size=l][data-orientation=horizontal][_nghost-%COMP%]   .t-item[_ngcontent-%COMP%]:nth-child(n + 2){margin-left:2.5rem}[data-size=l][data-orientation=vertical][_nghost-%COMP%]   .t-item[_ngcontent-%COMP%]:nth-child(n + 2){margin-top:1rem}\"],\n    changeDetection: 0\n  });\n  return TuiRadioListComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiRadioListModule = /*#__PURE__*/(() => {\n  class TuiRadioListModule {}\n  TuiRadioListModule.ɵfac = function TuiRadioListModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioListModule)();\n  };\n  TuiRadioListModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiRadioListModule\n  });\n  TuiRadioListModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, PolymorpheusModule, TuiRadioGroupModule, TuiRadioLabeledModule]]\n  });\n  return TuiRadioListModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiRadioListComponent, TuiRadioListModule };\n//# sourceMappingURL=taiga-ui-kit-components-radio-list.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}