{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ViewContainerRef, TemplateRef, Directive, Inject, Input, NgModule } from '@angular/core';\n\n/**\n * @internal\n */\nclass TuiLetContext {\n  constructor(internalDirectiveInstance) {\n    this.internalDirectiveInstance = internalDirectiveInstance;\n  }\n  get $implicit() {\n    return this.internalDirectiveInstance.tuiLet;\n  }\n  get tuiLet() {\n    return this.internalDirectiveInstance.tuiLet;\n  }\n}\n\n/**\n * Works like *ngIf but does not have a condition — use it to declare\n * the result of pipes calculation (i.e. async pipe)\n */\nlet TuiLetDirective = /*#__PURE__*/(() => {\n  class TuiLetDirective {\n    constructor(viewContainer, templateRef) {\n      viewContainer.createEmbeddedView(templateRef, new TuiLetContext(this));\n    }\n    /**\n     * Asserts the correct type of the context for the template that `TuiLet` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `TuiLet` structural directive renders its template with a specific context type.\n     */\n    static ngTemplateContextGuard(_dir, _ctx) {\n      return true;\n    }\n  }\n  TuiLetDirective.ɵfac = function TuiLetDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLetDirective)(i0.ɵɵdirectiveInject(ViewContainerRef), i0.ɵɵdirectiveInject(TemplateRef));\n  };\n  TuiLetDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiLetDirective,\n    selectors: [[\"\", \"tuiLet\", \"\"]],\n    inputs: {\n      tuiLet: \"tuiLet\"\n    },\n    standalone: false\n  });\n  return TuiLetDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiLetModule = /*#__PURE__*/(() => {\n  class TuiLetModule {}\n  TuiLetModule.ɵfac = function TuiLetModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLetModule)();\n  };\n  TuiLetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiLetModule\n  });\n  TuiLetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiLetModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiLetContext, TuiLetDirective, TuiLetModule };\n//# sourceMappingURL=taiga-ui-cdk-directives-let.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}