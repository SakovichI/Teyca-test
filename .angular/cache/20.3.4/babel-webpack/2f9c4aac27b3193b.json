{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Inject, Input, Output, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { TuiElementDirective } from '@taiga-ui/cdk/directives/element';\nimport { tuiPx } from '@taiga-ui/cdk/utils/format';\nlet TuiResizeableDirective = /*#__PURE__*/(() => {\n  class TuiResizeableDirective extends TuiElementDirective {}\n  TuiResizeableDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiResizeableDirective_BaseFactory;\n    return function TuiResizeableDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiResizeableDirective_BaseFactory || (ɵTuiResizeableDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiResizeableDirective)))(__ngFactoryType__ || TuiResizeableDirective);\n    };\n  })();\n  TuiResizeableDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiResizeableDirective,\n    selectors: [[\"\", \"tuiResizeable\", \"\"]],\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiResizeableDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO: Migrate to PointerEvent in 4.0\nlet TuiResizerDirective = /*#__PURE__*/(() => {\n  class TuiResizerDirective {\n    constructor(resizeable) {\n      this.resizeable = resizeable;\n      this.tuiResizer = [0, 0];\n      this.tuiSizeChange = new EventEmitter();\n      this.x = NaN;\n      this.y = NaN;\n      this.width = 0;\n      this.height = 0;\n    }\n    get cursor() {\n      if (!this.tuiResizer[0]) {\n        return 'ns-resize';\n      }\n      if (!this.tuiResizer[1]) {\n        return 'ew-resize';\n      }\n      if (this.tuiResizer[0] * this.tuiResizer[1] > 0) {\n        return 'nwse-resize';\n      }\n      return 'nesw-resize';\n    }\n    onTouchStart({\n      touches\n    }) {\n      this.onMouseDown(touches[0].clientX, touches[0].clientY);\n    }\n    onMouseDown(x, y) {\n      this.x = x;\n      this.y = y;\n      this.width = this.resizeable.nativeElement.clientWidth;\n      this.height = this.resizeable.nativeElement.clientHeight;\n    }\n    onMouseMove({\n      x,\n      y,\n      buttons\n    }) {\n      if (!buttons) {\n        this.onMouseUp();\n      } else {\n        this.onMove(x, y);\n      }\n    }\n    onTouchMove({\n      touches\n    }) {\n      this.onMove(touches[0].clientX, touches[0].clientY);\n    }\n    onMouseUp() {\n      this.x = NaN;\n    }\n    onMove(x, y) {\n      if (Number.isNaN(this.x)) {\n        return;\n      }\n      const {\n        style\n      } = this.resizeable.nativeElement;\n      const size = [this.width + this.tuiResizer[0] * (x - this.x), this.height + this.tuiResizer[1] * (y - this.y)];\n      if (this.tuiResizer[0]) {\n        style.width = tuiPx(size[0]);\n      }\n      if (this.tuiResizer[1]) {\n        style.height = tuiPx(size[1]);\n      }\n      this.tuiSizeChange.emit(size);\n    }\n  }\n  TuiResizerDirective.ɵfac = function TuiResizerDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiResizerDirective)(i0.ɵɵdirectiveInject(TuiResizeableDirective));\n  };\n  TuiResizerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiResizerDirective,\n    selectors: [[\"\", \"tuiResizer\", \"\"]],\n    hostVars: 4,\n    hostBindings: function TuiResizerDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"touchstart.silent.passive\", function TuiResizerDirective_touchstart_silent_passive_HostBindingHandler($event) {\n          return ctx.onTouchStart($event);\n        })(\"mousedown.silent.prevent\", function TuiResizerDirective_mousedown_silent_prevent_HostBindingHandler($event) {\n          return ctx.onMouseDown($event.x, $event.y);\n        })(\"mousemove.silent\", function TuiResizerDirective_mousemove_silent_HostBindingHandler($event) {\n          return ctx.onMouseMove($event);\n        }, i0.ɵɵresolveDocument)(\"touchmove.silent\", function TuiResizerDirective_touchmove_silent_HostBindingHandler($event) {\n          return ctx.onTouchMove($event);\n        }, i0.ɵɵresolveDocument)(\"mouseup.silent\", function TuiResizerDirective_mouseup_silent_HostBindingHandler() {\n          return ctx.onMouseUp();\n        }, i0.ɵɵresolveDocument)(\"touchend.silent\", function TuiResizerDirective_touchend_silent_HostBindingHandler() {\n          return ctx.onMouseUp();\n        }, i0.ɵɵresolveDocument);\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"touch-action\", \"none\")(\"cursor\", ctx.cursor);\n      }\n    },\n    inputs: {\n      tuiResizer: \"tuiResizer\"\n    },\n    outputs: {\n      tuiSizeChange: \"tuiSizeChange\"\n    },\n    standalone: false\n  });\n  return TuiResizerDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiResizerModule = /*#__PURE__*/(() => {\n  class TuiResizerModule {}\n  TuiResizerModule.ɵfac = function TuiResizerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiResizerModule)();\n  };\n  TuiResizerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiResizerModule\n  });\n  TuiResizerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiResizerModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiResizeableDirective, TuiResizerDirective, TuiResizerModule };\n//# sourceMappingURL=taiga-ui-cdk-directives-resizer.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}