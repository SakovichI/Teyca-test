{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Injectable, Inject, Self, ElementRef, Directive, Input, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { IntersectionObserverService } from '@ng-web-apis/intersection-observer';\nimport { tuiWatch, TuiDestroyService } from '@taiga-ui/cdk';\nimport * as i1 from 'rxjs';\nimport { Observable, of, Subject } from 'rxjs';\nimport { switchMap, filter, map, catchError, take, takeUntil } from 'rxjs/operators';\nlet TuiLazyLoadingService = /*#__PURE__*/(() => {\n  class TuiLazyLoadingService extends Observable {\n    constructor(cdr, destroy$, intersections$) {\n      super(subscriber => this.src$.pipe(switchMap(src => intersections$.pipe(filter(([{\n        isIntersecting\n      }]) => isIntersecting), map(() => src), catchError(() => of(src)), tuiWatch(cdr), take(1))), takeUntil(destroy$)).subscribe(subscriber));\n      this.src$ = new Subject();\n    }\n    next(src) {\n      this.src$.next(src);\n    }\n  }\n  TuiLazyLoadingService.ɵfac = function TuiLazyLoadingService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLazyLoadingService)(i0.ɵɵinject(ChangeDetectorRef), i0.ɵɵinject(TuiDestroyService, 2), i0.ɵɵinject(IntersectionObserverService));\n  };\n  TuiLazyLoadingService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TuiLazyLoadingService,\n    factory: TuiLazyLoadingService.ɵfac\n  });\n  return TuiLazyLoadingService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiLazyLoadingDirective = /*#__PURE__*/(() => {\n  class TuiLazyLoadingDirective {\n    constructor(src$, el) {\n      this.src$ = src$;\n      this.el = el;\n      this.animation = 'tuiSkeletonVibe ease-in-out 1s infinite alternate';\n      this.background = 'var(--tui-clear-hover)';\n      this.src = null;\n      if (!this.supported) {\n        this.src$.subscribe(src => {\n          this.src = src;\n        });\n      }\n    }\n    set srcSetter(src) {\n      this.src = this.supported ? src : null;\n      this.src$.next(src);\n    }\n    get supported() {\n      return 'loading' in this.el.nativeElement;\n    }\n    onLoad() {\n      this.background = '';\n      this.animation = '';\n    }\n  }\n  TuiLazyLoadingDirective.ɵfac = function TuiLazyLoadingDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLazyLoadingDirective)(i0.ɵɵdirectiveInject(TuiLazyLoadingService), i0.ɵɵdirectiveInject(ElementRef));\n  };\n  TuiLazyLoadingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiLazyLoadingDirective,\n    selectors: [[\"img\", \"loading\", \"lazy\"]],\n    hostVars: 5,\n    hostBindings: function TuiLazyLoadingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"load\", function TuiLazyLoadingDirective_load_HostBindingHandler() {\n          return ctx.onLoad();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"src\", ctx.src, i0.ɵɵsanitizeUrl);\n        i0.ɵɵstyleProp(\"animation\", ctx.animation)(\"background\", ctx.background);\n      }\n    },\n    inputs: {\n      srcSetter: [0, \"src\", \"srcSetter\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiLazyLoadingService, IntersectionObserverService, TuiDestroyService])]\n  });\n  return TuiLazyLoadingDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiLazyLoadingModule = /*#__PURE__*/(() => {\n  class TuiLazyLoadingModule {}\n  TuiLazyLoadingModule.ɵfac = function TuiLazyLoadingModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLazyLoadingModule)();\n  };\n  TuiLazyLoadingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiLazyLoadingModule\n  });\n  TuiLazyLoadingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiLazyLoadingModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiLazyLoadingDirective, TuiLazyLoadingModule, TuiLazyLoadingService };\n//# sourceMappingURL=taiga-ui-kit-directives-lazy-loading.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}