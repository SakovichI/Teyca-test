{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ElementRef, Directive, Inject, Output, NgModule } from '@angular/core';\nimport { tuiPressedObservable } from '@taiga-ui/cdk/observables';\nimport { TUI_TAKE_ONLY_TRUSTED_EVENTS } from '@taiga-ui/cdk/tokens';\nlet TuiPressedDirective = /*#__PURE__*/(() => {\n  class TuiPressedDirective {\n    constructor(el, takeOnlyTrustedEvents) {\n      this.el = el;\n      this.takeOnlyTrustedEvents = takeOnlyTrustedEvents;\n      this.tuiPressedChange = tuiPressedObservable(this.el.nativeElement, {\n        onlyTrusted: this.takeOnlyTrustedEvents\n      });\n    }\n  }\n  TuiPressedDirective.ɵfac = function TuiPressedDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPressedDirective)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(TUI_TAKE_ONLY_TRUSTED_EVENTS));\n  };\n  TuiPressedDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiPressedDirective,\n    selectors: [[\"\", \"tuiPressedChange\", \"\"]],\n    outputs: {\n      tuiPressedChange: \"tuiPressedChange\"\n    },\n    standalone: false\n  });\n  return TuiPressedDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiPressedModule = /*#__PURE__*/(() => {\n  class TuiPressedModule {}\n  TuiPressedModule.ɵfac = function TuiPressedModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPressedModule)();\n  };\n  TuiPressedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiPressedModule\n  });\n  TuiPressedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiPressedModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiPressedDirective, TuiPressedModule };\n//# sourceMappingURL=taiga-ui-cdk-directives-pressed.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}