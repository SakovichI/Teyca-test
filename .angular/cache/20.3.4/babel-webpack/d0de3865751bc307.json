{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { forwardRef, ElementRef, Directive, Inject, HostBinding, Pipe, EventEmitter, ChangeDetectorRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Self, ViewChild, ContentChild, Input, Output, HostListener, NgModule } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, TuiIdService, CHAR_NO_BREAK_SPACE, AbstractTuiNullableControl, tuiIsNativeFocused, EMPTY_ARRAY, TUI_IS_MOBILE, tuiAsFocusableItemAccessor, tuiPure, TuiLetModule, TuiFocusedModule, TuiFocusVisibleModule, TuiPressedModule, TuiHoveredModule, TuiFocusableModule, TuiDroppableModule, TuiItemDirective } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { MODE_PROVIDER, TuiWrapperModule, TuiSvgModule, TuiLinkModule, TuiLoaderModule, TuiButtonModule, TuiGroupModule } from '@taiga-ui/core';\nimport { TUI_INPUT_FILE_TEXTS, TUI_DIGITAL_INFORMATION_UNITS } from '@taiga-ui/kit/tokens';\nimport { tuiGetAcceptArray } from '@taiga-ui/kit/utils/files';\nimport * as i7 from 'rxjs';\nimport { combineLatest, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { tuiFormatSize } from '@taiga-ui/kit/utils';\nimport { TuiFilesModule, TuiFilesComponent, TuiFileComponent } from '@taiga-ui/kit/components/files';\nconst _c0 = [\"input\"];\nconst _c1 = [\"formatRejection\"];\nconst _c2 = [\"maxSizeRejection\"];\nconst _c3 = [[[\"input\"]]];\nconst _c4 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputFilesComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiInputFilesComponent_div_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r2 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r2, \" \");\n  }\n}\nfunction TuiInputFilesComponent_div_4_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n  if (rf & 2) {\n    const text_r3 = ctx.polymorpheusOutlet;\n    i0.ɵɵproperty(\"textContent\", text_r3);\n  }\n}\nfunction TuiInputFilesComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 8);\n    i0.ɵɵtemplate(2, TuiInputFilesComponent_div_4_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TuiInputFilesComponent_div_4_span_4_Template, 1, 1, \"span\", 10);\n    i0.ɵɵpipe(5, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", i0.ɵɵpipeBind1(3, 2, ctx_r3.computedLink$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", i0.ɵɵpipeBind1(5, 4, ctx_r3.computedLabel$));\n  }\n}\nfunction TuiInputFilesComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelement(2, \"input\", 12, 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"accept\", ctx_r3.accept)(\"id\", ctx_r3.id)(\"multiple\", ctx_r3.multiple)(\"tuiFocusable\", ctx_r3.focusable);\n  }\n}\nfunction TuiInputFilesComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"async\");\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ((tmp_3_0 = i0.ɵɵpipeBind1(1, 1, ctx_r3.inputFileTexts$)) == null ? null : tmp_3_0.formatRejectionReason) || \"\", \"\\n\");\n  }\n}\nfunction TuiInputFilesComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n    i0.ɵɵpipe(1, \"tuiMaxSizeRejectionError\");\n    i0.ɵɵpipe(2, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 3, i0.ɵɵpipeBind1(1, 1, ctx_r3.maxFileSize)), \"\\n\");\n  }\n}\nconst TUI_INPUT_FILES_DEFAULT_OPTIONS = {\n  capture: null,\n  accepts: '',\n  multiple: false,\n  size: 'm',\n  maxFileSize: 30 * 1024 * 1024 // 30 MiB\n};\n/**\n * Default parameters for input files component\n */\nconst TUI_INPUT_FILES_OPTIONS = tuiCreateToken(TUI_INPUT_FILES_DEFAULT_OPTIONS);\nfunction tuiInputFilesOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_FILES_OPTIONS, options, TUI_INPUT_FILES_DEFAULT_OPTIONS);\n}\nlet TuiInputFilesDirective = /*#__PURE__*/(() => {\n  class TuiInputFilesDirective {\n    constructor(host, el, idService, options) {\n      this.host = host;\n      this.el = el;\n      this.idService = idService;\n      this.options = options;\n    }\n    get tabIndex() {\n      return this.host.focusable ? 0 : -1;\n    }\n    get id() {\n      return this.el.nativeElement.id || this.idService.generate();\n    }\n    get accept() {\n      var _a;\n      return (_a = this.el.nativeElement.accept) !== null && _a !== void 0 ? _a : this.options.accepts;\n    }\n    get multiple() {\n      var _a;\n      return (_a = this.el.nativeElement.multiple) !== null && _a !== void 0 ? _a : this.options.multiple;\n    }\n    get capture() {\n      var _a;\n      return (_a = this.el.nativeElement.getAttribute('capture')) !== null && _a !== void 0 ? _a : this.options.capture;\n    }\n    get input() {\n      return this.el.nativeElement;\n    }\n  }\n  TuiInputFilesDirective.ɵfac = function TuiInputFilesDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputFilesDirective)(i0.ɵɵdirectiveInject(forwardRef(() => TuiInputFilesComponent)), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(TuiIdService), i0.ɵɵdirectiveInject(TUI_INPUT_FILES_OPTIONS));\n  };\n  TuiInputFilesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiInputFilesDirective,\n    selectors: [[\"input\", \"tuiInputFiles\", \"\"]],\n    hostAttrs: [\"type\", \"file\", 1, \"t-native\"],\n    hostVars: 5,\n    hostBindings: function TuiInputFilesDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"tabIndex\", ctx.tabIndex)(\"id\", ctx.id)(\"accept\", ctx.accept)(\"multiple\", ctx.multiple);\n        i0.ɵɵattribute(\"capture\", ctx.capture);\n      }\n    },\n    standalone: false\n  });\n  return TuiInputFilesDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMaxSizeRejectionErrorPipe = /*#__PURE__*/(() => {\n  class TuiMaxSizeRejectionErrorPipe {\n    constructor(inputFileTexts$, units$) {\n      this.inputFileTexts$ = inputFileTexts$;\n      this.units$ = units$;\n    }\n    transform(maxFileSize) {\n      return combineLatest([this.inputFileTexts$, this.units$]).pipe(map(([{\n        maxSizeRejectionReason\n      }, units]) => `${maxSizeRejectionReason}${CHAR_NO_BREAK_SPACE}${tuiFormatSize(units, maxFileSize)}`));\n    }\n  }\n  TuiMaxSizeRejectionErrorPipe.ɵfac = function TuiMaxSizeRejectionErrorPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMaxSizeRejectionErrorPipe)(i0.ɵɵdirectiveInject(TUI_INPUT_FILE_TEXTS, 16), i0.ɵɵdirectiveInject(TUI_DIGITAL_INFORMATION_UNITS, 16));\n  };\n  TuiMaxSizeRejectionErrorPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"tuiMaxSizeRejectionError\",\n    type: TuiMaxSizeRejectionErrorPipe,\n    pure: true,\n    standalone: false\n  });\n  return TuiMaxSizeRejectionErrorPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputFilesComponent = /*#__PURE__*/(() => {\n  class TuiInputFilesComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, isMobile, inputFileTexts$, options) {\n      super(control, cdr);\n      this.isMobile = isMobile;\n      this.inputFileTexts$ = inputFileTexts$;\n      this.options = options;\n      this.files = null;\n      /**\n       * @deprecated: use `<input tuiInputFiles accept=\"image/*\" />`\n       */\n      this.accept = this.options.accepts;\n      /**\n       * @deprecated: use `<input tuiInputFiles multiple />`\n       */\n      this.multiple = this.options.multiple;\n      this.size = this.options.size;\n      this.maxFileSize = this.options.maxFileSize;\n      this.reject = new EventEmitter();\n    }\n    get computedMultiple() {\n      var _a, _b;\n      return (_b = (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.multiple) !== null && _b !== void 0 ? _b : this.multiple;\n    }\n    get computedAccept() {\n      var _a, _b;\n      return (_b = (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.accept) !== null && _b !== void 0 ? _b : this.accept;\n    }\n    get nativeFocusableElement() {\n      var _a;\n      return ((_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeElement) || null;\n    }\n    get focused() {\n      return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get computedPseudoHovered() {\n      var _a;\n      return (_a = this.pseudoHover) !== null && _a !== void 0 ? _a : this.fileDragged || null;\n    }\n    get computedLink$() {\n      return this.computeLink$(this.fileDragged, this.computedMultiple, this.link);\n    }\n    get computedLabel$() {\n      return this.computeLabel$(this.isMobile, this.fileDragged, this.computedMultiple, this.label);\n    }\n    get fileDragged() {\n      return !!this.files && !this.computedDisabled;\n    }\n    get arrayValue() {\n      return this.getValueArray(this.value);\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    onFilesSelected() {\n      var _a, _b, _c;\n      const input = (_b = (_a = this.nativeInput) === null || _a === void 0 ? void 0 : _a.input) !== null && _b !== void 0 ? _b : (_c = this.input) === null || _c === void 0 ? void 0 : _c.nativeElement;\n      if (!input) {\n        return;\n      }\n      this.processSelectedFiles(input.files);\n      input.value = '';\n    }\n    onDropped(event) {\n      this.files = null;\n      this.processSelectedFiles(event.files);\n    }\n    onDragOver(dataTransfer) {\n      this.files = dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.files;\n    }\n    removeFile(removedFile) {\n      this.value = this.computedMultiple ? this.arrayValue.filter(file => file !== removedFile) : null;\n    }\n    computeLink$(fileDragged, multiple, link) {\n      return fileDragged ? of('') : this.inputFileTexts$.pipe(map(texts => multiple && !link ? texts.defaultLinkMultiple : link || texts.defaultLinkSingle));\n    }\n    computeLabel$(isMobile, fileDragged, multiple, label) {\n      if (isMobile) {\n        return of('');\n      }\n      if (fileDragged) {\n        return this.inputFileTexts$.pipe(map(texts => multiple ? texts.dropMultiple : texts.drop));\n      }\n      return this.inputFileTexts$.pipe(map(texts => multiple && !label ? texts.defaultLabelMultiple : label || texts.defaultLabelSingle));\n    }\n    getValueArray(value) {\n      if (!value) {\n        return EMPTY_ARRAY;\n      }\n      return Array.isArray(value) ? value : [value];\n    }\n    processSelectedFiles(files) {\n      // IE11 after selecting a file through the open dialog generates a second event passing an empty FileList.\n      if (!(files === null || files === void 0 ? void 0 : files.length)) {\n        return;\n      }\n      const errors = {\n        formatRejection: this.formatRejection,\n        maxSizeRejection: this.maxSizeRejection\n      };\n      const newFiles = this.computedMultiple ? Array.from(files) : [files[0]];\n      const tooBigFiles = newFiles.filter(file => file.size > this.maxFileSize);\n      const wrongFormatFiles = newFiles.filter(file => !this.isFormatAcceptable(file) && !tooBigFiles.includes(file));\n      const acceptedFiles = newFiles.filter(file => !tooBigFiles.includes(file) && !wrongFormatFiles.includes(file));\n      if (tooBigFiles.length || wrongFormatFiles.length) {\n        this.rejectFiles([...tooBigFiles.map(file => ({\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          content: errors.maxSizeRejection\n        })), ...wrongFormatFiles.map(file => ({\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          content: errors.formatRejection\n        }))]);\n      }\n      this.value = this.computedMultiple ? [...this.arrayValue, ...acceptedFiles] : acceptedFiles[0] || null;\n    }\n    isFormatAcceptable(file) {\n      if (!this.computedAccept) {\n        return true;\n      }\n      const extension = `.${(file.name.split('.').pop() || '').toLowerCase()}`;\n      return tuiGetAcceptArray(this.computedAccept).some(format => format === extension || format === file.type || format.split('/')[1] === '*' && file.type.split('/')[0] === format.split('/')[0]);\n    }\n    rejectFiles(rejectedFiles) {\n      this.reject.emit(this.computedMultiple ? rejectedFiles : rejectedFiles[0]);\n    }\n  }\n  TuiInputFilesComponent.ɵfac = function TuiInputFilesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputFilesComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TUI_INPUT_FILE_TEXTS), i0.ɵɵdirectiveInject(TUI_INPUT_FILES_OPTIONS));\n  };\n  TuiInputFilesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputFilesComponent,\n    selectors: [[\"tui-input-files\"]],\n    contentQueries: function TuiInputFilesComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TuiInputFilesDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nativeInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    viewQuery: function TuiInputFilesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formatRejection = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.maxSizeRejection = _t.first);\n      }\n    },\n    hostBindings: function TuiInputFilesComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focusin\", function TuiInputFilesComponent_focusin_HostBindingHandler() {\n          return ctx.onFocused(true);\n        })(\"focusout\", function TuiInputFilesComponent_focusout_HostBindingHandler() {\n          return ctx.onFocused(false);\n        })(\"change\", function TuiInputFilesComponent_change_HostBindingHandler() {\n          return ctx.onFilesSelected();\n        });\n      }\n    },\n    inputs: {\n      link: \"link\",\n      label: \"label\",\n      accept: \"accept\",\n      multiple: \"multiple\",\n      size: \"size\",\n      maxFileSize: \"maxFileSize\"\n    },\n    outputs: {\n      reject: \"reject\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MODE_PROVIDER, tuiAsFocusableItemAccessor(TuiInputFilesComponent)]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 10,\n    vars: 12,\n    consts: [[\"formatRejection\", \"\"], [\"maxSizeRejection\", \"\"], [\"input\", \"\"], [\"appearance\", \"input-file\", \"tuiWrapper\", \"\", 1, \"t-wrapper\", 3, \"active\", \"disabled\", \"focus\", \"hover\"], [\"automation-id\", \"tui-input-file__label\", 1, \"t-label\", 3, \"mousedown.prevent.silent\", \"tuiDroppableDragOverChange\", \"tuiDroppableDropped\"], [1, \"t-description\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [\"tuiLink\", \"\"], [4, \"polymorpheusOutlet\"], [3, \"textContent\", 4, \"polymorpheusOutlet\"], [3, \"textContent\"], [\"title\", \"\", \"type\", \"file\", 1, \"t-native\", 3, \"accept\", \"id\", \"multiple\", \"tuiFocusable\"]],\n    template: function TuiInputFilesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵelementStart(0, \"div\", 3)(1, \"label\", 4);\n        i0.ɵɵlistener(\"mousedown.prevent.silent\", function TuiInputFilesComponent_Template_label_mousedown_prevent_silent_1_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(0);\n        })(\"tuiDroppableDragOverChange\", function TuiInputFilesComponent_Template_label_tuiDroppableDragOverChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onDragOver($event));\n        })(\"tuiDroppableDropped\", function TuiInputFilesComponent_Template_label_tuiDroppableDropped_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onDropped($event));\n        });\n        i0.ɵɵelementStart(2, \"div\", 5);\n        i0.ɵɵtemplate(3, TuiInputFilesComponent_ng_container_3_Template, 1, 0, \"ng-container\", 6)(4, TuiInputFilesComponent_div_4_Template, 6, 6, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, TuiInputFilesComponent_ng_container_5_Template, 4, 4, \"ng-container\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, TuiInputFilesComponent_ng_template_6_Template, 2, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(8, TuiInputFilesComponent_ng_template_8_Template, 3, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"_mobile\", ctx.isMobile);\n        i0.ɵɵproperty(\"active\", ctx.pseudoActive)(\"disabled\", ctx.computedDisabled)(\"focus\", ctx.computedFocused)(\"hover\", ctx.pseudoHover || ctx.fileDragged || null);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template || null)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c4, ctx.fileDragged));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.template);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.readOnly && !ctx.computedDisabled);\n      }\n    },\n    dependencies: [i1.TuiLinkComponent, i1.TuiWrapperDirective, i2.TuiDroppableDirective, i3.NgTemplateOutlet, i3.NgIf, i4.PolymorpheusOutletDirective, i2.TuiFocusableDirective, i3.AsyncPipe, TuiMaxSizeRejectionErrorPipe],\n    styles: [\"tui-input-files{display:block;min-height:var(--tui-height-l);border-radius:var(--tui-radius-m);font:var(--tui-font-text-m)}tui-input-files .t-native{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}tui-input-files .t-native::-webkit-file-upload-button{display:none}tui-input-files .t-native+.t-native{display:none}tui-input-files .t-label{width:100%;min-height:inherit;text-align:center}tui-input-files .t-description{display:flex;justify-content:center;align-items:center;height:100%;min-height:inherit;padding:1rem 0;box-sizing:border-box}[tuiWrapper][data-appearance=input-file]{background:transparent;word-wrap:break-word;color:var(--tui-text-02);min-height:inherit;border-radius:inherit;padding:0 .5rem;box-sizing:border-box}[tuiWrapper][data-appearance=input-file]:after{border:1px dashed;color:var(--tui-link)}[tuiWrapper][data-appearance=input-file]._mobile:after{border:1px solid}[tuiWrapper][data-appearance=input-file]:disabled:disabled:after,[tuiWrapper][data-appearance=input-file][data-state=disabled][data-state=disabled]:after{color:var(--tui-text-03)}:focus-visible:not([data-focused=\\\"false\\\"])>[tuiWrapper][data-appearance=input-file]:after,[data-focused=true]>[tuiWrapper][data-appearance=input-file]:after{border-style:solid;border-width:2px;color:var(--tui-focus)}[tuiWrapper][data-appearance=input-file]:focus-visible:focus-visible:after{border-style:solid;border-width:2px;color:var(--tui-focus)}[tuiWrapper][data-appearance=input-file]._focused._focused:after{border-style:solid;border-width:2px;color:var(--tui-focus)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]{color:var(--tui-text-01-night)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:after{color:var(--tui-text-01-night)}:focus-visible:not([data-focused=\\\"false\\\"])>[tuiWrapper][data-appearance=input-file][data-mode=onDark]:after,[data-focused=true]>[tuiWrapper][data-appearance=input-file][data-mode=onDark]:after{color:var(--tui-text-01-night)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:focus-visible:focus-visible:after{color:var(--tui-text-01-night)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]._focused._focused:after{color:var(--tui-text-01-night)}@media (hover: hover){[tuiWrapper][data-appearance=input-file][data-mode=onDark]:hover:not(._no-hover),[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=hover]{background:var(--tui-clear-inverse-hover)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:hover:not(._no-hover):after,[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=hover]:after{color:var(--tui-text-03-night)}}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:active:not(._no-active),[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active],[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active]:hover{background:var(--tui-clear-inverse-active)}[tuiWrapper][data-appearance=input-file][data-mode=onDark]:active:not(._no-active):after,[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active]:after,[tuiWrapper][data-appearance=input-file][data-mode=onDark][data-state=active]:hover:after{color:var(--tui-text-03-night)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]{color:var(--tui-text-01)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:after{color:var(--tui-text-01)}@media (hover: hover){[tuiWrapper][data-appearance=input-file][data-mode=onLight]:hover:not(._no-hover),[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=hover]{background:var(--tui-clear-hover)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:hover:not(._no-hover):after,[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=hover]:after{color:var(--tui-text-03)}}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:active:not(._no-active),[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active],[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active]:hover{background:var(--tui-clear-active)}[tuiWrapper][data-appearance=input-file][data-mode=onLight]:active:not(._no-active):after,[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active]:after,[tuiWrapper][data-appearance=input-file][data-mode=onLight][data-state=active]:hover:after{color:var(--tui-text-03)}@media (hover: hover){[tuiWrapper][data-appearance=input-file]:hover:not(._no-hover),[tuiWrapper][data-appearance=input-file][data-state=hover]{background:var(--tui-secondary)}[tuiWrapper][data-appearance=input-file]:hover:not(._no-hover):after,[tuiWrapper][data-appearance=input-file][data-state=hover]:after{color:var(--tui-link-hover)}}[tuiWrapper][data-appearance=input-file]:active:not(._no-active),[tuiWrapper][data-appearance=input-file][data-state=active],[tuiWrapper][data-appearance=input-file][data-state=active]:hover{background:var(--tui-secondary-hover)}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  __decorate([tuiPure], TuiInputFilesComponent.prototype, \"computeLink$\", null);\n  __decorate([tuiPure], TuiInputFilesComponent.prototype, \"computeLabel$\", null);\n  __decorate([tuiPure], TuiInputFilesComponent.prototype, \"getValueArray\", null);\n  return TuiInputFilesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputFilesModule = /*#__PURE__*/(() => {\n  class TuiInputFilesModule {}\n  TuiInputFilesModule.ɵfac = function TuiInputFilesModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputFilesModule)();\n  };\n  TuiInputFilesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputFilesModule\n  });\n  TuiInputFilesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiLetModule, TuiFocusedModule, TuiFocusVisibleModule, TuiPressedModule, TuiHoveredModule, TuiFocusableModule, TuiDroppableModule, TuiWrapperModule, TuiSvgModule, TuiLinkModule, TuiLoaderModule, TuiButtonModule, TuiGroupModule, TuiFilesModule]]\n  });\n  return TuiInputFilesModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_FILES_DEFAULT_OPTIONS, TUI_INPUT_FILES_OPTIONS, TuiInputFilesComponent, TuiInputFilesDirective, TuiInputFilesModule, tuiInputFilesOptionsProvider };\n//# sourceMappingURL=taiga-ui-kit-components-input-files.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}