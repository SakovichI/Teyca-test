{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, TUI_DEFAULT_IDENTITY_MATCHER, tuiAsFocusableItemAccessor, tuiAsControl } from '@taiga-ui/cdk';\nimport * as i3 from '@taiga-ui/core';\nimport { TuiAppearance, TuiModeDirective, TuiWrapperModule } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/radio';\nimport { TuiRadioComponent, TuiRadioModule } from '@taiga-ui/kit/components/radio';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\"];\nfunction TuiRadioBlockComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nlet TuiRadioBlockComponent = /*#__PURE__*/(() => {\n  class TuiRadioBlockComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, modeDirective) {\n      super(control, cdr);\n      this.modeDirective = modeDirective;\n      this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;\n      this.contentAlign = 'right';\n      this.size = 'l';\n      this.hideRadio = false;\n      this.pseudoDisabled = false;\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.radio) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get focused() {\n      return !!this.radio && this.radio.focused;\n    }\n    get computedDisabled() {\n      return this.disabled || this.pseudoDisabled;\n    }\n    get checked() {\n      var _a;\n      return !!((_a = this.radio) === null || _a === void 0 ? void 0 : _a.checked) && this.hideRadio;\n    }\n    get checkboxSize() {\n      return this.size === 'l' ? 'l' : 'm';\n    }\n    get appearance() {\n      var _a;\n      if (!((_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.mode)) {\n        return this.checked ? TuiAppearance.WhiteblockActive : TuiAppearance.Whiteblock;\n      }\n      return this.checked ? TuiAppearance.Primary : TuiAppearance.Secondary;\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    onFocusVisible(focusVisible) {\n      this.updateFocusVisible(focusVisible);\n    }\n    /** @deprecated use 'value' setter */\n    onModelChange(value) {\n      this.value = value;\n    }\n  }\n  TuiRadioBlockComponent.ɵfac = function TuiRadioBlockComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioBlockComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TuiModeDirective, 8));\n  };\n  TuiRadioBlockComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiRadioBlockComponent,\n    selectors: [[\"tui-radio-block\"]],\n    viewQuery: function TuiRadioBlockComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiRadioComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radio = _t.first);\n      }\n    },\n    hostVars: 8,\n    hostBindings: function TuiRadioBlockComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-align\", ctx.contentAlign)(\"data-size\", ctx.size);\n        i0.ɵɵclassProp(\"_hidden_input\", ctx.hideRadio)(\"_disabled\", ctx.computedDisabled)(\"_active\", ctx.checked);\n      }\n    },\n    inputs: {\n      item: \"item\",\n      identityMatcher: \"identityMatcher\",\n      contentAlign: \"contentAlign\",\n      size: \"size\",\n      hideRadio: \"hideRadio\",\n      pseudoDisabled: \"pseudoDisabled\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiRadioBlockComponent), tuiAsControl(TuiRadioBlockComponent)]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 7,\n    vars: 22,\n    consts: [[4, \"ngIf\"], [\"tuiWrapper\", \"\", 1, \"t-wrapper\", 3, \"active\", \"appearance\", \"disabled\", \"focus\", \"hover\", \"invalid\"], [1, \"t-view\", 3, \"ngModelChange\", \"focusedChange\", \"focusVisibleChange\", \"focusable\", \"identityMatcher\", \"item\", \"name\", \"nativeId\", \"pseudoActive\", \"pseudoDisabled\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"readOnly\", \"size\", \"ngModel\"], [1, \"t-label\"], [1, \"t-content\"]],\n    template: function TuiRadioBlockComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, TuiRadioBlockComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementStart(2, \"label\", 1)(3, \"tui-radio\", 2);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiRadioBlockComponent_Template_tui_radio_ngModelChange_3_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"focusedChange\", function TuiRadioBlockComponent_Template_tui_radio_focusedChange_3_listener($event) {\n          return ctx.onFocused($event);\n        })(\"focusVisibleChange\", function TuiRadioBlockComponent_Template_tui_radio_focusVisibleChange_3_listener($event) {\n          return ctx.onFocusVisible($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n        i0.ɵɵprojection(6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.modeDirective && i0.ɵɵpipeBind1(1, 20, ctx.modeDirective.change$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"active\", ctx.pseudoActive)(\"appearance\", ctx.appearance)(\"disabled\", ctx.computedDisabled)(\"focus\", ctx.computedFocusVisible)(\"hover\", ctx.pseudoHover)(\"invalid\", ctx.computedInvalid);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"focusable\", ctx.focusable)(\"identityMatcher\", ctx.identityMatcher)(\"item\", ctx.item)(\"name\", ctx.computedName || \"\")(\"nativeId\", ctx.nativeId)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoDisabled\", ctx.computedDisabled)(\"pseudoFocus\", false)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.computedInvalid)(\"readOnly\", ctx.readOnly)(\"size\", ctx.checkboxSize);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.value);\n      }\n    },\n    dependencies: [i1.TuiRadioComponent, i2.NgIf, i3.TuiWrapperDirective, i4.NgControlStatus, i4.NgModel, i2.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{font:var(--tui-font-text-s);color:var(--tui-text-01);display:inline-block;vertical-align:top;align-items:flex-start;border-radius:var(--tui-radius-m)}[data-size=xs][_nghost-%COMP%]{font:var(--tui-font-text-xs)}[data-size=m][_nghost-%COMP%], [data-size=l][_nghost-%COMP%]{font:var(--tui-font-text-m)}._disabled[_nghost-%COMP%], ._readonly[_nghost-%COMP%]{pointer-events:none}.t-wrapper[_ngcontent-%COMP%]{position:relative;display:flex;align-items:inherit;box-sizing:border-box;border-radius:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;padding:0 1rem 0 0}[data-size=xs][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding-right:.5rem}[data-align=right][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{flex-direction:row-reverse;padding:0 0 0 1rem}[data-align=right][data-size=xs][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding-left:.5rem}[data-size=xs]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:0 .5rem}[data-size=xs]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]:not(._focused):after{border-width:1px}[data-size=s]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:0 var(--tui-padding-s)}[data-size=m]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:0 var(--tui-padding-m)}[data-size=l]._hidden_input[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{padding:0 var(--tui-padding-l)}[data-size=xs][_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{margin:calc(var(--tui-height-xs) / 2 - .5rem) .25rem;transform:scale(.75)}[data-size=s][_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{margin:calc(var(--tui-height-s) / 2 - .5rem) .5rem}[data-size=m][_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{margin:calc(var(--tui-height-m) / 2 - .5rem) .75rem}[data-size=l][_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{margin:calc(var(--tui-height-l) / 2 - .75rem) 1rem}._hidden_input[_nghost-%COMP%]   .t-view[_ngcontent-%COMP%]{position:absolute;height:1px;width:1px;margin:-1px;border:0;padding:0;overflow:hidden;clip:rect(0,0,0,0);-webkit-clip-path:inset(0);clip-path:inset(0)}.t-label[_ngcontent-%COMP%]{display:flex;flex-grow:1;align-self:flex-start;align-items:center;overflow:hidden}[data-size=xs][_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{min-height:var(--tui-height-xs)}[data-size=s][_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{min-height:var(--tui-height-s)}[data-size=m][_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{min-height:var(--tui-height-m)}[data-size=l][_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{min-height:var(--tui-height-l)}._hidden_input[_nghost-%COMP%]   .t-label[_ngcontent-%COMP%]{text-align:center;justify-content:center}.t-content[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}\"],\n    changeDetection: 0\n  });\n  return TuiRadioBlockComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiRadioBlockModule = /*#__PURE__*/(() => {\n  class TuiRadioBlockModule {}\n  TuiRadioBlockModule.ɵfac = function TuiRadioBlockModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioBlockModule)();\n  };\n  TuiRadioBlockModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiRadioBlockModule\n  });\n  TuiRadioBlockModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, TuiRadioModule, TuiWrapperModule]]\n  });\n  return TuiRadioBlockModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiRadioBlockComponent, TuiRadioBlockModule };\n//# sourceMappingURL=taiga-ui-kit-components-radio-block.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}