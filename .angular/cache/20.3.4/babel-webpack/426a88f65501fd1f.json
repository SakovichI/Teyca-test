{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ElementRef, Directive, Inject, Output, HostListener, NgModule } from '@angular/core';\nimport { USER_AGENT } from '@ng-web-apis/common';\nimport { tuiIsFirefox } from '@taiga-ui/cdk';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, skip } from 'rxjs/operators';\nlet TuiPresentDirective = /*#__PURE__*/(() => {\n  class TuiPresentDirective {\n    constructor({\n      nativeElement\n    }, userAgent) {\n      this.visibility$ = new BehaviorSubject(false);\n      this.tuiPresentChange = this.visibility$.pipe(distinctUntilChanged(), skip(1));\n      if (tuiIsFirefox(userAgent)) {\n        return;\n      }\n      const observer = new MutationObserver(() => {\n        if (!nativeElement.offsetParent && nativeElement.offsetWidth === 0 && nativeElement.offsetHeight === 0) {\n          this.visibility$.next(false);\n        }\n      });\n      observer.observe(nativeElement, {\n        attributes: true,\n        attributeFilter: ['style', 'class']\n      });\n    }\n    /**\n     * Someday animationcancel would work and mutation observer would not be needed:\n     * https://drafts.csswg.org/css-animations/#eventdef-animationevent-animationcancel\n     * It would also trigger on CSS like display: none on parent nodes which is awesome\n     * but currently only works in Firefox\n     * ___\n     * TODO: remove MutationObserver when we bump versions of supported browsers:\n     *** Safari 12+\n     *** Chrome 83+\n     * See: {@link https://caniuse.com/mdn-api_window_animationcancel_event}\n     */\n    onAnimation(visibility) {\n      this.visibility$.next(visibility);\n    }\n    ngOnDestroy() {\n      this.visibility$.next(false);\n    }\n  }\n  TuiPresentDirective.ɵfac = function TuiPresentDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPresentDirective)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(USER_AGENT));\n  };\n  TuiPresentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiPresentDirective,\n    selectors: [[\"\", \"tuiPresentChange\", \"\"]],\n    hostVars: 2,\n    hostBindings: function TuiPresentDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"animationcancel.self\", function TuiPresentDirective_animationcancel_self_HostBindingHandler() {\n          return ctx.onAnimation(false);\n        })(\"animationstart.self\", function TuiPresentDirective_animationstart_self_HostBindingHandler() {\n          return ctx.onAnimation(true);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"animation\", \"tuiPresent 1s infinite\");\n      }\n    },\n    outputs: {\n      tuiPresentChange: \"tuiPresentChange\"\n    },\n    standalone: false\n  });\n  return TuiPresentDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiPresentModule = /*#__PURE__*/(() => {\n  class TuiPresentModule {}\n  TuiPresentModule.ɵfac = function TuiPresentModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiPresentModule)();\n  };\n  TuiPresentModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiPresentModule\n  });\n  TuiPresentModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiPresentModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiPresentDirective, TuiPresentModule };\n//# sourceMappingURL=taiga-ui-kit-directives-present.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}