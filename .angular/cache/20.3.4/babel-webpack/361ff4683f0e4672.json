{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ElementRef, Directive, Inject, Input, NgModule } from '@angular/core';\nimport * as i1 from '@taiga-ui/cdk';\nimport { tuiGetActualTarget, TuiResizeModule } from '@taiga-ui/cdk';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\", [[\"\", \"tuiSwipeAction\", \"\"]]];\nconst _c1 = [\"*\", \"[tuiSwipeAction]\"];\nlet TuiSwipeActionsComponent = /*#__PURE__*/(() => {\n  class TuiSwipeActionsComponent {\n    constructor() {\n      this.actionsWidth = 0;\n    }\n    onResize({\n      target\n    }) {\n      this.actionsWidth = target.clientWidth;\n    }\n  }\n  TuiSwipeActionsComponent.ɵfac = function TuiSwipeActionsComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiSwipeActionsComponent)();\n  };\n  TuiSwipeActionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiSwipeActionsComponent,\n    selectors: [[\"tui-swipe-actions\"]],\n    hostVars: 2,\n    hostBindings: function TuiSwipeActionsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"--t-actions-width\", ctx.actionsWidth);\n      }\n    },\n    standalone: false,\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"t-content\"], [1, \"t-actions\", 3, \"tuiResize\"]],\n    template: function TuiSwipeActionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵlistener(\"tuiResize\", function TuiSwipeActionsComponent_Template_div_tuiResize_2_listener($event) {\n          return ctx.onResize($event[0]);\n        });\n        i0.ɵɵprojection(3, 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i1.TuiResizeDirective],\n    styles: [\"[_nghost-%COMP%]{scrollbar-width:none;-ms-overflow-style:none;--tui-action-gap: 24;--tui-actions-padding: .5rem;--tui-item-size: 44;display:flex;width:-webkit-fill-available;width:stretch;align-items:center;overflow-x:scroll;overflow-y:hidden;scroll-snap-type:x mandatory;perspective:1px;perspective-origin:calc(100% + calc(1px * var(--tui-item-size) / 2) + var(--tui-actions-padding))}[_nghost-%COMP%]::-webkit-scrollbar, [_nghost-%COMP%]::-webkit-scrollbar-thumb{display:none}.t-content[_ngcontent-%COMP%]{scroll-snap-align:start;flex-shrink:0;width:100%}.t-actions[_ngcontent-%COMP%]{display:flex;grid-gap:calc(1px * var(--tui-action-gap));gap:calc(1px * var(--tui-action-gap));padding:0 1rem 0 var(--tui-actions-padding);scroll-snap-align:start;align-items:center;transform-style:preserve-3d;pointer-events:none;transform:translateZ(-.00001px)}.t-actions[_ngcontent-%COMP%]:empty{display:none}  .t-actions>*{pointer-events:auto}  .t-actions>*:nth-child(2){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(2 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (2 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}  .t-actions>*:nth-child(3){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(3 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (3 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}  .t-actions>*:nth-child(4){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(4 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (4 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}  .t-actions>*:nth-child(5){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(5 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (5 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}  .t-actions>*:nth-child(6){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(6 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (6 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}@media (hover: hover) and (pointer: fine){.t-actions[_ngcontent-%COMP%]{display:none}}\"],\n    changeDetection: 0\n  });\n  return TuiSwipeActionsComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiSwipeActionsAutoCloseDirective = /*#__PURE__*/(() => {\n  class TuiSwipeActionsAutoCloseDirective {\n    constructor(el) {\n      this.el = el;\n      this.autoClose = true;\n    }\n    handleEvent(event) {\n      const target = tuiGetActualTarget(event);\n      if (this.autoClose !== false && !this.el.nativeElement.contains(target)) {\n        this.close();\n      }\n    }\n    close() {\n      this.el.nativeElement.scrollTo({\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n  }\n  TuiSwipeActionsAutoCloseDirective.ɵfac = function TuiSwipeActionsAutoCloseDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiSwipeActionsAutoCloseDirective)(i0.ɵɵdirectiveInject(ElementRef));\n  };\n  TuiSwipeActionsAutoCloseDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiSwipeActionsAutoCloseDirective,\n    selectors: [[\"tui-swipe-actions\", \"autoClose\", \"\"]],\n    hostBindings: function TuiSwipeActionsAutoCloseDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"pointerdown.silent\", function TuiSwipeActionsAutoCloseDirective_pointerdown_silent_HostBindingHandler($event) {\n          return ctx.handleEvent($event);\n        }, i0.ɵɵresolveDocument)(\"focusin.silent\", function TuiSwipeActionsAutoCloseDirective_focusin_silent_HostBindingHandler($event) {\n          return ctx.handleEvent($event);\n        }, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      autoClose: \"autoClose\"\n    },\n    standalone: false\n  });\n  return TuiSwipeActionsAutoCloseDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiSwipeActionsModule = /*#__PURE__*/(() => {\n  class TuiSwipeActionsModule {}\n  TuiSwipeActionsModule.ɵfac = function TuiSwipeActionsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiSwipeActionsModule)();\n  };\n  TuiSwipeActionsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiSwipeActionsModule\n  });\n  TuiSwipeActionsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiResizeModule]]\n  });\n  return TuiSwipeActionsModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiSwipeActionsAutoCloseDirective, TuiSwipeActionsComponent, TuiSwipeActionsModule };\n//# sourceMappingURL=taiga-ui-experimental-components-swipe-action.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}