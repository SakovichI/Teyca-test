{"ast":null,"code":"import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { inject, RendererFactory2, InjectionToken, PLATFORM_ID, ElementRef } from '@angular/core';\nimport { WINDOW, NAVIGATOR, USER_AGENT } from '@ng-web-apis/common';\nimport { tuiTypedFromEvent } from '@taiga-ui/cdk/observables';\nimport { tuiCreateTokenFromFactory, tuiGetDocumentOrShadowRoot, tuiIsNativeMouseFocusable, tuiGetActualTarget, tuiCreateToken, tuiIsIos, tuiIsApple } from '@taiga-ui/cdk/utils';\nimport { BehaviorSubject, timer, merge, of, from, EMPTY } from 'rxjs';\nimport { switchMap, map, startWith, share, filter, takeUntil, repeatWhen, withLatestFrom, take, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { ÉµAnimationEngine } from '@angular/animations/browser';\nimport { InjectFlags } from '@taiga-ui/cdk/enums';\nimport { ALWAYS_FALSE_HANDLER, ALWAYS_TRUE_HANDLER } from '@taiga-ui/cdk/constants';\nimport { tuiCreateTokenFromFactory as tuiCreateTokenFromFactory$1 } from '@taiga-ui/cdk/utils/miscellaneous';\n\n/**\n * Element currently being removed by AnimationEngine\n */\nconst TUI_REMOVED_ELEMENT = tuiCreateTokenFromFactory(() => {\n  const stub = {\n    onRemovalComplete: () => {}\n  };\n  const element$ = new BehaviorSubject(null);\n  const engine = inject(ÉµAnimationEngine, InjectFlags.Optional) || stub;\n  const {\n    onRemovalComplete = stub.onRemovalComplete\n  } = engine;\n  engine.onRemovalComplete = (element, context) => {\n    element$.next(element);\n    onRemovalComplete.call(engine, element, context);\n  };\n  return element$.pipe(switchMap(element => timer(0).pipe(map(() => null), startWith(element))), share());\n});\n\n// Checks if focusout event should be considered leaving active zone\nfunction isValidFocusout(target, removedElement = null) {\n  return (\n    // Not due to switching tabs/going to DevTools\n    tuiGetDocumentOrShadowRoot(target).activeElement !== target &&\n    // Not due to button/input becoming disabled or under disabled fieldset\n    !target.matches(':disabled') &&\n    // Not due to element being removed from DOM\n    !(removedElement === null || removedElement === void 0 ? void 0 : removedElement.contains(target)) &&\n    // Not due to scrollable element became non-scrollable\n    tuiIsNativeMouseFocusable(target)\n  );\n}\nfunction shadowRootActiveElement(root) {\n  return merge(tuiTypedFromEvent(root, 'focusin').pipe(map(({\n    target\n  }) => target)), tuiTypedFromEvent(root, 'focusout').pipe(filter(({\n    target,\n    relatedTarget\n  }) => !!relatedTarget && isValidFocusout(target)), map(({\n    relatedTarget\n  }) => relatedTarget)));\n}\n/**\n * Active element on the document for ActiveZone\n */\nconst TUI_ACTIVE_ELEMENT = tuiCreateTokenFromFactory(() => {\n  const removedElement$ = inject(TUI_REMOVED_ELEMENT);\n  const win = inject(WINDOW);\n  const doc = inject(DOCUMENT);\n  const focusout$ = tuiTypedFromEvent(win, 'focusout');\n  const focusin$ = tuiTypedFromEvent(win, 'focusin');\n  const blur$ = tuiTypedFromEvent(win, 'blur');\n  const mousedown$ = tuiTypedFromEvent(win, 'mousedown');\n  const mouseup$ = tuiTypedFromEvent(win, 'mouseup');\n  return merge(focusout$.pipe(\n  // eslint-disable-next-line rxjs/no-unsafe-takeuntil\n  takeUntil(mousedown$),\n  /**\n   * TODO: replace to\n   * repeat({delay: () => mouseup$})\n   * in RxJS 7\n   */\n  // eslint-disable-next-line rxjs/no-ignored-notifier\n  repeatWhen(() => mouseup$), withLatestFrom(removedElement$), filter(([event, removedElement]) => isValidFocusout(tuiGetActualTarget(event), removedElement)), map(([{\n    relatedTarget\n  }]) => relatedTarget)), blur$.pipe(map(() => doc.activeElement), filter(element => !!(element === null || element === void 0 ? void 0 : element.matches('iframe')))), focusin$.pipe(switchMap(event => {\n    const target = tuiGetActualTarget(event);\n    const root = tuiGetDocumentOrShadowRoot(target);\n    return root === doc ? of(target) : shadowRootActiveElement(root).pipe(startWith(target));\n  })), mousedown$.pipe(switchMap(event => {\n    const actualTargetInCurrentTime = tuiGetActualTarget(event);\n    return !doc.activeElement || doc.activeElement === doc.body ? of(actualTargetInCurrentTime) : focusout$.pipe(take(1), map(\n    /**\n     * Do not use `map(() => tuiGetActualTarget(event))`\n     * because we have different result in runtime\n     */\n    () => actualTargetInCurrentTime), takeUntil(timer(0)));\n  }))).pipe(distinctUntilChanged(), share());\n});\n\n/**\n * A stream of alerts\n */\nconst TUI_ALERTS = tuiCreateToken([]);\nfunction tuiAsAlerts(useExisting) {\n  return {\n    provide: TUI_ALERTS,\n    multi: true,\n    useExisting\n  };\n}\nconst TUI_BASE_HREF = tuiCreateTokenFromFactory(() => {\n  var _a, _b;\n  return (_b = (_a = inject(DOCUMENT).querySelector('base')) === null || _a === void 0 ? void 0 : _a.href) !== null && _b !== void 0 ? _b : '';\n});\n\n/**\n * A Renderer2 for global services\n * https://github.com/angular/angular/issues/17824#issuecomment-353239017\n * @deprecated unnecessary\n * TODO: remove in 4.0\n */\nconst TUI_DEFAULT_RENDERER = tuiCreateTokenFromFactory(\n// @ts-ignore\n() => inject(RendererFactory2).createRenderer(null, null));\n\n/**\n * A stream of dialogs\n */\nconst TUI_DIALOGS = tuiCreateToken([]);\n// TODO: Refactor dialogs in 4.0 so there is no need for module imports\nfunction tuiAsDialog(useExisting) {\n  return {\n    provide: TUI_DIALOGS,\n    multi: true,\n    useExisting\n  };\n}\n\n/**\n * @deprecated: use {@link TUI_BASE_HREF}\n */\nconst TUI_ENSURE_BASE_HREF = tuiCreateTokenFromFactory(() => {\n  var _a;\n  const baseHref = (_a = inject(DOCUMENT).querySelector('base')) === null || _a === void 0 ? void 0 : _a.href;\n  if (baseHref) {\n    return baseHref;\n  }\n  const link = inject(DOCUMENT).createElement('a');\n  link.href = '';\n  return link.pathname;\n});\n\n/**\n * A component that can be focused\n */\nconst TUI_FOCUSABLE_ITEM_ACCESSOR = /*#__PURE__*/new InjectionToken('[TUI_FOCUSABLE_ITEM_ACCESSOR]');\nfunction tuiAsFocusableItemAccessor(useExisting) {\n  return {\n    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting\n  };\n}\nconst TUI_FONTS_READY = /*#__PURE__*/new InjectionToken('[TUI_FONTS_READY]', {\n  factory: () => {\n    var _a;\n    return from(((_a = inject(DOCUMENT).fonts) === null || _a === void 0 ? void 0 : _a.ready) || EMPTY).pipe(shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n  }\n});\n\n/**\n * iOS browser detection\n */\nconst TUI_IS_IOS = tuiCreateTokenFromFactory(() => tuiIsIos(inject(NAVIGATOR)));\n\n// https://stackoverflow.com/a/11381730/2706426 http://detectmobilebrowsers.com/\nconst firstRegex = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/;\nconst secondRegex = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/;\n/**\n * Mobile browser detection\n */\nconst TUI_IS_MOBILE = tuiCreateTokenFromFactory(() => firstRegex.test(inject(USER_AGENT).toLowerCase()) || secondRegex.test(inject(USER_AGENT).slice(0, 4).toLowerCase()));\n\n/**\n * Mobile browser that is not iOS (technically includes Windows Phone, Blackberry etc.)\n */\nconst TUI_IS_ANDROID = tuiCreateTokenFromFactory(() => inject(TUI_IS_MOBILE) && !inject(TUI_IS_IOS));\n\n/**\n * Apple(safari/webkit) detection\n */\nconst TUI_IS_APPLE = tuiCreateTokenFromFactory(() => tuiIsApple(inject(NAVIGATOR)));\n\n/**\n * Chromium browser engine detection\n */\nconst TUI_IS_CHROMIUM = tuiCreateTokenFromFactory(() => !!inject(WINDOW).chrome);\n\n/**\n * Detect if app is running under Cypress\n * {@link https://docs.cypress.io/faq/questions/using-cypress-faq#Is-there-any-way-to-detect-if-my-app-is-running-under-Cypress Cypress docs}\n */\nconst TUI_IS_CYPRESS = tuiCreateTokenFromFactory(() => !!inject(WINDOW).Cypress);\n\n/**\n * Detect if app is running under Playwright\n */\nconst TUI_IS_PLAYWRIGHT = tuiCreateTokenFromFactory(ALWAYS_FALSE_HANDLER);\n\n/**\n * Detect if app is running under any of test frameworks\n */\nconst TUI_IS_E2E = tuiCreateTokenFromFactory(() => inject(TUI_IS_CYPRESS) || inject(TUI_IS_PLAYWRIGHT));\n\n/**\n * Firefox browser engine detection\n */\nconst TUI_IS_FIREFOX = tuiCreateTokenFromFactory(() => {\n  var _a;\n  return typeof ((_a = inject(WINDOW)) === null || _a === void 0 ? void 0 : _a.mozCancelFullScreen) !== 'undefined';\n});\nconst TUI_IS_STACKBLITZ = tuiCreateTokenFromFactory(() => inject(WINDOW).location.host.endsWith('stackblitz.io'));\nconst TUI_IS_TOUCH = tuiCreateTokenFromFactory$1(() => inject(WINDOW).matchMedia('(pointer: coarse)').matches);\n\n/**\n * Webkit browser engine detection\n */\nconst TUI_IS_WEBKIT = tuiCreateTokenFromFactory(() => {\n  var _a;\n  return !!((_a = inject(WINDOW)) === null || _a === void 0 ? void 0 : _a.webkitConvertPointFromNodeToPage);\n});\n\n// TODO: Switch to factory in 4.0\nconst TUI_PLATFORM = tuiCreateToken('web');\nfunction tuiPlatformFactory() {\n  if (inject(TUI_IS_IOS)) {\n    return 'ios';\n  }\n  if (inject(TUI_IS_ANDROID)) {\n    return 'android';\n  }\n  return 'web';\n}\n\n/**\n * SSR safe default empty Range\n */\nconst TUI_RANGE = tuiCreateTokenFromFactory(() => isPlatformBrowser(inject(PLATFORM_ID)) ? new Range() : {});\n\n/**\n * Scrollable container\n */\nconst TUI_SCROLL_REF = tuiCreateTokenFromFactory(() => new ElementRef(inject(DOCUMENT).documentElement));\n\n/**\n * Swipe options\n */\nconst TUI_SWIPE_OPTIONS = tuiCreateToken({\n  timeout: 500,\n  threshold: 30\n});\n\n/**\n * @description:\n * The isTrusted read-only property of the Event interface is a boolean value that is true\n * when the event was generated by a user action, and false when the event was created or\n * modified by a script or dispatched via EventTarget.dispatchEvent().\n */\nconst TUI_TAKE_ONLY_TRUSTED_EVENTS = tuiCreateTokenFromFactory(ALWAYS_TRUE_HANDLER);\nconst TUI_TOUCH_SUPPORTED = tuiCreateTokenFromFactory(() => inject(WINDOW).matchMedia('(any-pointer: coarse)').matches);\nconst TUI_WINDOW_SIZE = /*#__PURE__*/new InjectionToken('[TUI_WINDOW_SIZE]', {\n  factory: () => {\n    const w = inject(WINDOW);\n    return tuiTypedFromEvent(w, 'resize').pipe(startWith(null), map(() => {\n      var _a, _b;\n      const width = Math.max(w.document.documentElement.clientWidth || 0, w.innerWidth || 0, ((_a = w.visualViewport) === null || _a === void 0 ? void 0 : _a.width) || 0);\n      const height = Math.max(w.document.documentElement.clientHeight || 0, w.innerHeight || 0, ((_b = w.visualViewport) === null || _b === void 0 ? void 0 : _b.height) || 0);\n      return {\n        width,\n        height,\n        top: 0,\n        left: 0,\n        right: width,\n        bottom: height\n      };\n    }), shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n  }\n});\n\n/**\n * @deprecated Use {@link TUI_WINDOW_SIZE} instead\n */\nconst TUI_WINDOW_HEIGHT = tuiCreateTokenFromFactory(() => inject(TUI_WINDOW_SIZE).pipe(map(({\n  height\n}) => height)));\n\n/**\n * Zoom options\n */\nconst TUI_ZOOM_OPTIONS = tuiCreateToken({\n  wheelSensitivity: 0.01\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_ACTIVE_ELEMENT, TUI_ALERTS, TUI_BASE_HREF, TUI_DEFAULT_RENDERER, TUI_DIALOGS, TUI_ENSURE_BASE_HREF, TUI_FOCUSABLE_ITEM_ACCESSOR, TUI_FONTS_READY, TUI_IS_ANDROID, TUI_IS_APPLE, TUI_IS_CHROMIUM, TUI_IS_CYPRESS, TUI_IS_E2E, TUI_IS_FIREFOX, TUI_IS_IOS, TUI_IS_MOBILE, TUI_IS_PLAYWRIGHT, TUI_IS_STACKBLITZ, TUI_IS_TOUCH, TUI_IS_WEBKIT, TUI_PLATFORM, TUI_RANGE, TUI_REMOVED_ELEMENT, TUI_SCROLL_REF, TUI_SWIPE_OPTIONS, TUI_TAKE_ONLY_TRUSTED_EVENTS, TUI_TOUCH_SUPPORTED, TUI_WINDOW_HEIGHT, TUI_WINDOW_SIZE, TUI_ZOOM_OPTIONS, tuiAsAlerts, tuiAsDialog, tuiAsFocusableItemAccessor, tuiPlatformFactory };\n//# sourceMappingURL=taiga-ui-cdk-tokens.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}