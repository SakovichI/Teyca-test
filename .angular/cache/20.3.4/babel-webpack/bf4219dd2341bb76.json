{"ast":null,"code":"import { TuiDay, TuiDayRange, TUI_FIRST_DAY, TuiTime, HOURS_IN_DAY, tuiControlValue } from '@taiga-ui/cdk';\nimport { TuiDayRangePeriod } from '@taiga-ui/kit/classes';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nfunction tuiCreateDefaultDayRangePeriods(periodTitles = ['For all the time', 'Today', 'Yesterday', 'Current week', 'Current month', 'Previous month']) {\n  const today = TuiDay.currentLocal();\n  const yesterday = today.append({\n    day: -1\n  });\n  const startOfWeek = today.append({\n    day: -today.dayOfWeek()\n  });\n  const endOfWeek = startOfWeek.append({\n    day: 6\n  });\n  const startOfMonth = today.append({\n    day: 1 - today.day\n  });\n  const endOfMonth = startOfMonth.append({\n    month: 1,\n    day: -1\n  });\n  const startOfLastMonth = startOfMonth.append({\n    month: -1\n  });\n  return [new TuiDayRangePeriod(new TuiDayRange(TUI_FIRST_DAY, today), periodTitles[0]), new TuiDayRangePeriod(new TuiDayRange(today, today), periodTitles[1]), new TuiDayRangePeriod(new TuiDayRange(yesterday, yesterday), periodTitles[2]), new TuiDayRangePeriod(new TuiDayRange(startOfWeek, endOfWeek), periodTitles[3]), new TuiDayRangePeriod(new TuiDayRange(startOfMonth, endOfMonth), periodTitles[4]), new TuiDayRangePeriod(new TuiDayRange(startOfLastMonth, startOfMonth.append({\n    day: -1\n  })), periodTitles[5])];\n}\nfunction tuiCreateTimePeriods(minHour = 0, maxHour = HOURS_IN_DAY, minutes = [0, 30]) {\n  const timeArray = [];\n  for (let i = minHour; i < maxHour; i++) {\n    minutes.forEach(minute => {\n      const time = new TuiTime(i, minute);\n      timeArray.push(time);\n    });\n  }\n  return timeArray;\n}\n\n/**\n * @return fractional length\n */\nfunction tuiGetPrecision(num) {\n  const [, fractionPart = ''] = String(num).split('.');\n  return fractionPart.length;\n}\nfunction tuiIsFlat(items) {\n  return !Array.isArray(items[0]);\n}\n\n/**\n * @internal\n */\nfunction tuiControlValueFactory(control, valueTransformer) {\n  return control ? tuiControlValue(control).pipe(map(value => valueTransformer ? valueTransformer.fromControlValue(value) : value)) : of(null);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiControlValueFactory, tuiCreateDefaultDayRangePeriods, tuiCreateTimePeriods, tuiGetPrecision, tuiIsFlat };\n//# sourceMappingURL=taiga-ui-kit-utils-miscellaneous.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}