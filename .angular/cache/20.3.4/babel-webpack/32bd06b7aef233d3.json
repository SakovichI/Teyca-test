{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i4 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, AbstractTuiControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, TuiFocusedModule, TuiFocusableModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TuiAppearance, TuiModeDirective, TuiWrapperModule, TuiSvgModule, TuiLoaderModule } from '@taiga-ui/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\n\n/** Default values for the toggle options. */\nconst _c0 = [\"focusableElement\"];\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nfunction TuiToggleComponent_tui_loader_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"inheritColor\", true)(\"showLoader\", ctx_r1.value)(\"size\", ctx_r1.loaderSize);\n  }\n}\nfunction TuiToggleComponent_span_3_tui_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 10);\n  }\n  if (rf & 2) {\n    const src_r3 = ctx.polymorpheusOutlet;\n    i0.ɵɵproperty(\"src\", src_r3);\n  }\n}\nfunction TuiToggleComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, TuiToggleComponent_span_3_tui_svg_1_Template, 1, 1, \"tui-svg\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.iconOn)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.size));\n  }\n}\nfunction TuiToggleComponent_tui_loader_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"inheritColor\", true)(\"showLoader\", !ctx_r1.value)(\"size\", ctx_r1.loaderSize);\n  }\n}\nfunction TuiToggleComponent_span_6_tui_svg_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-svg\", 12);\n  }\n  if (rf & 2) {\n    const src_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵproperty(\"src\", src_r4);\n  }\n}\nfunction TuiToggleComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, TuiToggleComponent_span_6_tui_svg_1_Template, 1, 1, \"tui-svg\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.iconOff)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r1.size));\n  }\n}\nconst TUI_TOGGLE_DEFAULT_OPTIONS = {\n  icons: {\n    toggleOff({\n      $implicit\n    }) {\n      return $implicit === 'm' ? 'tuiIconToggleOff' : 'tuiIconToggleOffLarge';\n    },\n    toggleOn({\n      $implicit\n    }) {\n      return $implicit === 'm' ? 'tuiIconToggleOn' : 'tuiIconToggleOnLarge';\n    }\n  },\n  appearances: {\n    checked: TuiAppearance.Primary,\n    unchecked: TuiAppearance.Secondary\n  },\n  singleColor: false,\n  showIcons: false,\n  size: 'm'\n};\n/**\n * Default parameters for Toggle component\n */\nconst TUI_TOGGLE_OPTIONS = tuiCreateToken(TUI_TOGGLE_DEFAULT_OPTIONS);\nfunction tuiToggleOptionsProvider(options) {\n  return tuiProvideOptions(TUI_TOGGLE_OPTIONS, options, TUI_TOGGLE_DEFAULT_OPTIONS);\n}\nlet TuiToggleComponent = /*#__PURE__*/(() => {\n  class TuiToggleComponent extends AbstractTuiControl {\n    constructor(control, cdr, modeDirective, options) {\n      super(control, cdr);\n      this.modeDirective = modeDirective;\n      this.options = options;\n      this.singleColor = this.options.singleColor;\n      this.showIcons = this.options.showIcons;\n      this.showLoader = false;\n      this.size = this.options.size;\n    }\n    get iconOn() {\n      return this.options.icons.toggleOn;\n    }\n    get iconOff() {\n      return this.options.icons.toggleOff;\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.focusableElement) === null || _a === void 0 ? void 0 : _a.nativeElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get focused() {\n      return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get appearance() {\n      return this.singleColor || this.value ? this.options.appearances.checked : this.options.appearances.unchecked;\n    }\n    get sizeM() {\n      return this.size === 'm';\n    }\n    get loaderSize() {\n      return this.sizeM ? 'xs' : 's';\n    }\n    get hostMode() {\n      var _a, _b;\n      return (_b = (_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : null;\n    }\n    /** @deprecated use 'value' setter */\n    onChecked(checked) {\n      this.value = checked;\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    onFocusVisible(focusVisible) {\n      this.updateFocusVisible(focusVisible);\n    }\n    getFallbackValue() {\n      return false;\n    }\n  }\n  TuiToggleComponent.ɵfac = function TuiToggleComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiToggleComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TuiModeDirective, 8), i0.ɵɵdirectiveInject(TUI_TOGGLE_OPTIONS));\n  };\n  TuiToggleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiToggleComponent,\n    selectors: [[\"tui-toggle\"]],\n    viewQuery: function TuiToggleComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusableElement = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function TuiToggleComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size)(\"data-mode\", ctx.hostMode);\n        i0.ɵɵclassProp(\"_checked\", ctx.value);\n      }\n    },\n    inputs: {\n      singleColor: \"singleColor\",\n      showIcons: \"showIcons\",\n      showLoader: \"showLoader\",\n      size: \"size\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiToggleComponent), tuiAsControl(TuiToggleComponent)]), i0.ɵɵInheritDefinitionFeature],\n    decls: 9,\n    vars: 16,\n    consts: [[\"focusableElement\", \"\"], [\"tuiWrapper\", \"\", 3, \"active\", \"appearance\", \"disabled\", \"focus\", \"hover\", \"invalid\", \"readOnly\"], [1, \"t-toggle\"], [\"class\", \"t-loader\", 3, \"inheritColor\", \"showLoader\", \"size\", 4, \"ngIf\"], [\"class\", \"t-icon-wrapper\", 4, \"ngIf\"], [1, \"t-circle\"], [\"automation-id\", \"tui-toggle__checkbox\", \"role\", \"switch\", \"type\", \"checkbox\", 1, \"t-checkbox\", 3, \"tuiCheckedChange\", \"tuiFocusedChange\", \"tuiFocusVisibleChange\", \"disabled\", \"id\", \"tuiFocusable\", \"tuiChecked\"], [1, \"t-loader\", 3, \"inheritColor\", \"showLoader\", \"size\"], [1, \"t-icon-wrapper\"], [\"automation-id\", \"tui-toggle__check-icon\", \"class\", \"t-icon\", 3, \"src\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-toggle__check-icon\", 1, \"t-icon\", 3, \"src\"], [\"automation-id\", \"tui-toggle__cancel-icon\", \"class\", \"t-icon t-icon_off\", 3, \"src\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-toggle__cancel-icon\", 1, \"t-icon\", \"t-icon_off\", 3, \"src\"]],\n    template: function TuiToggleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n        i0.ɵɵtemplate(2, TuiToggleComponent_tui_loader_2_Template, 1, 3, \"tui-loader\", 3)(3, TuiToggleComponent_span_3_Template, 2, 4, \"span\", 4);\n        i0.ɵɵelement(4, \"div\", 5);\n        i0.ɵɵtemplate(5, TuiToggleComponent_tui_loader_5_Template, 1, 3, \"tui-loader\", 3)(6, TuiToggleComponent_span_6_Template, 2, 4, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 6, 0);\n        i0.ɵɵtwoWayListener(\"tuiCheckedChange\", function TuiToggleComponent_Template_input_tuiCheckedChange_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵlistener(\"tuiFocusedChange\", function TuiToggleComponent_Template_input_tuiFocusedChange_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocused($event));\n        })(\"tuiFocusVisibleChange\", function TuiToggleComponent_Template_input_tuiFocusVisibleChange_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocusVisible($event));\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"active\", ctx.pseudoActive)(\"appearance\", ctx.appearance)(\"disabled\", ctx.computedDisabled)(\"focus\", ctx.computedFocusVisible)(\"hover\", ctx.pseudoHover)(\"invalid\", ctx.computedInvalid)(\"readOnly\", ctx.readOnly);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showIcons && !ctx.showLoader);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showIcons && !ctx.showLoader);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"id\", ctx.id)(\"tuiFocusable\", ctx.focusable);\n        i0.ɵɵtwoWayProperty(\"tuiChecked\", ctx.value);\n        i0.ɵɵattribute(\"aria-checked\", ctx.value);\n      }\n    },\n    dependencies: [i1.TuiLoaderComponent, i1.TuiSvgComponent, i1.TuiWrapperDirective, i2.NgIf, i3.PolymorpheusOutletDirective, i4.TuiCheckedDirective, i4.TuiFocusableDirective, i4.TuiFocusedDirective, i4.TuiFocusVisibleDirective],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:inline-block;vertical-align:middle;overflow:hidden;border-radius:6.25rem}[data-size=m][_nghost-%COMP%]{width:2rem;height:1rem}[data-size=l][_nghost-%COMP%]{width:3rem;height:1.5rem}.t-checkbox[_ngcontent-%COMP%]{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer}.t-checkbox[_ngcontent-%COMP%]:-webkit-autofill, .t-checkbox[_ngcontent-%COMP%]:-webkit-autofill:hover, .t-checkbox[_ngcontent-%COMP%]:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}._disabled[_nghost-%COMP%]   .t-checkbox[_ngcontent-%COMP%]{pointer-events:none;cursor:default}.t-toggle[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;align-items:center;justify-content:center}[data-size=m][_nghost-%COMP%]   .t-toggle[_ngcontent-%COMP%]{width:3rem;height:1rem;transform:translate(-1rem)}[data-size=l][_nghost-%COMP%]   .t-toggle[_ngcontent-%COMP%]{width:4.5rem;height:1.5rem;transform:translate(-1.5rem)}._checked[_nghost-%COMP%]   .t-toggle[_ngcontent-%COMP%]{transform:translate(0)}.t-circle[_ngcontent-%COMP%]{margin:.125rem 0;flex-shrink:0;border-radius:100%;background-color:var(--tui-base-01)}._disabled[_nghost-%COMP%]   .t-circle_light[_ngcontent-%COMP%]{opacity:.24}[data-size=m][_nghost-%COMP%]   .t-circle[_ngcontent-%COMP%]{width:.75rem;height:.75rem}[data-size=l][_nghost-%COMP%]   .t-circle[_ngcontent-%COMP%]{width:1rem;height:1rem}._disabled[_nghost-%COMP%]   .t-circle[_ngcontent-%COMP%]{background-color:var(--tui-base-01)}.t-loader[_ngcontent-%COMP%]{min-width:auto}[_nghost-%COMP%]:not(._checked)   .t-loader[_ngcontent-%COMP%]{color:var(--tui-base-06)}[_nghost-%COMP%]:not(._checked)._disabled   .t-loader[_ngcontent-%COMP%]{color:var(--tui-base-05)}[_nghost-%COMP%]:not(._checked)[data-mode=onDark]   .t-loader[_ngcontent-%COMP%]{color:var(--tui-text-03-night)}[_nghost-%COMP%]:not(._checked)[data-mode=onDark]._disabled   .t-loader[_ngcontent-%COMP%]{color:var(--tui-clear-inverse-active)}[_nghost-%COMP%]:not(._checked)[data-mode=onLight]   .t-loader[_ngcontent-%COMP%]{color:var(--tui-text-03)}[_nghost-%COMP%]:not(._checked)[data-mode=onLight]._disabled   .t-loader[_ngcontent-%COMP%]{color:var(--tui-clear-active)}[data-size=m][_nghost-%COMP%]   .t-loader[_ngcontent-%COMP%]{width:.75rem;margin:0 .2rem;transform:scale(.75)}[data-size=l][_nghost-%COMP%]   .t-loader[_ngcontent-%COMP%]{width:1rem;margin:0 .25rem}.t-icon-wrapper[_ngcontent-%COMP%]{display:flex}.t-icon[_ngcontent-%COMP%]{opacity:.8}.t-icon_off[_ngcontent-%COMP%]{color:var(--tui-base-06)}._disabled[_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-base-05)}[data-mode=onDark][_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-text-03-night)}[data-mode=onDark]._disabled[_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-clear-inverse-active)}[data-mode=onLight][_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-text-03)}[data-mode=onLight]._disabled[_nghost-%COMP%]   .t-icon_off[_ngcontent-%COMP%]{color:var(--tui-clear-active)}[data-size=m][_nghost-%COMP%]   .t-icon[_ngcontent-%COMP%]{width:1rem;height:1rem;transform:scale(.75)}[data-size=l][_nghost-%COMP%]   .t-icon[_ngcontent-%COMP%]{margin:0 .125rem;width:1.5rem;height:1.5rem}[_nghost-%COMP%]:hover   .t-icon[_ngcontent-%COMP%]{opacity:1}\"],\n    changeDetection: 0\n  });\n  return TuiToggleComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiToggleModule = /*#__PURE__*/(() => {\n  class TuiToggleModule {}\n  TuiToggleModule.ɵfac = function TuiToggleModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiToggleModule)();\n  };\n  TuiToggleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiToggleModule\n  });\n  TuiToggleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiFocusedModule, TuiFocusableModule, TuiPressedModule, TuiFocusVisibleModule, TuiCheckedModule, TuiWrapperModule, TuiSvgModule, TuiLoaderModule, PolymorpheusModule]]\n  });\n  return TuiToggleModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_TOGGLE_DEFAULT_OPTIONS, TUI_TOGGLE_OPTIONS, TuiToggleComponent, TuiToggleModule, tuiToggleOptionsProvider };\n//# sourceMappingURL=taiga-ui-kit-components-toggle.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}