{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Inject, Input, HostListener, ViewEncapsulation, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, tuiIsString, TuiDirectiveStylesService } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { tuiSizeBigger, TUI_MODE, MODE_PROVIDER, TuiSvgModule, TuiLoaderModule } from '@taiga-ui/core';\nimport * as i1$1 from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { TuiIconsModule, TuiIconsDirective } from '@taiga-ui/experimental/directives/icons';\nconst _c0 = [\"tuiButton\", \"\", \"loading\", \"\"];\nconst _c1 = [\"*\"];\nconst TUI_BUTTON_DEFAULT_OPTIONS = {\n  size: 'l',\n  appearance: 'primary'\n};\nconst TUI_BUTTON_OPTIONS = tuiCreateToken(TUI_BUTTON_DEFAULT_OPTIONS);\nfunction tuiButtonOptionsProvider(options) {\n  return tuiProvideOptions(TUI_BUTTON_OPTIONS, options, TUI_BUTTON_DEFAULT_OPTIONS);\n}\nlet TuiButtonComponent = /*#__PURE__*/(() => {\n  class TuiButtonComponent {\n    constructor(options) {\n      this.options = options;\n      this.size = this.options.size;\n      this.loading = false;\n    }\n    get loaderSize() {\n      return tuiSizeBigger(this.size) ? 'm' : 's';\n    }\n    get label() {\n      return tuiIsString(this.loading) ? this.loading : '';\n    }\n    onClick(event) {\n      if (this.loading) {\n        event.stopPropagation();\n      }\n    }\n  }\n  TuiButtonComponent.ɵfac = function TuiButtonComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiButtonComponent)(i0.ɵɵdirectiveInject(TUI_BUTTON_OPTIONS));\n  };\n  TuiButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiButtonComponent,\n    selectors: [[\"\", \"tuiButton\", \"\", \"loading\", \"\"], [\"\", \"tuiIconButton\", \"\", \"loading\", \"\"]],\n    hostVars: 3,\n    hostBindings: function TuiButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click.capture\", function TuiButtonComponent_click_capture_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-disabled\", ctx.loading);\n        i0.ɵɵclassProp(\"_loading\", ctx.loading);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      loading: \"loading\"\n    },\n    standalone: false,\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 4,\n    consts: [[\"aria-live\", \"polite\", \"role\", \"status\", 1, \"t-loader\", 3, \"inheritColor\", \"showLoader\", \"size\", \"textContent\"]],\n    template: function TuiButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵelement(1, \"tui-loader\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"inheritColor\", true)(\"showLoader\", !!ctx.loading)(\"size\", ctx.loaderSize)(\"textContent\", ctx.label);\n      }\n    },\n    dependencies: [i1.TuiLoaderComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TuiButtonComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiButtonStylesComponent = /*#__PURE__*/(() => {\n  class TuiButtonStylesComponent {}\n  TuiButtonStylesComponent.ɵfac = function TuiButtonStylesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiButtonStylesComponent)();\n  };\n  TuiButtonStylesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiButtonStylesComponent,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [1, \"tui-button-styles\"],\n    standalone: false,\n    decls: 0,\n    vars: 0,\n    template: function TuiButtonStylesComponent_Template(rf, ctx) {},\n    styles: [\"[tuiButtonNew]{--t-gap: .125rem;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;position:relative;display:inline-flex;align-items:center;flex-shrink:0;box-sizing:border-box;white-space:nowrap;overflow:hidden;vertical-align:middle;max-width:100%;grid-gap:calc(var(--t-gap) - 2 * var(--t-margin));gap:calc(var(--t-gap) - 2 * var(--t-margin));height:var(--t-size);justify-content:center;border-radius:var(--t-radius);padding:var(--t-padding);-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer}[tuiButtonNew]>img,[tuiButtonNew]>tui-svg,[tuiButtonNew]>tui-icon,[tuiButtonNew]>tui-avatar,[tuiButtonNew]>tui-badge,[tuiButtonNew]>[tuiBadge],[tuiButtonNew]>[tuiRadio],[tuiButtonNew]>[tuiToggle],[tuiButtonNew]>[tuiCheckbox],[tuiButtonNew]._icon-left:before,[tuiButtonNew]._icon-right:after{margin:var(--t-margin)}[tuiButtonNew]>.t-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}[tuiButtonNew]>.t-loader .t-text{position:absolute}[tuiButtonNew][data-size=xs]{--t-size: var(--tui-height-xs);--t-radius: var(--tui-radius-xs);--t-padding: 0 .375rem;--t-margin: -.125rem;font:var(--tui-font-text-s)}[tuiButtonNew][data-size=xs] tui-svg,[tuiButtonNew][data-size=xs] tui-icon,[tuiButtonNew][data-size=xs]:before{font-size:1rem}[tuiButtonNew][data-size=s]{--t-size: var(--tui-height-s);--t-radius: var(--tui-radius-s);--t-padding: 0 .625rem;--t-margin: -.125rem;font:var(--tui-font-text-s)}[tuiButtonNew][data-size=s] tui-svg,[tuiButtonNew][data-size=s] tui-icon,[tuiButtonNew][data-size=s]:not([tuiIconButton][data-appearance=\\\"icon\\\"]):before{font-size:1rem}[tuiButtonNew][data-size=m]{--t-size: var(--tui-height-m);--t-radius: var(--tui-radius-m);--t-padding: 0 1rem;--t-margin: -.375rem;font:var(--tui-font-text-m);font-weight:bold}[tuiButtonNew][data-size=m]:after{-webkit-margin-end:-.125rem;margin-inline-end:-.125rem}[tuiButtonNew][data-size=l]{--t-size: var(--tui-height-l);--t-radius: var(--tui-radius-l);--t-padding: 0 1.25rem;--t-gap: .25rem;--t-margin: -.25rem;font:var(--tui-font-text-m);font-weight:bold}[tuiButtonNew][data-size=l]:after{-webkit-margin-start:.25rem;margin-inline-start:.25rem;-webkit-margin-end:-.25rem;margin-inline-end:-.25rem}[tuiButtonNew]._loading{--tui-disabled-opacity: 1;-webkit-text-fill-color:transparent}[tuiButtonNew]._loading>*,[tuiButtonNew]._loading:before,[tuiButtonNew]._loading:after{opacity:0}[tuiButtonNew]._loading>.t-loader{opacity:1}[tuiButtonNew][tuiIcons]:after{font-size:1rem}[tuiIconButton][tuiButtonNew]{--t-gap: 0;width:var(--t-size);font-size:0;padding:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TuiButtonStylesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiButtonDirective = /*#__PURE__*/(() => {\n  class TuiButtonDirective {\n    constructor(options, mode$, directiveStyles) {\n      this.options = options;\n      this.mode$ = mode$;\n      this.size = this.options.size;\n      this.appearance = this.options.appearance;\n      directiveStyles.addComponent(TuiButtonStylesComponent);\n    }\n  }\n  TuiButtonDirective.ɵfac = function TuiButtonDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiButtonDirective)(i0.ɵɵdirectiveInject(TUI_BUTTON_OPTIONS), i0.ɵɵdirectiveInject(TUI_MODE), i0.ɵɵdirectiveInject(TuiDirectiveStylesService));\n  };\n  TuiButtonDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiButtonDirective,\n    selectors: [[\"a\", \"tuiButton\", \"\"], [\"button\", \"tuiButton\", \"\"], [\"a\", \"tuiIconButton\", \"\"], [\"button\", \"tuiIconButton\", \"\"]],\n    hostAttrs: [\"tuiButtonNew\", \"\", \"tuiAppearance\", \"\"],\n    hostVars: 2,\n    hostBindings: function TuiButtonDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"$.data-mode.attr\", function TuiButtonDirective___data_mode_attr_HostBindingHandler() {\n          return ctx.mode$;\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size)(\"data-appearance\", ctx.appearance);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      appearance: \"appearance\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MODE_PROVIDER])]\n  });\n  return TuiButtonDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiButtonModule = /*#__PURE__*/(() => {\n  class TuiButtonModule {}\n  TuiButtonModule.ɵfac = function TuiButtonModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiButtonModule)();\n  };\n  TuiButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiButtonModule\n  });\n  TuiButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiSvgModule, TuiLoaderModule, TuiIconsModule]]\n  });\n  return TuiButtonModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_BUTTON_DEFAULT_OPTIONS, TUI_BUTTON_OPTIONS, TuiButtonComponent, TuiButtonDirective, TuiButtonModule, TuiButtonStylesComponent, tuiButtonOptionsProvider };\n//# sourceMappingURL=taiga-ui-experimental-components-button.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}