{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, NgZone, ElementRef, Inject, Pipe, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { DefaultValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MASKITO_DEFAULT_OPTIONS, maskitoTransform, MASKITO_DEFAULT_ELEMENT_PREDICATE, Maskito } from '@maskito/core';\nimport { __awaiter } from 'tslib';\nlet MaskitoCva = /*#__PURE__*/(() => {\n  class MaskitoCva {\n    constructor(accessor) {\n      this.accessor = accessor;\n      this.maskito = MASKITO_DEFAULT_OPTIONS;\n      const original = accessor.writeValue.bind(accessor);\n      accessor.writeValue = value => {\n        var _a;\n        original(maskitoTransform(String(value !== null && value !== void 0 ? value : ''), (_a = this.maskito) !== null && _a !== void 0 ? _a : MASKITO_DEFAULT_OPTIONS));\n      };\n    }\n  }\n  MaskitoCva.ɵfac = function MaskitoCva_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MaskitoCva)(i0.ɵɵdirectiveInject(i1.DefaultValueAccessor));\n  };\n  MaskitoCva.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MaskitoCva,\n    selectors: [[\"input\", \"maskito\", \"\"], [\"textarea\", \"maskito\", \"\"]],\n    hostBindings: function MaskitoCva_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function MaskitoCva_input_HostBindingHandler($event) {\n          return ctx.accessor._handleInput($event.target.value);\n        })(\"blur\", function MaskitoCva_blur_HostBindingHandler() {\n          return ctx.accessor.onTouched();\n        })(\"compositionstart\", function MaskitoCva_compositionstart_HostBindingHandler() {\n          return ctx.accessor._compositionStart();\n        })(\"compositionend\", function MaskitoCva_compositionend_HostBindingHandler($event) {\n          return ctx.accessor._compositionEnd($event.target.value);\n        });\n      }\n    },\n    inputs: {\n      maskito: \"maskito\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([DefaultValueAccessor, {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: DefaultValueAccessor\n    }])]\n  });\n  return MaskitoCva;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MaskitoDirective = /*#__PURE__*/(() => {\n  class MaskitoDirective {\n    constructor(ngZone, elementRef) {\n      this.ngZone = ngZone;\n      this.elementRef = elementRef;\n      this.maskedElement = null;\n      this.maskito = MASKITO_DEFAULT_OPTIONS;\n      this.maskitoElement = MASKITO_DEFAULT_ELEMENT_PREDICATE;\n    }\n    ngOnChanges() {\n      var _a;\n      return __awaiter(this, void 0, void 0, function* () {\n        (_a = this.maskedElement) === null || _a === void 0 ? void 0 : _a.destroy();\n        const predicate = this.maskitoElement;\n        const predicateResult = yield predicate(this.elementRef.nativeElement);\n        if (this.maskitoElement !== predicate) {\n          // Ignore the result of the predicate if the\n          // maskito element has changed before the predicate was resolved.\n          return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n          var _a;\n          this.maskedElement = new Maskito(predicateResult, (_a = this.maskito) !== null && _a !== void 0 ? _a : MASKITO_DEFAULT_OPTIONS);\n        });\n      });\n    }\n    ngOnDestroy() {\n      var _a;\n      (_a = this.maskedElement) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n  }\n  MaskitoDirective.ɵfac = function MaskitoDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MaskitoDirective)(i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(ElementRef));\n  };\n  MaskitoDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MaskitoDirective,\n    selectors: [[\"\", \"maskito\", \"\"]],\n    inputs: {\n      maskito: \"maskito\",\n      maskitoElement: \"maskitoElement\"\n    },\n    standalone: false,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return MaskitoDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MaskitoPipe = /*#__PURE__*/(() => {\n  class MaskitoPipe {\n    transform(value, maskitoOptions) {\n      return maskitoTransform(String(value !== null && value !== void 0 ? value : ''), maskitoOptions !== null && maskitoOptions !== void 0 ? maskitoOptions : MASKITO_DEFAULT_OPTIONS);\n    }\n  }\n  MaskitoPipe.ɵfac = function MaskitoPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MaskitoPipe)();\n  };\n  MaskitoPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"maskito\",\n    type: MaskitoPipe,\n    pure: true,\n    standalone: false\n  });\n  return MaskitoPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MaskitoModule = /*#__PURE__*/(() => {\n  class MaskitoModule {}\n  MaskitoModule.ɵfac = function MaskitoModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MaskitoModule)();\n  };\n  MaskitoModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MaskitoModule\n  });\n  MaskitoModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return MaskitoModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MaskitoCva, MaskitoDirective, MaskitoModule, MaskitoPipe };\n//# sourceMappingURL=maskito-angular.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}