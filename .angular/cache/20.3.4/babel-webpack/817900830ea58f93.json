{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport { AbstractTuiNullableControl, TUI_DEFAULT_IDENTITY_MATCHER, tuiAsFocusableItemAccessor, tuiAsControl, TuiFocusableModule, TuiFocusedModule } from '@taiga-ui/cdk';\nimport { TUI_MODE, MODE_PROVIDER } from '@taiga-ui/core';\nimport * as i1 from '@taiga-ui/kit/components/radio';\nimport { TUI_RADIO_OPTIONS, TuiRadioComponent, TuiRadioModule } from '@taiga-ui/kit/components/radio';\nimport * as i3 from 'rxjs';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\"];\nlet TuiRadioLabeledComponent = /*#__PURE__*/(() => {\n  class TuiRadioLabeledComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, mode$, options) {\n      super(control, cdr);\n      this.mode$ = mode$;\n      this.options = options;\n      this.size = this.options.size;\n      this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;\n      this.pseudoDisabled = false;\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.radio) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get focused() {\n      return !!this.radio && this.radio.focused;\n    }\n    get computedDisabled() {\n      return this.disabled || this.pseudoDisabled;\n    }\n    stopReadonlyChanging(event) {\n      if (this.readOnly) {\n        event.preventDefault();\n      }\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    /** @deprecated use 'value' setter */\n    onModelChange(value) {\n      this.value = value;\n    }\n  }\n  TuiRadioLabeledComponent.ɵfac = function TuiRadioLabeledComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioLabeledComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_MODE), i0.ɵɵdirectiveInject(TUI_RADIO_OPTIONS));\n  };\n  TuiRadioLabeledComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiRadioLabeledComponent,\n    selectors: [[\"tui-radio-labeled\"]],\n    viewQuery: function TuiRadioLabeledComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiRadioComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.radio = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiRadioLabeledComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"$.data-mode.attr\", function TuiRadioLabeledComponent___data_mode_attr_HostBindingHandler() {\n          return ctx.mode$;\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      item: \"item\",\n      size: \"size\",\n      identityMatcher: \"identityMatcher\",\n      pseudoDisabled: \"pseudoDisabled\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiRadioLabeledComponent), tuiAsControl(TuiRadioLabeledComponent), MODE_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 15,\n    consts: [[1, \"t-wrapper\", 3, \"click\"], [3, \"ngModelChange\", \"focusedChange\", \"focusable\", \"identityMatcher\", \"item\", \"name\", \"nativeId\", \"pseudoActive\", \"pseudoDisabled\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"readOnly\", \"size\", \"ngModel\"], [1, \"t-content\"]],\n    template: function TuiRadioLabeledComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"label\", 0);\n        i0.ɵɵlistener(\"click\", function TuiRadioLabeledComponent_Template_label_click_0_listener($event) {\n          return ctx.stopReadonlyChanging($event);\n        });\n        i0.ɵɵelementStart(1, \"tui-radio\", 1);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiRadioLabeledComponent_Template_tui_radio_ngModelChange_1_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"focusedChange\", function TuiRadioLabeledComponent_Template_tui_radio_focusedChange_1_listener($event) {\n          return ctx.onFocused($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"focusable\", ctx.focusable)(\"identityMatcher\", ctx.identityMatcher)(\"item\", ctx.item)(\"name\", ctx.computedName || \"\")(\"nativeId\", ctx.nativeId)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoDisabled\", ctx.computedDisabled)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.computedInvalid)(\"readOnly\", ctx.readOnly)(\"size\", ctx.size);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.value);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"t-content_disabled\", ctx.computedDisabled);\n      }\n    },\n    dependencies: [i1.TuiRadioComponent, i2.NgControlStatus, i2.NgModel],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:block;font:var(--tui-font-text-s);line-height:1rem}._readonly[_nghost-%COMP%]{pointer-events:none}[data-size=l][_nghost-%COMP%]{line-height:1.5rem}.t-wrapper[_ngcontent-%COMP%]{display:inline-flex;max-width:100%;cursor:pointer;vertical-align:top;align-items:inherit}._disabled[_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{cursor:default}[data-mode=onDark][_nghost-%COMP%]   .t-wrapper[_ngcontent-%COMP%]{color:var(--tui-text-01-night)}.t-content[_ngcontent-%COMP%]{word-wrap:break-word;min-width:0;line-height:inherit}.t-content_disabled[_ngcontent-%COMP%]{opacity:var(--tui-disabled-opacity)}[data-size=m][_nghost-%COMP%]   .t-content[_ngcontent-%COMP%]{margin-left:.5rem}[data-size=l][_nghost-%COMP%]   .t-content[_ngcontent-%COMP%]{font:var(--tui-font-text-m);margin-left:.75rem;line-height:inherit}\"],\n    changeDetection: 0\n  });\n  return TuiRadioLabeledComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiRadioLabeledModule = /*#__PURE__*/(() => {\n  class TuiRadioLabeledModule {}\n  TuiRadioLabeledModule.ɵfac = function TuiRadioLabeledModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRadioLabeledModule)();\n  };\n  TuiRadioLabeledModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiRadioLabeledModule\n  });\n  TuiRadioLabeledModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, TuiFocusableModule, TuiFocusedModule, TuiRadioModule]]\n  });\n  return TuiRadioLabeledModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiRadioLabeledComponent, TuiRadioLabeledModule };\n//# sourceMappingURL=taiga-ui-kit-components-radio-labeled.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}