{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, ChangeDetectorRef, TemplateRef, Component, ChangeDetectionStrategy, Inject, Self, ViewChild, Input, ContentChild, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { TuiDestroyService, TUI_PARENT_ANIMATION } from '@taiga-ui/cdk';\nimport { TUI_EXPAND_LOADED } from '@taiga-ui/core/constants';\nimport * as i3 from 'rxjs';\nimport { timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i1 from '@taiga-ui/core/components/loader';\nimport { TuiLoaderModule } from '@taiga-ui/core/components/loader';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"wrapper\"];\nconst _c1 = [\"*\"];\nfunction TuiExpandComponent_ng_container_2_tui_loader_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-loader\", 4);\n    i0.ɵɵelementContainer(1, 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"overlay\", true)(\"showLoader\", ctx_r0.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.content);\n  }\n}\nfunction TuiExpandComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, TuiExpandComponent_ng_container_2_tui_loader_2_Template, 2, 3, \"tui-loader\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.async)(\"ngIfElse\", ctx_r0.content);\n  }\n}\nlet TuiExpandContentDirective = /*#__PURE__*/(() => {\n  class TuiExpandContentDirective {}\n  TuiExpandContentDirective.ɵfac = function TuiExpandContentDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiExpandContentDirective)();\n  };\n  TuiExpandContentDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiExpandContentDirective,\n    selectors: [[\"\", \"tuiExpandContent\", \"\"]],\n    standalone: false\n  });\n  return TuiExpandContentDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst State = {\n  Idle: 0,\n  Loading: 1,\n  Prepared: 2,\n  Animated: 3\n};\nconst LOADER_HEIGHT = 48;\nlet TuiExpandComponent = /*#__PURE__*/(() => {\n  class TuiExpandComponent {\n    constructor(cdr, destroy$) {\n      this.cdr = cdr;\n      this.destroy$ = destroy$;\n      this.state = State.Idle;\n      this.async = false;\n      this.content = null;\n      this.expanded = null;\n    }\n    set expandedSetter(expanded) {\n      if (this.expanded === null) {\n        this.expanded = expanded;\n        return;\n      }\n      if (this.state !== State.Idle) {\n        this.expanded = expanded;\n        this.state = State.Animated;\n        return;\n      }\n      this.expanded = expanded;\n      this.retrigger(this.async && expanded ? State.Loading : State.Animated);\n    }\n    get overflow() {\n      return this.state !== State.Idle;\n    }\n    get loading() {\n      return !!this.expanded && this.async && this.state === State.Loading;\n    }\n    get height() {\n      const {\n        expanded,\n        state,\n        contentWrapper\n      } = this;\n      if (expanded && state === State.Prepared || !expanded && state === State.Animated) {\n        return 0;\n      }\n      if (contentWrapper && (!expanded && state === State.Prepared || expanded && state === State.Animated)) {\n        return contentWrapper.nativeElement.offsetHeight;\n      }\n      if (contentWrapper && expanded && state === State.Loading) {\n        return Math.max(contentWrapper.nativeElement.offsetHeight, LOADER_HEIGHT);\n      }\n      return null;\n    }\n    get contentVisible() {\n      return this.expanded || this.state !== State.Idle;\n    }\n    onTransitionEnd({\n      propertyName,\n      pseudoElement\n    }) {\n      if (propertyName === 'opacity' && !pseudoElement && this.state === State.Animated) {\n        this.state = State.Idle;\n      }\n    }\n    onExpandLoaded(event) {\n      event.stopPropagation();\n      if (this.state === State.Loading) {\n        this.retrigger(State.Animated);\n      }\n    }\n    retrigger(state) {\n      this.state = State.Prepared;\n      timer(0).pipe(takeUntil(this.destroy$)).subscribe(() => {\n        // We need delay to re-trigger CSS height transition from the correct number\n        if (this.state !== State.Prepared) {\n          return;\n        }\n        this.state = state;\n        this.cdr.markForCheck();\n      });\n    }\n  }\n  TuiExpandComponent.ɵfac = function TuiExpandComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiExpandComponent)(i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n  };\n  TuiExpandComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiExpandComponent,\n    selectors: [[\"tui-expand\"]],\n    contentQueries: function TuiExpandComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TuiExpandContentDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    viewQuery: function TuiExpandComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentWrapper = _t.first);\n      }\n    },\n    hostVars: 9,\n    hostBindings: function TuiExpandComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"transitionend.self\", function TuiExpandComponent_transitionend_self_HostBindingHandler($event) {\n          return ctx.onTransitionEnd($event);\n        })(\"tui-expand-loaded\", function TuiExpandComponent_tui_expand_loaded_HostBindingHandler($event) {\n          return ctx.onExpandLoaded($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-expanded\", ctx.expanded);\n        i0.ɵɵstyleProp(\"height\", ctx.height, \"px\");\n        i0.ɵɵclassProp(\"_expanded\", ctx.expanded)(\"_overflow\", ctx.overflow)(\"_loading\", ctx.loading);\n      }\n    },\n    inputs: {\n      async: \"async\",\n      expandedSetter: [0, \"expanded\", \"expandedSetter\"]\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService])],\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 3,\n    consts: [[\"wrapper\", \"\"], [1, \"t-wrapper\"], [4, \"ngIf\"], [\"size\", \"l\", 3, \"overlay\", \"showLoader\", 4, \"ngIf\", \"ngIfElse\"], [\"size\", \"l\", 3, \"overlay\", \"showLoader\"], [3, \"ngTemplateOutlet\"]],\n    template: function TuiExpandComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, TuiExpandComponent_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@tuiParentAnimation\", undefined)(\"@.disabled\", ctx.overflow);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.contentVisible);\n      }\n    },\n    dependencies: [i1.TuiLoaderComponent, i2.NgIf, i2.NgTemplateOutlet],\n    styles: [\"[_nghost-%COMP%]{transition-property:opacity,height,visibility;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:block;opacity:0;transition-delay:1ms}._overflow[_nghost-%COMP%]{overflow:hidden}._expanded[_nghost-%COMP%]{opacity:1;transform:translate(0)}._loading[_nghost-%COMP%]{opacity:.99}.t-wrapper[_ngcontent-%COMP%]:before, .t-wrapper[_ngcontent-%COMP%]:after{content:\\\"\\\";display:table}\"],\n    data: {\n      animation: [TUI_PARENT_ANIMATION]\n    },\n    changeDetection: 0\n  });\n  return TuiExpandComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiExpandModule = /*#__PURE__*/(() => {\n  class TuiExpandModule {}\n  TuiExpandModule.ɵfac = function TuiExpandModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiExpandModule)();\n  };\n  TuiExpandModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiExpandModule\n  });\n  TuiExpandModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiLoaderModule]]\n  });\n  return TuiExpandModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiExpandComponent, TuiExpandContentDirective, TuiExpandModule };\n//# sourceMappingURL=taiga-ui-core-components-expand.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}