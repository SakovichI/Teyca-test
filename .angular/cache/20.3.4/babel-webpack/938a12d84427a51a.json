{"ast":null,"code":"import { __rest } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Injector, Component, ChangeDetectionStrategy, Inject, Self, NgModule } from '@angular/core';\nimport * as i1 from '@angular/router';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as i3 from '@taiga-ui/cdk';\nimport { TuiDestroyService } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core';\nimport { TuiDialogService } from '@taiga-ui/core';\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';\nimport { takeUntil } from 'rxjs/operators';\nlet TuiRoutableDialogComponent = /*#__PURE__*/(() => {\n  class TuiRoutableDialogComponent {\n    constructor(route, router, dialogs, injector, destroy$) {\n      this.route = route;\n      this.router = router;\n      this.initialUrl = this.router.url;\n      dialogs.open(new PolymorpheusComponent(this.route.snapshot.data['dialog'], injector), this.route.snapshot.data['dialogOptions']).pipe(takeUntil(destroy$)).subscribe({\n        complete: () => this.onDialogClosing()\n      });\n    }\n    get lazyLoadedBackUrl() {\n      var _a;\n      return (((_a = this.route.parent) === null || _a === void 0 ? void 0 : _a.snapshot.url) || []).map(() => '..').join('/');\n    }\n    onDialogClosing() {\n      if (this.initialUrl === this.router.url) {\n        this.navigateToParent();\n      }\n    }\n    navigateToParent() {\n      const backUrl = this.route.snapshot.data['isLazy'] ? this.lazyLoadedBackUrl : this.route.snapshot.data['backUrl'];\n      void this.router.navigate([backUrl], {\n        relativeTo: this.route\n      });\n    }\n  }\n  TuiRoutableDialogComponent.ɵfac = function TuiRoutableDialogComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRoutableDialogComponent)(i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(TuiDialogService), i0.ɵɵdirectiveInject(Injector), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n  };\n  TuiRoutableDialogComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiRoutableDialogComponent,\n    selectors: [[\"tui-routable-dialog\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService])],\n    decls: 0,\n    vars: 0,\n    template: function TuiRoutableDialogComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TuiRoutableDialogComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction tuiGenerateDialogableRoute(component, _a = {}) {\n  var {\n      path = ''\n    } = _a,\n    dialogOptions = __rest(_a, [\"path\"]);\n  return {\n    path,\n    component: TuiRoutableDialogComponent,\n    data: {\n      dialog: component,\n      backUrl: path.split('/').map(() => '..').join('/'),\n      isLazy: path === '',\n      dialogOptions\n    }\n  };\n}\nlet TuiRoutableDialogModule = /*#__PURE__*/(() => {\n  class TuiRoutableDialogModule {}\n  TuiRoutableDialogModule.ɵfac = function TuiRoutableDialogModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiRoutableDialogModule)();\n  };\n  TuiRoutableDialogModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiRoutableDialogModule\n  });\n  TuiRoutableDialogModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiRoutableDialogModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiRoutableDialogComponent, TuiRoutableDialogModule, tuiGenerateDialogableRoute };\n//# sourceMappingURL=taiga-ui-kit-components-routable-dialog.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}