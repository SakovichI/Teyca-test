{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport { AbstractTuiControl, tuiAsFocusableItemAccessor, tuiAsControl } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_DIGIT_REGEXP, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule } from '@taiga-ui/core';\nimport * as i2 from '@taiga-ui/kit';\nimport { TuiValueAccessorModule } from '@taiga-ui/kit';\nimport * as i3 from '@maskito/angular';\nimport { MaskitoModule } from '@maskito/angular';\nconst _c0 = [\"*\"];\nlet TuiInputCVCComponent = /*#__PURE__*/(() => {\n  class TuiInputCVCComponent extends AbstractTuiControl {\n    constructor(control, cdr, textfieldLabelOutside, textfieldSize) {\n      super(control, cdr);\n      this.textfieldLabelOutside = textfieldLabelOutside;\n      this.textfieldSize = textfieldSize;\n      this.autocompleteEnabled = false;\n      this.hidden = false;\n      this.exampleText = '000';\n      this.maskOptions = {\n        mask: new Array(3).fill(TUI_DIGIT_REGEXP)\n      };\n    }\n    set length(length) {\n      this.exampleText = '0'.repeat(length);\n      this.maskOptions = {\n        mask: new Array(length).fill(TUI_DIGIT_REGEXP)\n      };\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get nativeFocusableElement() {\n      var _a, _b;\n      return (_b = (_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) !== null && _b !== void 0 ? _b : null;\n    }\n    get focused() {\n      return !!this.input && this.input.focused;\n    }\n    get autocomplete() {\n      return this.autocompleteEnabled ? 'cc-csc' : 'off';\n    }\n    get computedPlaceholder() {\n      return this.textfieldLabelOutside.labelOutside ? '' : this.exampleText;\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    /** deprecated use 'value' setter */\n    onValueChange(value) {\n      this.value = value;\n    }\n    getFallbackValue() {\n      return '';\n    }\n  }\n  TuiInputCVCComponent.ɵfac = function TuiInputCVCComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputCVCComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_LABEL_OUTSIDE), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE));\n  };\n  TuiInputCVCComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputCVCComponent,\n    selectors: [[\"tui-input-cvc\"]],\n    viewQuery: function TuiInputCVCComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputCVCComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      autocompleteEnabled: \"autocompleteEnabled\",\n      hidden: \"hidden\",\n      length: \"length\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputCVCComponent), tuiAsControl(TuiInputCVCComponent)]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 14,\n    consts: [[\"tuiValueAccessor\", \"\", 1, \"t-input\", 3, \"valueChange\", \"copy.prevent\", \"focusedChange\", \"disabled\", \"focusable\", \"invalid\", \"maskito\", \"nativeId\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"value\"], [\"inputmode\", \"numeric\", \"tuiTextfield\", \"\", 3, \"autocomplete\", \"placeholder\"]],\n    template: function TuiInputCVCComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 0);\n        i0.ɵɵtwoWayListener(\"valueChange\", function TuiInputCVCComponent_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"copy.prevent\", function TuiInputCVCComponent_Template_tui_primitive_textfield_copy_prevent_0_listener() {\n          return 0;\n        })(\"focusedChange\", function TuiInputCVCComponent_Template_tui_primitive_textfield_focusedChange_0_listener($event) {\n          return ctx.onFocused($event);\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵelement(2, \"input\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"focusable\", ctx.focusable)(\"invalid\", ctx.computedInvalid)(\"maskito\", ctx.maskOptions)(\"nativeId\", ctx.nativeId)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly);\n        i0.ɵɵtwoWayProperty(\"value\", ctx.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"t-input_hidden\", ctx.hidden);\n        i0.ɵɵproperty(\"autocomplete\", ctx.autocomplete)(\"placeholder\", ctx.computedPlaceholder);\n      }\n    },\n    dependencies: [i1.TuiPrimitiveTextfieldComponent, i1.TuiTextfieldComponent, i1.TuiPrimitiveTextfieldDirective, i2.TuiValueAccessorDirective, i3.MaskitoDirective],\n    styles: [\"[_nghost-%COMP%]{display:block;max-width:11rem;border-radius:var(--tui-radius-m);text-align:left}.t-input[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}.t-input_hidden[_ngcontent-%COMP%]{-webkit-text-security:disc}\"],\n    changeDetection: 0\n  });\n  return TuiInputCVCComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputCVCModule = /*#__PURE__*/(() => {\n  class TuiInputCVCModule {}\n  TuiInputCVCModule.ɵfac = function TuiInputCVCModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputCVCModule)();\n  };\n  TuiInputCVCModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputCVCModule\n  });\n  TuiInputCVCModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[MaskitoModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule]]\n  });\n  return TuiInputCVCModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputCVCComponent, TuiInputCVCModule };\n//# sourceMappingURL=taiga-ui-addon-commerce-components-input-cvc.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}