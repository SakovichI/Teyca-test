{"ast":null,"code":"import { inject } from '@angular/core';\nimport { TuiButtonModule, TuiDialogCloseService, TuiLoaderModule } from '@taiga-ui/core';\nimport { CloseConfirmationDialogHandler } from '../../../../../core/classes';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { ClientsUpsertDialogService, ClientsUpsertFormService } from './services';\nimport { ClientsUpsertDialogFormComponent } from './componetns';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@taiga-ui/core\";\nfunction ClientsUpsertDialogComponent_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ClientsUpsertDialogComponent_Conditional_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onDelete());\n    });\n    i0.ɵɵtext(1, \" \\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.$isSaving())(\"showLoader\", ctx_r2.$isSaving());\n  }\n}\nexport let ClientsUpsertDialogComponent = /*#__PURE__*/(() => {\n  class ClientsUpsertDialogComponent extends CloseConfirmationDialogHandler {\n    #clientUpsertService = inject(ClientsUpsertDialogService);\n    $isSaving = this.#clientUpsertService.$isSaving;\n    $isLoaded = this.#clientUpsertService.$isLoaded;\n    $form = this.#clientUpsertService.$form;\n    $isEditable = this.#clientUpsertService.$isEditable;\n    ngOnInit() {\n      this.#initData();\n    }\n    #initData() {\n      this.#clientUpsertService.initData().pipe(takeUntilDestroyed(this.destroyRef)).subscribe();\n    }\n    onSave() {\n      this.#clientUpsertService.save(this.$form().getRawValue()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => this.close());\n    }\n    onDelete() {\n      this.#clientUpsertService.delete().pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => this.close());\n    }\n    onClose() {\n      this.close();\n    }\n    static ɵfac = /*@__PURE__*/(() => {\n      let ɵClientsUpsertDialogComponent_BaseFactory;\n      return function ClientsUpsertDialogComponent_Factory(__ngFactoryType__) {\n        return (ɵClientsUpsertDialogComponent_BaseFactory || (ɵClientsUpsertDialogComponent_BaseFactory = i0.ɵɵgetInheritedFactory(ClientsUpsertDialogComponent)))(__ngFactoryType__ || ClientsUpsertDialogComponent);\n      };\n    })();\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClientsUpsertDialogComponent,\n      selectors: [[\"app-clients-upsert-dialog\"]],\n      features: [i0.ɵɵProvidersFeature([TuiDialogCloseService, ClientsUpsertDialogService, ClientsUpsertFormService]), i0.ɵɵInheritDefinitionFeature],\n      decls: 11,\n      vars: 8,\n      consts: [[1, \"title\"], [3, \"overlay\", \"showLoader\"], [1, \"content\"], [3, \"form\"], [1, \"actions\"], [\"type\", \"button\", \"tuiButton\", \"\", \"size\", \"m\", \"appearance\", \"secondary\", 3, \"click\"], [\"type\", \"button\", \"appearance\", \"accent\", \"tuiButton\", \"\", \"size\", \"m\", 3, \"disabled\", \"showLoader\"], [\"type\", \"button\", \"tuiButton\", \"\", \"size\", \"m\", 3, \"click\", \"disabled\", \"showLoader\"], [\"type\", \"button\", \"appearance\", \"accent\", \"tuiButton\", \"\", \"size\", \"m\", 3, \"click\", \"disabled\", \"showLoader\"]],\n      template: function ClientsUpsertDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"tui-loader\", 1)(3, \"div\", 2);\n          i0.ɵɵelement(4, \"app-clients-upsert-dialog-form\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ClientsUpsertDialogComponent_Template_button_click_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onClose());\n          });\n          i0.ɵɵtext(7, \" \\u041E\\u0442\\u043C\\u0435\\u043D\\u0430 \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵconditionalCreate(8, ClientsUpsertDialogComponent_Conditional_8_Template, 2, 2, \"button\", 6);\n          i0.ɵɵelementStart(9, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function ClientsUpsertDialogComponent_Template_button_click_9_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSave());\n          });\n          i0.ɵɵtext(10);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const title_r4 = ctx.$isEditable() ? \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\" : \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\";\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\"\", title_r4, \" \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"overlay\", true)(\"showLoader\", ctx.$isLoaded());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"form\", ctx.$form());\n          i0.ɵɵadvance(4);\n          i0.ɵɵconditional(ctx.$isEditable() ? 8 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.$form().invalid || ctx.$isSaving())(\"showLoader\", ctx.$isSaving());\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.$isEditable() ? \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\" : \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\", \" \");\n        }\n      },\n      dependencies: [TuiButtonModule, i1.TuiButtonComponent, TuiLoaderModule, i1.TuiLoaderComponent, ClientsUpsertDialogFormComponent],\n      styles: [\".title[_ngcontent-%COMP%]{margin-bottom:var(--spacing-6x);font-size:1.75rem;font-weight:500;line-height:2rem}.content[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:var(--spacing-6x);margin-bottom:var(--spacing-6x)}.actions[_ngcontent-%COMP%]{display:flex;gap:var(--spacing-2x);justify-content:flex-end;margin-top:var(--spacing-6x)}\"],\n      changeDetection: 0\n    });\n  }\n  return ClientsUpsertDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}