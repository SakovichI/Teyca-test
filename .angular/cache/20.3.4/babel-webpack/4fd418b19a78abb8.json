{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, Inject, Component, ChangeDetectionStrategy, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i1 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, CHAR_MINUS, CHAR_PLUS, tuiRoundWith, TuiLetModule } from '@taiga-ui/cdk';\nimport { TuiCurrency } from '@taiga-ui/addon-commerce/enums';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@taiga-ui/addon-commerce/pipes';\nimport { TuiCurrencyPipeModule } from '@taiga-ui/addon-commerce/pipes';\nimport { tuiFormatNumber, TUI_NUMBER_FORMAT } from '@taiga-ui/core';\nfunction TuiMoneyComponent_span_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TuiMoneyComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2)(1, \"span\");\n    i0.ɵɵelement(2, \"span\", 3);\n    i0.ɵɵpipe(3, \"tuiIntegerPart\");\n    i0.ɵɵelement(4, \"span\", 4);\n    i0.ɵɵpipe(5, \"tuiFractionPart\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, TuiMoneyComponent_span_2_span_6_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelement(7, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currencySymbol_r1 = ctx.tuiLet;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-container_reverse\", !ctx_r1.alignRight);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"textContent\", i0.ɵɵpipeBind2(3, 6, ctx_r1.value, ctx_r1.precision));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"textContent\", i0.ɵɵpipeBind3(5, 9, ctx_r1.value, ctx_r1.decimal, ctx_r1.precision));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.alignRight && currencySymbol_r1 || currencySymbol_r1.length > 1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"textContent\", currencySymbol_r1);\n  }\n}\nconst TUI_MONEY_DEFAULT_OPTIONS = {\n  decimal: 'not-zero',\n  currency: TuiCurrency.Ruble,\n  currencyAlign: 'right',\n  sign: 'negative-only',\n  colored: false,\n  precision: 2,\n  singleColor: false\n};\n/**\n * @deprecated TODO: remove in 4.0\n */\nconst TUI_MONEY_DEFAULT_DEFAULT_OPTIONS = TUI_MONEY_DEFAULT_OPTIONS;\nconst TUI_MONEY_OPTIONS = tuiCreateToken(TUI_MONEY_DEFAULT_OPTIONS);\nfunction tuiMoneyOptionsProvider(options) {\n  return tuiProvideOptions(TUI_MONEY_OPTIONS, options, TUI_MONEY_DEFAULT_OPTIONS);\n}\nfunction tuiFormatSignSymbol(value, sign) {\n  if (sign === 'never' || !value || sign === 'negative-only' && value > 0) {\n    return '';\n  }\n  if (sign === 'force-negative' || value < 0 && sign !== 'force-positive') {\n    return CHAR_MINUS;\n  }\n  return CHAR_PLUS;\n}\nlet TuiSignSymbolPipe = /*#__PURE__*/(() => {\n  class TuiSignSymbolPipe {\n    transform(value, sign) {\n      return tuiFormatSignSymbol(value, sign);\n    }\n  }\n  TuiSignSymbolPipe.ɵfac = function TuiSignSymbolPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiSignSymbolPipe)();\n  };\n  TuiSignSymbolPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"tuiSignSymbol\",\n    type: TuiSignSymbolPipe,\n    pure: true,\n    standalone: false\n  });\n  return TuiSignSymbolPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiIntegerPartPipe = /*#__PURE__*/(() => {\n  class TuiIntegerPartPipe {\n    constructor(numberFormat) {\n      this.numberFormat = numberFormat;\n    }\n    transform(value, precision = 2) {\n      const rounded = tuiRoundWith({\n        value: Math.abs(Number(value)),\n        precision,\n        method: this.numberFormat.rounding\n      });\n      return tuiFormatNumber(rounded, Object.assign(Object.assign({}, this.numberFormat), {\n        decimalLimit: 0,\n        rounding: 'truncate'\n      }));\n    }\n  }\n  TuiIntegerPartPipe.ɵfac = function TuiIntegerPartPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiIntegerPartPipe)(i0.ɵɵdirectiveInject(TUI_NUMBER_FORMAT, 16));\n  };\n  TuiIntegerPartPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"tuiIntegerPart\",\n    type: TuiIntegerPartPipe,\n    pure: true,\n    standalone: false\n  });\n  return TuiIntegerPartPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction tuiFormatFractionPart(options) {\n  const {\n    value,\n    decimal,\n    numberFormat,\n    precision\n  } = options;\n  const fraction = tuiFormatNumber(value, Object.assign(Object.assign({}, numberFormat), {\n    decimalLimit: precision\n  })).split(numberFormat.decimalSeparator)[1];\n  const shouldShow = decimal !== 'never' && (decimal === 'always' || !!parseInt(fraction, 10));\n  return shouldShow ? `${numberFormat.decimalSeparator}${fraction}` : '';\n}\nlet TuiFractionPartPipe = /*#__PURE__*/(() => {\n  class TuiFractionPartPipe {\n    constructor(numberFormat) {\n      this.numberFormat = numberFormat;\n    }\n    transform(value, decimal, precision) {\n      return tuiFormatFractionPart({\n        value,\n        decimal,\n        precision,\n        numberFormat: this.numberFormat\n      });\n    }\n  }\n  TuiFractionPartPipe.ɵfac = function TuiFractionPartPipe_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiFractionPartPipe)(i0.ɵɵdirectiveInject(TUI_NUMBER_FORMAT, 16));\n  };\n  TuiFractionPartPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"tuiFractionPart\",\n    type: TuiFractionPartPipe,\n    pure: true,\n    standalone: false\n  });\n  return TuiFractionPartPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMoneyComponent = /*#__PURE__*/(() => {\n  class TuiMoneyComponent {\n    constructor(options) {\n      this.options = options;\n      this.value = NaN;\n      this.decimal = this.options.decimal;\n      this.currency = this.options.currency;\n      this.currencyAlign = this.options.currencyAlign;\n      this.sign = this.options.sign;\n      this.colored = this.options.colored;\n      this.precision = this.options.precision;\n      this.singleColor = this.options.singleColor;\n    }\n    get signSymbol() {\n      return tuiFormatSignSymbol(this.value, this.sign);\n    }\n    get red() {\n      return this.colored && (this.signSymbol === CHAR_MINUS || this.value < 0 && this.sign !== 'force-positive');\n    }\n    get green() {\n      return this.colored && (this.signSymbol === CHAR_PLUS || this.value > 0 && this.sign !== 'force-negative');\n    }\n    get alignRight() {\n      return this.currencyAlign === 'right';\n    }\n    get inheritColor() {\n      return this.singleColor || this.value === 0 && this.colored;\n    }\n  }\n  TuiMoneyComponent.ɵfac = function TuiMoneyComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMoneyComponent)(i0.ɵɵdirectiveInject(TUI_MONEY_OPTIONS));\n  };\n  TuiMoneyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiMoneyComponent,\n    selectors: [[\"tui-money\"]],\n    hostVars: 6,\n    hostBindings: function TuiMoneyComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"_red\", ctx.red)(\"_green\", ctx.green)(\"_inherit-color\", ctx.inheritColor);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      decimal: \"decimal\",\n      currency: \"currency\",\n      currencyAlign: \"currencyAlign\",\n      sign: \"sign\",\n      colored: \"colored\",\n      precision: \"precision\",\n      singleColor: \"singleColor\"\n    },\n    standalone: false,\n    decls: 4,\n    vars: 7,\n    consts: [[\"automation-id\", \"tui-money__sign\", 3, \"textContent\"], [\"class\", \"t-container\", 3, \"t-container_reverse\", 4, \"tuiLet\"], [1, \"t-container\"], [\"automation-id\", \"tui-money__integer-part\", 3, \"textContent\"], [\"automation-id\", \"tui-money__fraction-part\", 1, \"t-lighter\", 3, \"textContent\"], [4, \"ngIf\"], [\"automation-id\", \"tui-money__currency\", 1, \"t-lighter\", 3, \"textContent\"]],\n    template: function TuiMoneyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵpipe(1, \"tuiSignSymbol\");\n        i0.ɵɵtemplate(2, TuiMoneyComponent_span_2_Template, 8, 13, \"span\", 1);\n        i0.ɵɵpipe(3, \"tuiCurrency\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"textContent\", i0.ɵɵpipeBind2(1, 2, ctx.value, ctx.sign));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(3, 5, ctx.currency));\n      }\n    },\n    dependencies: [i1.TuiLetDirective, i2.NgIf, TuiSignSymbolPipe, i4.TuiCurrencyPipe, TuiIntegerPartPipe, TuiFractionPartPipe],\n    styles: [\"[_nghost-%COMP%]{white-space:nowrap}._red[_nghost-%COMP%]{color:var(--tui-negative)}._green[_nghost-%COMP%]{color:var(--tui-positive)}[_nghost-%COMP%]:not(._inherit-color)   .t-lighter[_ngcontent-%COMP%]{opacity:var(--tui-disabled-opacity)}.t-container_reverse[_ngcontent-%COMP%]{display:inline-flex;flex-direction:row-reverse}\"],\n    changeDetection: 0\n  });\n  return TuiMoneyComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMoneyModule = /*#__PURE__*/(() => {\n  class TuiMoneyModule {}\n  TuiMoneyModule.ɵfac = function TuiMoneyModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMoneyModule)();\n  };\n  TuiMoneyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiMoneyModule\n  });\n  TuiMoneyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiCurrencyPipeModule, TuiLetModule]]\n  });\n  return TuiMoneyModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_MONEY_DEFAULT_DEFAULT_OPTIONS, TUI_MONEY_DEFAULT_OPTIONS, TUI_MONEY_OPTIONS, TuiFractionPartPipe, TuiIntegerPartPipe, TuiMoneyComponent, TuiMoneyModule, TuiSignSymbolPipe, tuiFormatFractionPart, tuiFormatSignSymbol, tuiMoneyOptionsProvider };\n//# sourceMappingURL=taiga-ui-addon-commerce-components-money.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}