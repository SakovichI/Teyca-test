{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, HostBinding, Directive, Inject, ElementRef, Renderer2, ChangeDetectorRef, NgZone, ViewChild, Input, Output, HostListener, NgModule } from '@angular/core';\nimport * as i1$1 from '@taiga-ui/cdk';\nimport { tuiCreateToken, tuiProvideOptions, TuiDestroyService, TuiHoveredService, tuiTypedFromEvent, tuiIsCurrentTarget, tuiZonefree, tuiPx, TuiResizeModule, TuiLetModule } from '@taiga-ui/cdk';\nimport * as i3 from '@taiga-ui/core';\nimport { TuiHintComponent, TuiPositionService, tuiPositionAccessorFor, TuiHintPositionDirective, tuiRectAccessorFor, TuiHintDirective, tuiFadeIn, TuiPositionAccessor, tuiAsPositionAccessor, TUI_HINT_COMPONENT, TuiHintModule } from '@taiga-ui/core';\nimport { BehaviorSubject, Subject, of, timer } from 'rxjs';\nimport { distinctUntilChanged, startWith, pairwise, switchMap, filter, map } from 'rxjs/operators';\nimport * as i1 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction TuiLineClampBoxComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r1 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(text_r1);\n  }\n}\nfunction TuiLineClampComponent_div_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r3 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r3, \" \");\n  }\n}\nfunction TuiLineClampComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"mouseenter\", function TuiLineClampComponent_div_0_Template_div_mouseenter_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateView());\n    })(\"tuiResize\", function TuiLineClampComponent_div_0_Template_div_tuiResize_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateView());\n    });\n    i0.ɵɵtemplate(1, TuiLineClampComponent_div_0_ng_container_1_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lineClamp_r4 = ctx.tuiLet;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"-webkit-line-clamp\", lineClamp_r4)(\"word-break\", (lineClamp_r4 || 0) > 1 ? \"break-word\" : \"break-all\");\n    i0.ɵɵproperty(\"tuiHint\", ctx_r1.computedContent);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.content);\n  }\n}\nconst TUI_LINE_CLAMP_DEFAULT_OPTIONS = {\n  showHint: true\n};\n/**\n * Default parameters for LineClamp component\n */\nconst TUI_LINE_CLAMP_OPTIONS = tuiCreateToken(TUI_LINE_CLAMP_DEFAULT_OPTIONS);\nfunction tuiLineClampOptionsProvider(options) {\n  return tuiProvideOptions(TUI_LINE_CLAMP_OPTIONS, options, TUI_LINE_CLAMP_DEFAULT_OPTIONS);\n}\nlet TuiLineClampBoxComponent = /*#__PURE__*/(() => {\n  class TuiLineClampBoxComponent extends TuiHintComponent {\n    get width() {\n      return this.accessor.getClientRect().width;\n    }\n  }\n  TuiLineClampBoxComponent.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiLineClampBoxComponent_BaseFactory;\n    return function TuiLineClampBoxComponent_Factory(__ngFactoryType__) {\n      return (ɵTuiLineClampBoxComponent_BaseFactory || (ɵTuiLineClampBoxComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiLineClampBoxComponent)))(__ngFactoryType__ || TuiLineClampBoxComponent);\n    };\n  })();\n  TuiLineClampBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiLineClampBoxComponent,\n    selectors: [[\"tui-line-clamp-box\"]],\n    hostVars: 2,\n    hostBindings: function TuiLineClampBoxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"min-width\", ctx.width, \"px\");\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService, TuiPositionService, TuiHoveredService, tuiPositionAccessorFor('hint', TuiHintPositionDirective), tuiRectAccessorFor('hint', TuiHintDirective)]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"polymorpheusOutlet\"]],\n    template: function TuiLineClampBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiLineClampBoxComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"polymorpheusOutlet\", ctx.content);\n      }\n    },\n    dependencies: [i1.PolymorpheusOutletDirective],\n    styles: [\"[_nghost-%COMP%]{position:absolute;box-shadow:var(--tui-shadow-dropdown);width:-webkit-min-content;width:min-content;padding:.75rem 1rem;margin-left:calc(-1px - 1rem);margin-top:calc(-1px - .75rem);border-radius:var(--tui-radius-l);box-sizing:content-box;border:1px solid var(--tui-base-03);background:var(--tui-base-01);color:var(--tui-text-01);word-wrap:break-word}\"],\n    data: {\n      animation: [tuiFadeIn]\n    },\n    changeDetection: 0\n  });\n  return TuiLineClampBoxComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiLineClampPositionDirective = /*#__PURE__*/(() => {\n  class TuiLineClampPositionDirective extends TuiPositionAccessor {\n    constructor(accessor) {\n      super();\n      this.accessor = accessor;\n      this.type = 'hint';\n    }\n    getPosition() {\n      const {\n        top,\n        left\n      } = this.accessor.getClientRect();\n      return [top, left];\n    }\n  }\n  TuiLineClampPositionDirective.ɵfac = function TuiLineClampPositionDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLineClampPositionDirective)(i0.ɵɵdirectiveInject(TuiHintDirective));\n  };\n  TuiLineClampPositionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiLineClampPositionDirective,\n    selectors: [[\"\", \"tuiLineClamp\", \"\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsPositionAccessor(TuiLineClampPositionDirective)]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiLineClampPositionDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiLineClampComponent = /*#__PURE__*/(() => {\n  class TuiLineClampComponent {\n    constructor(el, renderer, cd, zone, options) {\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.zone = zone;\n      this.options = options;\n      this.linesLimit$ = new BehaviorSubject(1);\n      this.isOverflown$ = new Subject();\n      this.initialized = false;\n      this.lineHeight = 24;\n      this.overflownChange = this.isOverflown$.pipe(distinctUntilChanged());\n      this.lineClamp$ = this.linesLimit$.pipe(startWith(1), pairwise(), switchMap(([prev, next]) => next >= prev ? of(next) : tuiTypedFromEvent(this.el.nativeElement, 'transitionend').pipe(filter(tuiIsCurrentTarget), map(() => next))));\n      this.skipInitialTransition();\n    }\n    set linesLimit(linesLimit) {\n      this.linesLimit$.next(linesLimit);\n    }\n    get overflown() {\n      if (!this.outlet) {\n        return false;\n      }\n      const {\n        scrollHeight,\n        scrollWidth\n      } = this.outlet.nativeElement;\n      const {\n        clientHeight,\n        clientWidth\n      } = this.el.nativeElement;\n      // 4px buffer for IE/Edge incorrectly rounding scrollHeight\n      return scrollHeight - clientHeight > 4 || scrollWidth - clientWidth > 0;\n    }\n    get computedContent() {\n      return this.options.showHint && this.overflown ? this.content : '';\n    }\n    updateView() {\n      this.cd.detectChanges();\n    }\n    ngDoCheck() {\n      this.update();\n      this.isOverflown$.next(this.overflown);\n    }\n    ngAfterViewInit() {\n      this.initialized = true;\n    }\n    skipInitialTransition() {\n      timer(0).pipe(tuiZonefree(this.zone)).subscribe(() => {\n        this.renderer.addClass(this.el.nativeElement, '_initialized');\n        this.cd.detectChanges();\n      });\n    }\n    update() {\n      if (this.outlet) {\n        this.renderer.setStyle(this.el.nativeElement, 'height', tuiPx(this.outlet.nativeElement.scrollHeight + 4));\n      }\n      if (this.initialized) {\n        this.renderer.setStyle(this.el.nativeElement, 'max-height', tuiPx(this.lineHeight * this.linesLimit$.value));\n      }\n    }\n  }\n  TuiLineClampComponent.ɵfac = function TuiLineClampComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLineClampComponent)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(TUI_LINE_CLAMP_OPTIONS));\n  };\n  TuiLineClampComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiLineClampComponent,\n    selectors: [[\"tui-line-clamp\"]],\n    viewQuery: function TuiLineClampComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiHintDirective, 5, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.outlet = _t.first);\n      }\n    },\n    hostBindings: function TuiLineClampComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"transitionend\", function TuiLineClampComponent_transitionend_HostBindingHandler() {\n          return ctx.updateView();\n        });\n      }\n    },\n    inputs: {\n      linesLimit: \"linesLimit\",\n      lineHeight: \"lineHeight\",\n      content: \"content\"\n    },\n    outputs: {\n      overflownChange: \"overflownChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TUI_HINT_COMPONENT,\n      useValue: TuiLineClampBoxComponent\n    }])],\n    decls: 2,\n    vars: 3,\n    consts: [[\"tuiLineClamp\", \"\", \"class\", \"t-wrapper\", 3, \"-webkit-line-clamp\", \"word-break\", \"tuiHint\", \"mouseenter\", \"tuiResize\", 4, \"tuiLet\"], [\"tuiLineClamp\", \"\", 1, \"t-wrapper\", 3, \"mouseenter\", \"tuiResize\", \"tuiHint\"], [4, \"polymorpheusOutlet\"]],\n    template: function TuiLineClampComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiLineClampComponent_div_0_Template, 2, 6, \"div\", 0);\n        i0.ɵɵpipe(1, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.lineClamp$));\n      }\n    },\n    dependencies: [i1$1.TuiLetDirective, TuiLineClampPositionDirective, i3.TuiHintDirective, i3.TuiHintDriverDirective, i3.TuiHintHoverDirective, i3.TuiHintPositionDirective, i1$1.TuiResizeDirective, i1.PolymorpheusOutletDirective, i5.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:block;overflow:hidden}._initialized[_nghost-%COMP%]{transition-property:max-height;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}.t-wrapper[_ngcontent-%COMP%]{display:-webkit-box;-webkit-box-orient:vertical;overflow:hidden;overflow-wrap:anywhere}.t-wrapper[_ngcontent-%COMP%]    >*{white-space:initial}\"],\n    changeDetection: 0\n  });\n  return TuiLineClampComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiLineClampModule = /*#__PURE__*/(() => {\n  class TuiLineClampModule {}\n  TuiLineClampModule.ɵfac = function TuiLineClampModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiLineClampModule)();\n  };\n  TuiLineClampModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiLineClampModule\n  });\n  TuiLineClampModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiHintModule, TuiResizeModule, TuiLetModule]]\n  });\n  return TuiLineClampModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_LINE_CLAMP_DEFAULT_OPTIONS, TUI_LINE_CLAMP_OPTIONS, TuiLineClampBoxComponent, TuiLineClampComponent, TuiLineClampModule, tuiLineClampOptionsProvider };\n//# sourceMappingURL=taiga-ui-kit-components-line-clamp.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}