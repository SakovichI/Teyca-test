{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, NgZone, ElementRef, Injectable, Inject, TemplateRef, Component, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MutationObserverService, MUTATION_OBSERVER_INIT } from '@ng-web-apis/mutation-observer';\nimport * as i2 from '@taiga-ui/cdk';\nimport { AbstractTuiController, tuiZoneOptimized, tuiClamp, TuiResizeService, EMPTY_QUERY, TuiDestroyService, TuiItemDirective, TuiItemModule, TuiLetModule } from '@taiga-ui/cdk';\nimport * as i1 from 'rxjs';\nimport { Observable, merge } from 'rxjs';\nimport { throttleTime, map, distinctUntilChanged, share } from 'rxjs/operators';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@taiga-ui/kit/directives';\nimport { TuiProjectClassModule } from '@taiga-ui/kit/directives';\nconst _c0 = () => [\"_active\"];\nconst _c1 = a0 => ({\n  $implicit: a0\n});\nfunction TuiItemsWithMoreComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiItemsWithMoreComponent_ng_container_2_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiItemsWithMoreComponent_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TuiItemsWithMoreComponent_ng_container_2_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const lastIndex_r3 = i0.ɵɵnextContext().tuiLet;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-item_hidden\", index_r2 > lastIndex_r3 && index_r2 !== ctx_r3.directive.required);\n    i0.ɵɵproperty(\"tuiProjectClass\", i0.ɵɵpureFunction0(4, _c0));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", item_r1);\n  }\n}\nfunction TuiItemsWithMoreComponent_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵelementContainer(1, 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const lastIndex_r3 = i0.ɵɵnextContext().tuiLet;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-item_hidden\", lastIndex_r3 >= ctx_r3.items.length - 1);\n    i0.ɵɵproperty(\"tuiProjectClass\", i0.ɵɵpureFunction0(5, _c0));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.more)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c1, lastIndex_r3));\n  }\n}\nfunction TuiItemsWithMoreComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiItemsWithMoreComponent_ng_container_2_div_1_Template, 2, 5, \"div\", 2)(2, TuiItemsWithMoreComponent_ng_container_2_span_2_Template, 2, 8, \"span\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const lastIndex_r3 = ctx.tuiLet;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.items);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.more && lastIndex_r3 < ctx_r3.items.length - 1);\n  }\n}\nlet TuiItemsWithMoreDirective = /*#__PURE__*/(() => {\n  class TuiItemsWithMoreDirective extends AbstractTuiController {\n    constructor() {\n      super(...arguments);\n      this.itemsLimit = Infinity;\n      this.required = -1;\n    }\n  }\n  TuiItemsWithMoreDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiItemsWithMoreDirective_BaseFactory;\n    return function TuiItemsWithMoreDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiItemsWithMoreDirective_BaseFactory || (ɵTuiItemsWithMoreDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiItemsWithMoreDirective)))(__ngFactoryType__ || TuiItemsWithMoreDirective);\n    };\n  })();\n  TuiItemsWithMoreDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiItemsWithMoreDirective,\n    selectors: [[\"tui-items-with-more\"]],\n    inputs: {\n      itemsLimit: \"itemsLimit\",\n      required: \"required\"\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiItemsWithMoreDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiItemsWithMoreService = /*#__PURE__*/(() => {\n  class TuiItemsWithMoreService extends Observable {\n    constructor(zone, el, mutation$, resize$, directive) {\n      super(subscriber => this.stream$.subscribe(subscriber));\n      this.zone = zone;\n      this.el = el;\n      this.mutation$ = mutation$;\n      this.resize$ = resize$;\n      this.directive = directive;\n      this.stream$ = merge(this.directive.change$, this.mutation$, this.resize$).pipe(throttleTime(0), map(() => this.getOverflowIndex()), distinctUntilChanged(), tuiZoneOptimized(this.zone), share());\n    }\n    getOverflowIndex() {\n      var _a;\n      const {\n        clientWidth,\n        children\n      } = this.el.nativeElement;\n      const items = Array.from(children, ({\n        clientWidth\n      }) => clientWidth);\n      const first = this.directive.required === -1 ? 0 : this.directive.required;\n      const last = items.length - 1;\n      const more = ((_a = children[last]) === null || _a === void 0 ? void 0 : _a.tagName) === 'SPAN' ? items[last] : 0;\n      items.unshift(...items.splice(first, 1));\n      let total = items.reduce((sum, width) => sum + width, 0) - more;\n      if (total <= clientWidth && this.directive.itemsLimit >= items.length) {\n        return this.maxItems;\n      }\n      for (let i = last - 1; i > 0; i--) {\n        total -= items[i];\n        if (total + more <= clientWidth) {\n          return tuiClamp(i > this.directive.required ? i - 1 : i - 2, -1, this.maxItems);\n        }\n      }\n      return -1;\n    }\n    get maxItems() {\n      return this.directive.itemsLimit > this.directive.required ? this.directive.itemsLimit - 1 : this.directive.itemsLimit - 2;\n    }\n  }\n  TuiItemsWithMoreService.ɵfac = function TuiItemsWithMoreService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiItemsWithMoreService)(i0.ɵɵinject(NgZone), i0.ɵɵinject(ElementRef), i0.ɵɵinject(MutationObserverService), i0.ɵɵinject(TuiResizeService), i0.ɵɵinject(TuiItemsWithMoreDirective));\n  };\n  TuiItemsWithMoreService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TuiItemsWithMoreService,\n    factory: TuiItemsWithMoreService.ɵfac\n  });\n  return TuiItemsWithMoreService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiMoreDirective = /*#__PURE__*/(() => {\n  class TuiMoreDirective {\n    static ngTemplateContextGuard(_dir, _ctx) {\n      return true;\n    }\n  }\n  TuiMoreDirective.ɵfac = function TuiMoreDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiMoreDirective)();\n  };\n  TuiMoreDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiMoreDirective,\n    selectors: [[\"\", \"tuiMore\", \"\"]],\n    standalone: false\n  });\n  return TuiMoreDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiItemsWithMoreComponent = /*#__PURE__*/(() => {\n  class TuiItemsWithMoreComponent {\n    constructor(directive, lastVisibleIndex$) {\n      this.directive = directive;\n      this.lastVisibleIndex$ = lastVisibleIndex$;\n      this.items = EMPTY_QUERY;\n    }\n  }\n  TuiItemsWithMoreComponent.ɵfac = function TuiItemsWithMoreComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiItemsWithMoreComponent)(i0.ɵɵdirectiveInject(TuiItemsWithMoreDirective), i0.ɵɵdirectiveInject(TuiItemsWithMoreService));\n  };\n  TuiItemsWithMoreComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiItemsWithMoreComponent,\n    selectors: [[\"tui-items-with-more\"]],\n    contentQueries: function TuiItemsWithMoreComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TuiMoreDirective, 5, TemplateRef);\n        i0.ɵɵcontentQuery(dirIndex, TuiItemDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.more = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([MutationObserverService, TuiResizeService, TuiDestroyService, TuiItemsWithMoreService, {\n      provide: MUTATION_OBSERVER_INIT,\n      useValue: {\n        childList: true,\n        characterData: true,\n        subtree: true\n      }\n    }])],\n    decls: 4,\n    vars: 6,\n    consts: [[4, \"ngIf\"], [4, \"tuiLet\"], [\"class\", \"t-item\", 3, \"t-item_hidden\", \"tuiProjectClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"t-item\", 3, \"t-item_hidden\", \"tuiProjectClass\", 4, \"ngIf\"], [1, \"t-item\", 3, \"tuiProjectClass\"], [4, \"ngTemplateOutlet\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function TuiItemsWithMoreComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiItemsWithMoreComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵtemplate(2, TuiItemsWithMoreComponent_ng_container_2_Template, 3, 2, \"ng-container\", 1);\n        i0.ɵɵpipe(3, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.items.changes));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(3, 4, ctx.lastVisibleIndex$) || 0);\n      }\n    },\n    dependencies: [i1$1.NgIf, i2.TuiLetDirective, i1$1.NgForOf, i3.TuiProjectClassDirective, i1$1.NgTemplateOutlet, i1$1.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:flex;align-items:center;white-space:nowrap}.t-item[_ngcontent-%COMP%]{flex:0 0 auto}.t-item_hidden[_ngcontent-%COMP%]{position:absolute;visibility:hidden}\"],\n    changeDetection: 0\n  });\n  return TuiItemsWithMoreComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiItemsWithMoreModule = /*#__PURE__*/(() => {\n  class TuiItemsWithMoreModule {}\n  TuiItemsWithMoreModule.ɵfac = function TuiItemsWithMoreModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiItemsWithMoreModule)();\n  };\n  TuiItemsWithMoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiItemsWithMoreModule\n  });\n  TuiItemsWithMoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiItemModule, TuiLetModule, TuiProjectClassModule]]\n  });\n  return TuiItemsWithMoreModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiItemsWithMoreComponent, TuiItemsWithMoreDirective, TuiItemsWithMoreModule, TuiItemsWithMoreService, TuiMoreDirective };\n//# sourceMappingURL=taiga-ui-kit-components-items-with-more.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}