{"ast":null,"code":"import { trigger, transition, style, query, animateChild } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Inject, Self, NgModule } from '@angular/core';\nimport * as i6 from '@angular/platform-browser';\nimport { Title } from '@angular/platform-browser';\nimport { HISTORY } from '@ng-web-apis/common';\nimport { TuiDestroyService } from '@taiga-ui/cdk/services';\nimport { TUI_IS_MOBILE, TUI_DIALOGS } from '@taiga-ui/cdk/tokens';\nimport { tuiCreateToken } from '@taiga-ui/cdk/utils';\nimport * as i5 from 'rxjs';\nimport { of, combineLatest } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@taiga-ui/cdk/components/scroll-controls';\nimport { TuiScrollControlsModule } from '@taiga-ui/cdk/components/scroll-controls';\nimport * as i3 from '@taiga-ui/cdk/directives';\nimport { TuiOverscrollModule, TuiFocusTrapModule, TuiLetModule } from '@taiga-ui/cdk/directives';\nimport * as i4 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nfunction TuiDialogHostComponent_section_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiDialogHostComponent_section_0_tui_scroll_controls_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-scroll-controls\", 5);\n  }\n}\nfunction TuiDialogHostComponent_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 2);\n    i0.ɵɵtemplate(1, TuiDialogHostComponent_section_0_ng_container_1_Template, 1, 0, \"ng-container\", 3)(2, TuiDialogHostComponent_section_0_tui_scroll_controls_2_Template, 1, 0, \"tui-scroll-controls\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@host\", undefined);\n    i0.ɵɵattribute(\"aria-labelledby\", item_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", item_r1.component)(\"polymorpheusOutletContext\", item_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isMobile);\n  }\n}\nfunction TuiDialogHostComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"transitionend\", function TuiDialogHostComponent_div_1_Template_div_transitionend_0_listener($event) {\n      const isDialogClosesOnBack_r4 = i0.ɵɵrestoreView(_r3).tuiLet;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDialog($event, !!ctx_r1.dialogs.length, !!isDialogClosesOnBack_r4));\n    })(\"popstate\", function TuiDialogHostComponent_div_1_Template_div_popstate_0_listener() {\n      const isDialogClosesOnBack_r4 = i0.ɵɵrestoreView(_r3).tuiLet;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeLast(ctx_r1.dialogs, !!isDialogClosesOnBack_r4));\n    }, i0.ɵɵresolveWindow);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-overlay_visible\", ctx_r1.dialogs.length);\n  }\n}\nconst FAKE_HISTORY_STATE = {\n  label: 'ignoreMe'\n};\nconst isFakeHistoryState = historyState => (historyState === null || historyState === void 0 ? void 0 : historyState.label) === FAKE_HISTORY_STATE.label;\n/**\n * Is closing dialog on browser backward navigation enabled\n */\nconst TUI_DIALOG_CLOSES_ON_BACK = tuiCreateToken(of(false));\nlet TuiDialogHostComponent = /*#__PURE__*/(() => {\n  class TuiDialogHostComponent {\n    constructor(isMobile, isDialogClosesOnBack$, dialogsByType, historyRef, titleService, destroy$, cdr, doc) {\n      this.isMobile = isMobile;\n      this.isDialogClosesOnBack$ = isDialogClosesOnBack$;\n      this.dialogsByType = dialogsByType;\n      this.historyRef = historyRef;\n      this.titleService = titleService;\n      this.destroy$ = destroy$;\n      this.cdr = cdr;\n      this.doc = doc;\n      this.dialogs = [];\n    }\n    ngOnInit() {\n      // Due to this view being parallel to app content, `markForCheck` from `async` pipe\n      // can happen after view was checked, so calling `detectChanges` instead\n      combineLatest(this.dialogsByType).pipe(map(arr => [].concat(...arr).sort((a, b) => a.createdAt - b.createdAt)), takeUntil(this.destroy$)).subscribe(dialogs => {\n        var _a;\n        this.dialogs = dialogs;\n        this.cdr.markForCheck();\n        (_a = this.doc.defaultView) === null || _a === void 0 ? void 0 : _a.document.documentElement.classList.toggle('t-overscroll-none', !!dialogs.length);\n      });\n    }\n    closeLast(dialogs, isDialogClosesOnBack) {\n      if (!isDialogClosesOnBack) {\n        return;\n      }\n      const [last] = dialogs.slice(-1);\n      if (!last) {\n        return;\n      }\n      if (dialogs.length > 1) {\n        this.historyRef.pushState(FAKE_HISTORY_STATE, this.titleService.getTitle());\n      }\n      last.$implicit.complete();\n    }\n    onDialog({\n      propertyName\n    }, popupOpened, isDialogClosesOnBack) {\n      if (!isDialogClosesOnBack || propertyName !== 'letter-spacing') {\n        return;\n      }\n      if (popupOpened) {\n        this.historyRef.pushState(FAKE_HISTORY_STATE, this.titleService.getTitle());\n      } else if (isFakeHistoryState(this.historyRef.state)) {\n        this.historyRef.back();\n      }\n    }\n  }\n  TuiDialogHostComponent.ɵfac = function TuiDialogHostComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiDialogHostComponent)(i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TUI_DIALOG_CLOSES_ON_BACK), i0.ɵɵdirectiveInject(TUI_DIALOGS), i0.ɵɵdirectiveInject(HISTORY), i0.ɵɵdirectiveInject(Title), i0.ɵɵdirectiveInject(TuiDestroyService, 2), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n  TuiDialogHostComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiDialogHostComponent,\n    selectors: [[\"tui-dialog-host\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService])],\n    decls: 3,\n    vars: 4,\n    consts: [[\"aria-modal\", \"true\", \"role\", \"dialog\", \"tuiFocusTrap\", \"\", \"tuiOverscroll\", \"all\", \"tuiScrollRef\", \"\", \"class\", \"t-dialog\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"t-overlay\", 3, \"t-overlay_visible\", \"transitionend\", \"popstate\", 4, \"tuiLet\"], [\"aria-modal\", \"true\", \"role\", \"dialog\", \"tuiFocusTrap\", \"\", \"tuiOverscroll\", \"all\", \"tuiScrollRef\", \"\", 1, \"t-dialog\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"class\", \"t-scrollbars\", 4, \"ngIf\"], [1, \"t-scrollbars\"], [1, \"t-overlay\", 3, \"transitionend\", \"popstate\"]],\n    template: function TuiDialogHostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TuiDialogHostComponent_section_0_Template, 3, 5, \"section\", 0)(1, TuiDialogHostComponent_div_1_Template, 1, 2, \"div\", 1);\n        i0.ɵɵpipe(2, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.dialogs);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(2, 2, ctx.isDialogClosesOnBack$));\n      }\n    },\n    dependencies: [i1.TuiScrollControlsComponent, i2.NgForOf, i3.TuiFocusTrapDirective, i3.TuiOverscrollDirective, i1.TuiScrollRefDirective, i4.PolymorpheusOutletDirective, i2.NgIf, i3.TuiLetDirective, i2.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{position:fixed;left:0;bottom:0;width:100%;height:0}.t-overlay[_ngcontent-%COMP%], .t-dialog[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;bottom:0;display:flex;align-items:flex-start;outline:none;overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.t-overlay.ng-animating[_ngcontent-%COMP%], .t-dialog.ng-animating[_ngcontent-%COMP%]{overflow:clip}.t-overlay[_ngcontent-%COMP%]::-webkit-scrollbar, .t-dialog[_ngcontent-%COMP%]::-webkit-scrollbar, .t-overlay[_ngcontent-%COMP%]::-webkit-scrollbar-thumb, .t-dialog[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{display:none}.t-dialog[_ngcontent-%COMP%]{bottom:auto;height:100%}.t-overlay[_ngcontent-%COMP%]{height:100%;pointer-events:none;touch-action:none;opacity:0;letter-spacing:normal;transition:opacity var(--tui-duration, .3s),letter-spacing .01s;background:rgba(0,0,0,.75);-webkit-backdrop-filter:var(--tui-backdrop, none);backdrop-filter:var(--tui-backdrop, none)}.t-overlay_visible[_ngcontent-%COMP%]{opacity:1;letter-spacing:1px}.t-dialog[_ngcontent-%COMP%]:last-of-type{z-index:1}.t-scrollbars[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;bottom:0;margin:0;color:#747474}\"],\n    data: {\n      animation: [trigger('host', [transition(':enter', [style({\n        overflow: 'clip'\n      }), query(':scope > *', [animateChild()], {\n        optional: true\n      })]), transition(':leave', [query(':scope > *', [animateChild()], {\n        optional: true\n      })])])]\n    }\n  });\n  return TuiDialogHostComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiDialogHostModule = /*#__PURE__*/(() => {\n  class TuiDialogHostModule {}\n  TuiDialogHostModule.ɵfac = function TuiDialogHostModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiDialogHostModule)();\n  };\n  TuiDialogHostModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiDialogHostModule\n  });\n  TuiDialogHostModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiOverscrollModule, TuiFocusTrapModule, TuiLetModule, TuiScrollControlsModule]]\n  });\n  return TuiDialogHostModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_DIALOG_CLOSES_ON_BACK, TuiDialogHostComponent, TuiDialogHostModule };\n//# sourceMappingURL=taiga-ui-cdk-components-dialog-host.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}