{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { NgControl } from '@angular/forms';\nimport * as i2 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, tuiIsNativeFocused, tuiAsFocusableItemAccessor, tuiAsControl, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_CHECKBOX_OPTIONS, TuiPrimitiveCheckboxModule } from '@taiga-ui/core';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"focusableElement\"];\nlet TuiCheckboxComponent = /*#__PURE__*/(() => {\n  class TuiCheckboxComponent extends AbstractTuiNullableControl {\n    constructor(control, options, cdr) {\n      super(control, cdr);\n      this.options = options;\n      this.size = this.options.size;\n    }\n    get nativeFocusableElement() {\n      return !this.focusableElement || this.computedDisabled ? null : this.focusableElement.nativeElement;\n    }\n    get focused() {\n      return tuiIsNativeFocused(this.nativeFocusableElement);\n    }\n    get computedFocusable() {\n      return this.interactive && this.focusable;\n    }\n    /** @deprecated use 'value' setter */\n    onChecked(checked) {\n      this.value = checked;\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    onFocusVisible(focusVisible) {\n      this.updateFocusVisible(focusVisible);\n    }\n  }\n  TuiCheckboxComponent.ɵfac = function TuiCheckboxComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiCheckboxComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(TUI_CHECKBOX_OPTIONS), i0.ɵɵdirectiveInject(ChangeDetectorRef));\n  };\n  TuiCheckboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiCheckboxComponent,\n    selectors: [[\"tui-checkbox\"]],\n    viewQuery: function TuiCheckboxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.focusableElement = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiCheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      size: \"size\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiCheckboxComponent), tuiAsControl(TuiCheckboxComponent)]), i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 11,\n    consts: [[\"focusableElement\", \"\"], [3, \"disabled\", \"focused\", \"hovered\", \"invalid\", \"pressed\", \"size\", \"value\"], [\"automation-id\", \"tui-checkbox__native\", \"type\", \"checkbox\", 1, \"t-native\", 3, \"tuiCheckedChange\", \"tuiFocusedChange\", \"tuiFocusVisibleChange\", \"disabled\", \"id\", \"tuiFocusable\", \"tuiChecked\"]],\n    template: function TuiCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"tui-primitive-checkbox\", 1)(1, \"input\", 2, 0);\n        i0.ɵɵtwoWayListener(\"tuiCheckedChange\", function TuiCheckboxComponent_Template_input_tuiCheckedChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵlistener(\"tuiFocusedChange\", function TuiCheckboxComponent_Template_input_tuiFocusedChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocused($event));\n        })(\"tuiFocusVisibleChange\", function TuiCheckboxComponent_Template_input_tuiFocusVisibleChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocusVisible($event));\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"focused\", ctx.computedFocusVisible)(\"hovered\", ctx.pseudoHover)(\"invalid\", ctx.computedInvalid)(\"pressed\", ctx.pseudoActive)(\"size\", ctx.size)(\"value\", ctx.value);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"id\", ctx.id)(\"tuiFocusable\", ctx.computedFocusable);\n        i0.ɵɵtwoWayProperty(\"tuiChecked\", ctx.value);\n      }\n    },\n    dependencies: [i1.TuiPrimitiveCheckboxComponent, i2.TuiCheckedDirective, i2.TuiFocusableDirective, i2.TuiFocusedDirective, i2.TuiFocusVisibleDirective],\n    styles: [\"[_nghost-%COMP%]{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;flex-shrink:0}[data-size=m][_nghost-%COMP%]{width:1rem;height:1rem}[data-size=l][_nghost-%COMP%]{width:1.5rem;height:1.5rem}._readonly[_nghost-%COMP%]   tui-primitive-checkbox[_ngcontent-%COMP%]{pointer-events:none}.t-native[_ngcontent-%COMP%]{padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;cursor:pointer}.t-native[_ngcontent-%COMP%]:-webkit-autofill, .t-native[_ngcontent-%COMP%]:-webkit-autofill:hover, .t-native[_ngcontent-%COMP%]:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}\"],\n    changeDetection: 0\n  });\n  return TuiCheckboxComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiCheckboxModule = /*#__PURE__*/(() => {\n  class TuiCheckboxModule {}\n  TuiCheckboxModule.ɵfac = function TuiCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiCheckboxModule)();\n  };\n  TuiCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiCheckboxModule\n  });\n  TuiCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiCheckedModule, TuiFocusableModule, TuiFocusedModule, TuiFocusVisibleModule, TuiPrimitiveCheckboxModule]]\n  });\n  return TuiCheckboxModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCheckboxComponent, TuiCheckboxModule };\n//# sourceMappingURL=taiga-ui-kit-components-checkbox.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}