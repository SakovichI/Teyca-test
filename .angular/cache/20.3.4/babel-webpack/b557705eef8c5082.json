{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ElementRef, NgZone, Injectable, Inject, Directive, NgModule } from '@angular/core';\nimport { ALWAYS_TRUE_HANDLER, ALWAYS_FALSE_HANDLER } from '@taiga-ui/cdk/constants';\nimport { tuiTypedFromEvent, tuiZoneOptimized } from '@taiga-ui/cdk/observables';\nimport { tuiIsElement } from '@taiga-ui/cdk/utils';\nimport * as i1 from 'rxjs';\nimport { Observable, merge } from 'rxjs';\nimport { map, filter, distinctUntilChanged } from 'rxjs/operators';\nfunction movedOut({\n  currentTarget,\n  relatedTarget\n}) {\n  return !tuiIsElement(relatedTarget) || !tuiIsElement(currentTarget) || !currentTarget.contains(relatedTarget);\n}\nlet TuiHoveredService = /*#__PURE__*/(() => {\n  class TuiHoveredService extends Observable {\n    constructor(el, zone) {\n      super(subscriber => this.stream$.subscribe(subscriber));\n      this.el = el;\n      this.zone = zone;\n      this.stream$ = merge(tuiTypedFromEvent(this.el.nativeElement, 'mouseenter').pipe(map(ALWAYS_TRUE_HANDLER)), tuiTypedFromEvent(this.el.nativeElement, 'mouseleave').pipe(map(ALWAYS_FALSE_HANDLER)),\n      // Hello, Safari\n      tuiTypedFromEvent(this.el.nativeElement, 'mouseout').pipe(filter(movedOut), map(ALWAYS_FALSE_HANDLER))).pipe(distinctUntilChanged(), tuiZoneOptimized(this.zone));\n    }\n  }\n  TuiHoveredService.ɵfac = function TuiHoveredService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHoveredService)(i0.ɵɵinject(ElementRef), i0.ɵɵinject(NgZone));\n  };\n  TuiHoveredService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TuiHoveredService,\n    factory: TuiHoveredService.ɵfac\n  });\n  return TuiHoveredService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiHoveredDirective = /*#__PURE__*/(() => {\n  class TuiHoveredDirective {\n    constructor(tuiHoveredChange) {\n      this.tuiHoveredChange = tuiHoveredChange;\n    }\n  }\n  TuiHoveredDirective.ɵfac = function TuiHoveredDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHoveredDirective)(i0.ɵɵdirectiveInject(TuiHoveredService));\n  };\n  TuiHoveredDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiHoveredDirective,\n    selectors: [[\"\", \"tuiHoveredChange\", \"\"]],\n    outputs: {\n      tuiHoveredChange: \"tuiHoveredChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiHoveredService])]\n  });\n  return TuiHoveredDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiHoveredModule = /*#__PURE__*/(() => {\n  class TuiHoveredModule {}\n  TuiHoveredModule.ɵfac = function TuiHoveredModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHoveredModule)();\n  };\n  TuiHoveredModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiHoveredModule\n  });\n  TuiHoveredModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return TuiHoveredModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiHoveredDirective, TuiHoveredModule, TuiHoveredService };\n//# sourceMappingURL=taiga-ui-cdk-directives-hovered.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}