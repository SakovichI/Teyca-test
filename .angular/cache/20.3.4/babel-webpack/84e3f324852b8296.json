{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Optional, SkipSelf, Directive, InjectionToken, Self, Inject, Input, EventEmitter, ElementRef, Component, ChangeDetectionStrategy, ContentChild, ViewChild, Output, HostListener, NgModule } from '@angular/core';\nimport { TuiPositionAccessor } from '@taiga-ui/core/abstract';\nimport * as i1$1 from '@taiga-ui/cdk';\nimport { TuiDestroyService, tuiTypedFromEvent, tuiGetActualTarget, tuiIsNativeKeyboardFocusable, tuiGetClosestFocusable, tuiIsNativeFocusedIn, tuiIsHTMLElement, tuiIsElementEditable, tuiIsElement, tuiAsFocusableItemAccessor, TuiActiveZoneDirective, TuiLetModule, TuiObscuredModule, TuiActiveZoneModule } from '@taiga-ui/cdk';\nimport * as i2 from '@taiga-ui/core/directives';\nimport { TuiDropdownDirective, TuiDropdownOpenDirective } from '@taiga-ui/core/directives';\nimport { takeUntil, map, switchMap, delay, skip, distinctUntilChanged, share } from 'rxjs/operators';\nimport * as i1 from 'rxjs';\nimport { BehaviorSubject, combineLatest, of, EMPTY, merge } from 'rxjs';\nimport { __decorate } from 'tslib';\nimport * as i3 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdownHoverDirective, TuiDropdownDirective as TuiDropdownDirective$1, TuiDropdownModule, TuiDropdownOptionsDirective } from '@taiga-ui/core/directives/dropdown';\nimport { tuiIsEditingKey } from '@taiga-ui/core/utils/miscellaneous';\nimport { shouldCall } from '@tinkoff/ng-event-plugins';\nimport * as i5 from '@tinkoff/ng-polymorpheus';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"wrapper\"];\nconst _c1 = [\"*\"];\nconst _c2 = (a0, a1) => ({\n  $implicit: a0,\n  close: a1\n});\nfunction TuiHostedDropdownComponent_div_0_ng_template_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiHostedDropdownComponent_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6, 2);\n    i0.ɵɵlistener(\"keydown\", function TuiHostedDropdownComponent_div_0_ng_template_3_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onKeydown($event));\n    });\n    i0.ɵɵtemplate(2, TuiHostedDropdownComponent_div_0_ng_template_3_div_2_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\");\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const activeZone_r5 = i0.ɵɵreference(1);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.content)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction2(2, _c2, activeZone_r5, ctx_r1.close));\n  }\n}\nfunction TuiHostedDropdownComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4, 0);\n    i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiHostedDropdownComponent_div_0_Template_div_tuiActiveZoneChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActiveZone($event));\n    })(\"tuiObscured\", function TuiHostedDropdownComponent_div_0_Template_div_tuiObscured_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onHostObscured($event));\n    });\n    i0.ɵɵprojection(2);\n    i0.ɵɵtemplate(3, TuiHostedDropdownComponent_div_0_ng_template_3_Template, 4, 5, \"ng-template\", 5, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const isOpen_r6 = ctx.tuiLet;\n    const dropdown_r7 = i0.ɵɵreference(4);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tuiDropdown\", dropdown_r7)(\"tuiDropdownManual\", isOpen_r6 && ctx_r1.canOpen)(\"tuiDropdownOpenMonitor\", isOpen_r6 && ctx_r1.canOpen)(\"tuiDropdownSided\", ctx_r1.sided)(\"tuiObscuredEnabled\", isOpen_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"polymorpheus\", ctx_r1.context);\n  }\n}\nlet TuiAccessorProxyDirective = /*#__PURE__*/(() => {\n  class TuiAccessorProxyDirective extends TuiPositionAccessor {\n    constructor() {\n      super(...arguments);\n      this.type = 'dummy';\n    }\n    getPosition() {\n      return [0, 0];\n    }\n  }\n  TuiAccessorProxyDirective.ɵfac = /* @__PURE__ */(() => {\n    let ɵTuiAccessorProxyDirective_BaseFactory;\n    return function TuiAccessorProxyDirective_Factory(__ngFactoryType__) {\n      return (ɵTuiAccessorProxyDirective_BaseFactory || (ɵTuiAccessorProxyDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiAccessorProxyDirective)))(__ngFactoryType__ || TuiAccessorProxyDirective);\n    };\n  })();\n  TuiAccessorProxyDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiAccessorProxyDirective,\n    selectors: [[\"\", \"tuiAccessorProxy\", \"\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: TuiPositionAccessor,\n      multi: true,\n      deps: [[new Optional(), new SkipSelf(), TuiAccessorProxyDirective], TuiAccessorProxyDirective],\n      useFactory: (accessor, fallback) => accessor || fallback\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiAccessorProxyDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst TUI_HOSTED_DROPDOWN_COMPONENT = /*#__PURE__*/new InjectionToken('[TUI_HOSTED_DROPDOWN_COMPONENT]');\nlet TuiDropdownOpenMonitorDirective = /*#__PURE__*/(() => {\n  class TuiDropdownOpenMonitorDirective {\n    constructor(destroy$, hosted, dropdown, open) {\n      this.open = open;\n      if ((open === null || open === void 0 ? void 0 : open.dropdown) === dropdown) {\n        open.tuiDropdownOpenChange.pipe(takeUntil(destroy$)).subscribe(value => {\n          var _a;\n          if (value) {\n            (_a = hosted.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.focus();\n          }\n          hosted.updateOpen(value);\n        });\n      }\n    }\n    set tuiDropdownOpenMonitor(open) {\n      var _a;\n      (_a = this.open) === null || _a === void 0 ? void 0 : _a.update(open);\n    }\n  }\n  TuiDropdownOpenMonitorDirective.ɵfac = function TuiDropdownOpenMonitorDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiDropdownOpenMonitorDirective)(i0.ɵɵdirectiveInject(TuiDestroyService, 2), i0.ɵɵdirectiveInject(TUI_HOSTED_DROPDOWN_COMPONENT), i0.ɵɵdirectiveInject(TuiDropdownDirective, 2), i0.ɵɵdirectiveInject(TuiDropdownOpenDirective, 8));\n  };\n  TuiDropdownOpenMonitorDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiDropdownOpenMonitorDirective,\n    selectors: [[\"\", \"tuiDropdownOpenMonitor\", \"\"]],\n    inputs: {\n      tuiDropdownOpenMonitor: \"tuiDropdownOpenMonitor\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TuiDestroyService])]\n  });\n  return TuiDropdownOpenMonitorDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiHostedDropdownConnectorDirective = /*#__PURE__*/(() => {\n  class TuiHostedDropdownConnectorDirective {}\n  TuiHostedDropdownConnectorDirective.ɵfac = function TuiHostedDropdownConnectorDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHostedDropdownConnectorDirective)();\n  };\n  TuiHostedDropdownConnectorDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiHostedDropdownConnectorDirective,\n    selectors: [[\"\", \"tuiHostedDropdownHost\", \"\"]],\n    standalone: false\n  });\n  return TuiHostedDropdownConnectorDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction shouldClose(event) {\n  var _a;\n  return 'key' in event && event.key.toLowerCase() === 'escape' && this.canOpen && this.open && !((_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.nextElementSibling);\n}\nlet TuiHostedDropdownComponent = /*#__PURE__*/(() => {\n  class TuiHostedDropdownComponent {\n    constructor(hover$, el) {\n      this.hover$ = hover$;\n      this.el = el;\n      this.openChange$ = new BehaviorSubject(false);\n      this.hostHover$ = combineLatest([tuiTypedFromEvent(this.el.nativeElement, 'mouseover').pipe(map(e => this.computedHost.contains(tuiGetActualTarget(e))), switchMap(visible => {\n        var _a, _b;\n        return of(visible).pipe(delay((visible ? (_a = this.hover$) === null || _a === void 0 ? void 0 : _a.showDelay : (_b = this.hover$) === null || _b === void 0 ? void 0 : _b.hideDelay) || 0));\n      })), this.hover$ || EMPTY]).pipe(map(([visible, hovered]) => visible && hovered));\n      this.sided = false;\n      this.canOpen = true;\n      this.open$ = merge(this.openChange$, this.hostHover$).pipe(skip(1), distinctUntilChanged(), share());\n      this.focusedChange = new EventEmitter();\n      /** TODO: rename in 4.0 */\n      this.openChange = this.openChange$;\n      this.close = () => this.updateOpen(false);\n    }\n    set open(open) {\n      this.openChange.next(open);\n    }\n    get open() {\n      return this.openChange.value;\n    }\n    get host() {\n      var _a;\n      return ((_a = this.dropdownHost) === null || _a === void 0 ? void 0 : _a.nativeElement) || this.el.nativeElement;\n    }\n    get computedHost() {\n      var _a;\n      return ((_a = this.dropdownHost) === null || _a === void 0 ? void 0 : _a.nativeElement) || this.nativeFocusableElement || this.el.nativeElement;\n    }\n    get dropdown() {\n      var _a, _b;\n      return (_b = (_a = this.dropdownDirective) === null || _a === void 0 ? void 0 : _a.dropdownBoxRef) === null || _b === void 0 ? void 0 : _b.location.nativeElement;\n    }\n    get nativeFocusableElement() {\n      return tuiIsNativeKeyboardFocusable(this.host) ? this.host : tuiGetClosestFocusable({\n        initial: this.host,\n        root: this.el.nativeElement\n      });\n    }\n    get focused() {\n      return tuiIsNativeFocusedIn(this.host) || this.open && !!this.wrapper && tuiIsNativeFocusedIn(this.wrapper.nativeElement);\n    }\n    onFocusInOut() {\n      this.el.nativeElement.classList.toggle('_hosted_dropdown_focused', this.focused);\n    }\n    onFocusIn(target) {\n      if (!this.computedHost.contains(target)) {\n        this.updateOpen(false);\n      }\n    }\n    onClick(target) {\n      var _a;\n      if (!this.hostEditable && this.computedHost.contains(target) && !((_a = this.hover$) === null || _a === void 0 ? void 0 : _a.hovered)) {\n        this.updateOpen(!this.open);\n      }\n    }\n    onKeyDownEsc(event) {\n      event.preventDefault();\n      this.closeDropdown();\n    }\n    onArrow(event, down) {\n      this.focusDropdown(event, down);\n    }\n    onKeydown({\n      key,\n      target,\n      defaultPrevented\n    }) {\n      if (!defaultPrevented && tuiIsEditingKey(key) && this.hostEditable && tuiIsHTMLElement(target) && !tuiIsElementEditable(target)) {\n        this.focusHost();\n      }\n    }\n    onActiveZone(active) {\n      this.updateFocused(active);\n      if (!active) {\n        this.updateOpen(false);\n      }\n    }\n    onHostObscured(obscured) {\n      if (obscured) {\n        this.closeDropdown();\n      }\n    }\n    updateOpen(open) {\n      if (!open || this.canOpen) {\n        this.open = open;\n      }\n    }\n    get hostEditable() {\n      return tuiIsElementEditable(this.computedHost);\n    }\n    focusDropdown(event, first) {\n      const host = this.nativeFocusableElement;\n      if (!host || !tuiIsHTMLElement(host) || !tuiIsElement(event.target) || !host.contains(event.target)) {\n        return;\n      }\n      if (!this.wrapper || !this.open || !this.dropdown || !tuiIsHTMLElement(this.wrapper.nativeElement.nextElementSibling)) {\n        this.updateOpen(true);\n        if (!tuiIsElementEditable(host)) {\n          event.preventDefault();\n        }\n        return;\n      }\n      const initial = first ? this.wrapper.nativeElement : this.wrapper.nativeElement.nextElementSibling;\n      const focusable = tuiGetClosestFocusable({\n        initial,\n        root: this.wrapper.nativeElement,\n        previous: !first\n      });\n      if (!focusable) {\n        return;\n      }\n      focusable.focus();\n      event.preventDefault();\n    }\n    closeDropdown() {\n      if (this.focused) {\n        this.focusHost();\n      }\n      this.updateOpen(false);\n    }\n    focusHost() {\n      const host = this.nativeFocusableElement;\n      if (host) {\n        host.focus({\n          preventScroll: true\n        });\n      }\n    }\n    updateFocused(focused) {\n      this.focusedChange.emit(focused);\n    }\n  }\n  TuiHostedDropdownComponent.ɵfac = function TuiHostedDropdownComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHostedDropdownComponent)(i0.ɵɵdirectiveInject(TuiDropdownHoverDirective, 10), i0.ɵɵdirectiveInject(ElementRef));\n  };\n  TuiHostedDropdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiHostedDropdownComponent,\n    selectors: [[\"tui-hosted-dropdown\"]],\n    contentQueries: function TuiHostedDropdownComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TuiHostedDropdownConnectorDirective, 5, ElementRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownHost = _t.first);\n      }\n    },\n    viewQuery: function TuiHostedDropdownComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ElementRef);\n        i0.ɵɵviewQuery(TuiDropdownDirective$1, 5);\n        i0.ɵɵviewQuery(TuiActiveZoneDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownDirective = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.activeZone = _t.first);\n      }\n    },\n    hostBindings: function TuiHostedDropdownComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focusin.capture.silent\", function TuiHostedDropdownComponent_focusin_capture_silent_HostBindingHandler() {\n          return ctx.onFocusInOut();\n        })(\"focusout.capture.silent\", function TuiHostedDropdownComponent_focusout_capture_silent_HostBindingHandler() {\n          return ctx.onFocusInOut();\n        })(\"focusin\", function TuiHostedDropdownComponent_focusin_HostBindingHandler($event) {\n          return ctx.onFocusIn($event.target);\n        })(\"click\", function TuiHostedDropdownComponent_click_HostBindingHandler($event) {\n          return ctx.onClick($event.target);\n        })(\"keydown.silent.capture\", function TuiHostedDropdownComponent_keydown_silent_capture_HostBindingHandler($event) {\n          return ctx.onKeyDownEsc($event);\n        }, i0.ɵɵresolveDocument)(\"keydown.arrowDown\", function TuiHostedDropdownComponent_keydown_arrowDown_HostBindingHandler($event) {\n          return ctx.onArrow($event, true);\n        })(\"keydown.arrowUp\", function TuiHostedDropdownComponent_keydown_arrowUp_HostBindingHandler($event) {\n          return ctx.onArrow($event, false);\n        });\n      }\n    },\n    inputs: {\n      content: \"content\",\n      sided: \"sided\",\n      canOpen: \"canOpen\",\n      open: \"open\"\n    },\n    outputs: {\n      open$: \"openChange\",\n      focusedChange: \"focusedChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiHostedDropdownComponent), {\n      provide: TuiAccessorProxyDirective,\n      deps: [[new Optional(), new Self(), TuiPositionAccessor]],\n      useFactory: position => position === null || position === void 0 ? void 0 : position[0]\n    }, {\n      provide: TUI_HOSTED_DROPDOWN_COMPONENT,\n      useExisting: TuiHostedDropdownComponent\n    }])],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 3,\n    consts: [[\"activeZone\", \"tuiActiveZone\"], [\"dropdown\", \"polymorpheus\"], [\"wrapper\", \"\"], [\"tuiAccessorProxy\", \"\", \"class\", \"t-wrapper\", 3, \"tuiDropdown\", \"tuiDropdownManual\", \"tuiDropdownOpenMonitor\", \"tuiDropdownSided\", \"tuiObscuredEnabled\", \"tuiActiveZoneChange\", \"tuiObscured\", 4, \"tuiLet\"], [\"tuiAccessorProxy\", \"\", 1, \"t-wrapper\", 3, \"tuiActiveZoneChange\", \"tuiObscured\", \"tuiDropdown\", \"tuiDropdownManual\", \"tuiDropdownOpenMonitor\", \"tuiDropdownSided\", \"tuiObscuredEnabled\"], [3, \"polymorpheus\"], [1, \"t-dropdown\", 3, \"keydown\"], [\"class\", \"t-primitive\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [1, \"t-primitive\"]],\n    template: function TuiHostedDropdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, TuiHostedDropdownComponent_div_0_Template, 5, 6, \"div\", 3);\n        i0.ɵɵpipe(1, \"async\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.open$) ?? ctx.openChange.value);\n      }\n    },\n    dependencies: [i1$1.TuiLetDirective, TuiAccessorProxyDirective, i3.TuiDropdownDirective, i3.TuiDropdownDriverDirective, i3.TuiDropdownPositionDirective, i3.TuiDropdownManualDirective, TuiDropdownOpenMonitorDirective, i3.TuiDropdownPositionSidedDirective, i1$1.TuiActiveZoneDirective, i1$1.TuiObscuredDirective, i5.PolymorpheusTemplate, i5.PolymorpheusOutletDirective, i6.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:inline-flex}.t-wrapper[_ngcontent-%COMP%]{border-radius:inherit;height:inherit;flex:1 1 auto;width:100%}.t-dropdown[_ngcontent-%COMP%]{height:100%}.t-primitive[_ngcontent-%COMP%]{padding:1rem}\"],\n    changeDetection: 0\n  });\n  __decorate([shouldCall(shouldClose)], TuiHostedDropdownComponent.prototype, \"onKeyDownEsc\", null);\n  return TuiHostedDropdownComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiHostedDropdownModule = /*#__PURE__*/(() => {\n  class TuiHostedDropdownModule {}\n  TuiHostedDropdownModule.ɵfac = function TuiHostedDropdownModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiHostedDropdownModule)();\n  };\n  TuiHostedDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiHostedDropdownModule\n  });\n  TuiHostedDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiLetModule, TuiObscuredModule, TuiActiveZoneModule, TuiDropdownModule]]\n  });\n  return TuiHostedDropdownModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiAccessorProxyDirective, TuiDropdownOpenMonitorDirective, TuiHostedDropdownComponent, TuiHostedDropdownConnectorDirective, TuiHostedDropdownModule };\n//# sourceMappingURL=taiga-ui-core-components-hosted-dropdown.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}