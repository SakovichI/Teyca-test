{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NgControl, FormsModule } from '@angular/forms';\nimport * as i5 from '@taiga-ui/cdk';\nimport { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, TuiDay, tuiDateClamp, TuiMonth, TUI_IS_MOBILE, tuiAsFocusableItemAccessor, tuiAsControl, AbstractTuiControl, TuiDestroyService, TuiPreventDefaultModule, TuiMapperPipeModule } from '@taiga-ui/cdk';\nimport * as i1 from '@taiga-ui/core';\nimport { TUI_TEXTFIELD_SIZE, TuiMonthPipe, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';\nimport { TUI_MONTH_FORMATTER_PROVIDER } from '@taiga-ui/kit/providers';\nimport { TUI_MONTH_FORMATTER, TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';\nimport * as i2 from '@taiga-ui/kit/components/calendar-month';\nimport { TuiCalendarMonthModule } from '@taiga-ui/kit/components/calendar-month';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nfunction TuiInputMonthComponent_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 4);\n    i0.ɵɵlistener(\"click.stop.silent\", function TuiInputMonthComponent_input_6_Template_input_click_stop_silent_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView(0);\n    })(\"mousedown.stop.silent\", function TuiInputMonthComponent_input_6_Template_input_mousedown_stop_silent_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView(0);\n    })(\"ngModelChange\", function TuiInputMonthComponent_input_6_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onNativeChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"max\", ctx_r2.nativePickerMax)(\"min\", ctx_r2.nativePickerMin)(\"ngModel\", ctx_r2.nativeValue);\n  }\n}\nfunction TuiInputMonthComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar-month\", 5);\n    i0.ɵɵlistener(\"monthClick\", function TuiInputMonthComponent_ng_template_7_Template_tui_calendar_month_monthClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMonthClick($event));\n    })(\"yearChange\", function TuiInputMonthComponent_ng_template_7_Template_tui_calendar_month_yearChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activeYear = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r2.disabledItemHandler)(\"max\", ctx_r2.computedMax)(\"min\", ctx_r2.computedMin)(\"value\", ctx_r2.value)(\"year\", ctx_r2.computedDefaultActiveYear);\n  }\n}\nlet TuiInputMonthComponent = /*#__PURE__*/(() => {\n  class TuiInputMonthComponent extends AbstractTuiNullableControl {\n    constructor(control, cdr, formatter, isMobile, options, textfieldSize) {\n      super(control, cdr);\n      this.formatter = formatter;\n      this.isMobile = isMobile;\n      this.options = options;\n      this.textfieldSize = textfieldSize;\n      this.min = this.options.min;\n      this.max = this.options.max;\n      this.disabledItemHandler = ALWAYS_FALSE_HANDLER;\n      this.defaultActiveYear = TuiDay.currentLocal();\n      this.open = false;\n    }\n    get size() {\n      return this.textfieldSize.size;\n    }\n    get computedMin() {\n      var _a;\n      return (_a = this.min) !== null && _a !== void 0 ? _a : this.options.min;\n    }\n    get computedMax() {\n      var _a;\n      return (_a = this.max) !== null && _a !== void 0 ? _a : this.options.max;\n    }\n    get nativeFocusableElement() {\n      var _a;\n      return ((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || null;\n    }\n    get computedDefaultActiveYear() {\n      return this.activeYear || this.value || tuiDateClamp(this.defaultActiveYear, this.computedMin, this.computedMax);\n    }\n    get focused() {\n      var _a;\n      return !!((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.focused);\n    }\n    get calendarIcon() {\n      return this.options.icon;\n    }\n    get nativePicker() {\n      return this.isMobile && this.options.nativePicker;\n    }\n    get nativePickerMin() {\n      return this.computedMin.toJSON();\n    }\n    get nativePickerMax() {\n      return this.computedMax.toJSON();\n    }\n    get nativeValue() {\n      var _a;\n      return ((_a = this.value) === null || _a === void 0 ? void 0 : _a.toJSON()) || '';\n    }\n    onNativeChange(value) {\n      const [year, month] = value.split('-').map(Number);\n      this.value = value ? tuiDateClamp(new TuiMonth(year, month - 1), this.computedMin, this.computedMax) : null;\n    }\n    onValueChange(value) {\n      if (value) {\n        return;\n      }\n      this.value = null;\n      this.onOpenChange(!this.nativePicker);\n    }\n    onMonthClick(month) {\n      this.value = month;\n      this.close();\n    }\n    onFocused(focused) {\n      this.updateFocused(focused);\n    }\n    onOpenChange(open) {\n      if (open && this.value) {\n        this.activeYear = this.value;\n      }\n      this.open = open;\n    }\n    setDisabledState() {\n      super.setDisabledState();\n      this.close();\n    }\n    close() {\n      this.open = false;\n    }\n  }\n  TuiInputMonthComponent.ɵfac = function TuiInputMonthComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputMonthComponent)(i0.ɵɵdirectiveInject(NgControl, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(TUI_MONTH_FORMATTER), i0.ɵɵdirectiveInject(TUI_IS_MOBILE), i0.ɵɵdirectiveInject(TUI_INPUT_DATE_OPTIONS), i0.ɵɵdirectiveInject(TUI_TEXTFIELD_SIZE));\n  };\n  TuiInputMonthComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TuiInputMonthComponent,\n    selectors: [[\"tui-input-month\"]],\n    viewQuery: function TuiInputMonthComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function TuiInputMonthComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-size\", ctx.size);\n      }\n    },\n    inputs: {\n      min: \"min\",\n      max: \"max\",\n      disabledItemHandler: \"disabledItemHandler\",\n      defaultActiveYear: \"defaultActiveYear\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputMonthComponent), tuiAsControl(TuiInputMonthComponent), TUI_MONTH_FORMATTER_PROVIDER, TuiMonthPipe]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 9,\n    vars: 18,\n    consts: [[\"dropdown\", \"\"], [1, \"t-hosted\", 3, \"openChange\", \"canOpen\", \"content\", \"open\"], [1, \"t-textfield\", 3, \"focusedChange\", \"valueChange\", \"disabled\", \"editable\", \"invalid\", \"nativeId\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldIcon\", \"value\"], [\"type\", \"month\", \"class\", \"t-mobile\", 3, \"max\", \"min\", \"ngModel\", \"click.stop.silent\", \"mousedown.stop.silent\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"month\", 1, \"t-mobile\", 3, \"click.stop.silent\", \"mousedown.stop.silent\", \"ngModelChange\", \"max\", \"min\", \"ngModel\"], [\"tuiPreventDefault\", \"mousedown\", 3, \"monthClick\", \"yearChange\", \"disabledItemHandler\", \"max\", \"min\", \"value\", \"year\"]],\n    template: function TuiInputMonthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"tui-hosted-dropdown\", 1);\n        i0.ɵɵlistener(\"openChange\", function TuiInputMonthComponent_Template_tui_hosted_dropdown_openChange_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onOpenChange($event));\n        });\n        i0.ɵɵelementStart(1, \"tui-primitive-textfield\", 2);\n        i0.ɵɵpipe(2, \"tuiMapper\");\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵlistener(\"focusedChange\", function TuiInputMonthComponent_Template_tui_primitive_textfield_focusedChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onFocused($event));\n        })(\"valueChange\", function TuiInputMonthComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onValueChange($event));\n        });\n        i0.ɵɵprojection(4);\n        i0.ɵɵprojection(5, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n        i0.ɵɵtemplate(6, TuiInputMonthComponent_input_6_Template, 1, 3, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, TuiInputMonthComponent_ng_template_7_Template, 1, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const dropdown_r5 = i0.ɵɵreference(8);\n        i0.ɵɵproperty(\"canOpen\", ctx.interactive && !ctx.nativePicker)(\"content\", dropdown_r5)(\"open\", ctx.open && ctx.interactive);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"editable\", false)(\"invalid\", ctx.computedInvalid)(\"nativeId\", ctx.nativeId)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldIcon\", ctx.calendarIcon)(\"value\", i0.ɵɵpipeBind1(3, 16, i0.ɵɵpipeBind2(2, 13, ctx.value, ctx.formatter)) || \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.nativePicker);\n      }\n    },\n    dependencies: [i1.TuiHostedDropdownComponent, i1.TuiPrimitiveTextfieldComponent, i2.TuiCalendarMonthComponent, i1.TuiPrimitiveTextfieldDirective, i1.TuiTextfieldIconDirective, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.TuiPreventDefaultDirective, i3.AsyncPipe, i5.TuiMapperPipe],\n    styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}.t-mobile[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;border:0}\"],\n    changeDetection: 0\n  });\n  return TuiInputMonthComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputMonthDirective = /*#__PURE__*/(() => {\n  class TuiInputMonthDirective extends AbstractTuiTextfieldHost {\n    constructor(host, formatter, destroy$) {\n      super(host);\n      this.value$ = new Subject();\n      this.localizedValue = '';\n      this.value$.pipe(distinctUntilChanged(), switchMap(formatter), takeUntil(destroy$)).subscribe(localizedValue => {\n        this.localizedValue = localizedValue;\n      });\n    }\n    get readOnly() {\n      return true;\n    }\n    get value() {\n      return this.localizedValue;\n    }\n    ngDoCheck() {\n      this.value$.next(this.host.value);\n    }\n    onValueChange(value) {\n      this.host.onValueChange(value);\n    }\n  }\n  TuiInputMonthDirective.ɵfac = function TuiInputMonthDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputMonthDirective)(i0.ɵɵdirectiveInject(AbstractTuiControl), i0.ɵɵdirectiveInject(TUI_MONTH_FORMATTER), i0.ɵɵdirectiveInject(TuiDestroyService, 2));\n  };\n  TuiInputMonthDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TuiInputMonthDirective,\n    selectors: [[\"tui-input-month\"]],\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputMonthDirective), TuiDestroyService]), i0.ɵɵInheritDefinitionFeature]\n  });\n  return TuiInputMonthDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TuiInputMonthModule = /*#__PURE__*/(() => {\n  class TuiInputMonthModule {}\n  TuiInputMonthModule.ɵfac = function TuiInputMonthModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TuiInputMonthModule)();\n  };\n  TuiInputMonthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TuiInputMonthModule\n  });\n  TuiInputMonthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, TuiCalendarMonthModule, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiSvgModule, TuiPreventDefaultModule, TuiMapperPipeModule, TuiTextfieldControllerModule, FormsModule]]\n  });\n  return TuiInputMonthModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputMonthComponent, TuiInputMonthDirective, TuiInputMonthModule };\n//# sourceMappingURL=taiga-ui-kit-components-input-month.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}